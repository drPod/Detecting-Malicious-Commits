{
  "cve_id": "CVE-2024-32660",
  "github_data": {
    "repository": "FreeRDP/FreeRDP",
    "fix_commit": "5e5d27cf310e4c10b854be7667bfb7a5d774eb47",
    "related_commits": [
      "5e5d27cf310e4c10b854be7667bfb7a5d774eb47",
      "5e5d27cf310e4c10b854be7667bfb7a5d774eb47"
    ],
    "patch_url": "https://github.com/FreeRDP/FreeRDP/commit/5e5d27cf310e4c10b854be7667bfb7a5d774eb47.patch",
    "fix_commit_details": {
      "sha": "5e5d27cf310e4c10b854be7667bfb7a5d774eb47",
      "commit_date": "2024-04-20T17:59:48Z",
      "author": {
        "login": "akallabeth",
        "type": "User",
        "stats": {
          "total_commits": 7809,
          "average_weekly_commits": 11.029661016949152,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 486
        }
      },
      "commit_message": {
        "title": "[codec,zgfx] allocate in segment steps",
        "length": 169,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 75,
        "additions": 46,
        "deletions": 29
      },
      "files": [
        {
          "filename": "libfreerdp/codec/zgfx.c",
          "status": "modified",
          "additions": 46,
          "deletions": 29,
          "patch": "@@ -382,16 +382,46 @@ static BYTE* aligned_zgfx_malloc(size_t size)\n \treturn malloc(size + 64);\n }\n \n+static BOOL zgfx_append(ZGFX_CONTEXT* zgfx, BYTE** ppConcatenated, size_t uncompressedSize,\n+                        size_t* pUsed)\n+{\n+\tWINPR_ASSERT(zgfx);\n+\tWINPR_ASSERT(ppConcatenated);\n+\tWINPR_ASSERT(pUsed);\n+\n+\tconst size_t used = *pUsed;\n+\tif (zgfx->OutputCount > UINT32_MAX - used)\n+\t\treturn FALSE;\n+\n+\tif (used + zgfx->OutputCount > uncompressedSize)\n+\t\treturn FALSE;\n+\n+\tBYTE* tmp = realloc(*ppConcatenated, used + zgfx->OutputCount + 64ull);\n+\tif (!tmp)\n+\t\treturn FALSE;\n+\t*ppConcatenated = tmp;\n+\tCopyMemory(&tmp[used], zgfx->OutputBuffer, zgfx->OutputCount);\n+\t*pUsed = used + zgfx->OutputCount;\n+\treturn TRUE;\n+}\n+\n int zgfx_decompress(ZGFX_CONTEXT* zgfx, const BYTE* pSrcData, UINT32 SrcSize, BYTE** ppDstData,\n                     UINT32* pDstSize, UINT32 flags)\n {\n \tint status = -1;\n \tBYTE descriptor = 0;\n \twStream sbuffer = { 0 };\n+\tsize_t used = 0;\n+\tBYTE* pConcatenated = NULL;\n \twStream* stream = Stream_StaticConstInit(&sbuffer, pSrcData, SrcSize);\n \n \tWINPR_ASSERT(zgfx);\n \tWINPR_ASSERT(stream);\n+\tWINPR_ASSERT(ppDstData);\n+\tWINPR_ASSERT(pDstSize);\n+\n+\t*ppDstData = NULL;\n+\t*pDstSize = 0;\n \n \tif (!Stream_CheckAndLogRequiredLength(TAG, stream, 1))\n \t\tgoto fail;\n@@ -403,43 +433,29 @@ int zgfx_decompress(ZGFX_CONTEXT* zgfx, const BYTE* pSrcData, UINT32 SrcSize, BY\n \t\tif (!zgfx_decompress_segment(zgfx, stream, Stream_GetRemainingLength(stream)))\n \t\t\tgoto fail;\n \n-\t\t*ppDstData = NULL;\n-\n \t\tif (zgfx->OutputCount > 0)\n-\t\t\t*ppDstData = aligned_zgfx_malloc(zgfx->OutputCount);\n-\n-\t\tif (!*ppDstData)\n-\t\t\tgoto fail;\n-\n-\t\t*pDstSize = zgfx->OutputCount;\n-\t\tCopyMemory(*ppDstData, zgfx->OutputBuffer, zgfx->OutputCount);\n+\t\t{\n+\t\t\tif (!zgfx_append(zgfx, &pConcatenated, zgfx->OutputCount, &used))\n+\t\t\t\tgoto fail;\n+\t\t\tif (used != zgfx->OutputCount)\n+\t\t\t\tgoto fail;\n+\t\t\t*ppDstData = pConcatenated;\n+\t\t\t*pDstSize = zgfx->OutputCount;\n+\t\t}\n \t}\n \telse if (descriptor == ZGFX_SEGMENTED_MULTIPART)\n \t{\n \t\tUINT32 segmentSize = 0;\n \t\tUINT16 segmentNumber = 0;\n \t\tUINT16 segmentCount = 0;\n \t\tUINT32 uncompressedSize = 0;\n-\t\tBYTE* pConcatenated = NULL;\n-\t\tsize_t used = 0;\n \n \t\tif (!Stream_CheckAndLogRequiredLength(TAG, stream, 6))\n \t\t\tgoto fail;\n \n \t\tStream_Read_UINT16(stream, segmentCount);     /* segmentCount (2 bytes) */\n \t\tStream_Read_UINT32(stream, uncompressedSize); /* uncompressedSize (4 bytes) */\n \n-\t\tif (!Stream_CheckAndLogRequiredLengthOfSize(TAG, stream, segmentCount, sizeof(UINT32)))\n-\t\t\tgoto fail;\n-\n-\t\tpConcatenated = aligned_zgfx_malloc(uncompressedSize);\n-\n-\t\tif (!pConcatenated)\n-\t\t\tgoto fail;\n-\n-\t\t*ppDstData = pConcatenated;\n-\t\t*pDstSize = uncompressedSize;\n-\n \t\tfor (segmentNumber = 0; segmentNumber < segmentCount; segmentNumber++)\n \t\t{\n \t\t\tif (!Stream_CheckAndLogRequiredLength(TAG, stream, sizeof(UINT32)))\n@@ -450,16 +466,15 @@ int zgfx_decompress(ZGFX_CONTEXT* zgfx, const BYTE* pSrcData, UINT32 SrcSize, BY\n \t\t\tif (!zgfx_decompress_segment(zgfx, stream, segmentSize))\n \t\t\t\tgoto fail;\n \n-\t\t\tif (zgfx->OutputCount > UINT32_MAX - used)\n+\t\t\tif (!zgfx_append(zgfx, &pConcatenated, uncompressedSize, &used))\n \t\t\t\tgoto fail;\n+\t\t}\n \n-\t\t\tif (used + zgfx->OutputCount > uncompressedSize)\n-\t\t\t\tgoto fail;\n+\t\tif (used != uncompressedSize)\n+\t\t\tgoto fail;\n \n-\t\t\tCopyMemory(pConcatenated, zgfx->OutputBuffer, zgfx->OutputCount);\n-\t\t\tpConcatenated += zgfx->OutputCount;\n-\t\t\tused += zgfx->OutputCount;\n-\t\t}\n+\t\t*ppDstData = pConcatenated;\n+\t\t*pDstSize = uncompressedSize;\n \t}\n \telse\n \t{\n@@ -468,6 +483,8 @@ int zgfx_decompress(ZGFX_CONTEXT* zgfx, const BYTE* pSrcData, UINT32 SrcSize, BY\n \n \tstatus = 1;\n fail:\n+\tif (status < 0)\n+\t\tfree(pConcatenated);\n \treturn status;\n }\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "d0fb99715de93983522517eaf475303f3bcbf213",
            "date": "2025-01-14T11:16:30Z",
            "author_login": "akallabeth"
          },
          {
            "sha": "fca3b3d7db4f343d24c5072f139d88217fbb0ad2",
            "date": "2025-01-14T11:09:22Z",
            "author_login": "akallabeth"
          },
          {
            "sha": "6b577b167ec0b41d73cbb9a2336c245fd5954c0d",
            "date": "2025-01-14T08:59:48Z",
            "author_login": "akallabeth"
          },
          {
            "sha": "5a45a8cad4733ab4337711484210eadb97825944",
            "date": "2025-01-13T17:23:47Z",
            "author_login": "akallabeth"
          },
          {
            "sha": "d938f978a8ce46b66dfc0dc39e6115adcd3f548b",
            "date": "2025-01-14T07:30:15Z",
            "author_login": "akallabeth"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-770",
    "description": "FreeRDP is a free implementation of the Remote Desktop Protocol. Prior to version 3.5.1, a malicious server can crash the FreeRDP client by sending invalid huge allocation size. Version 3.5.1 contains a patch for the issue. No known workarounds are available.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-04-23T20:15:07.617",
    "last_modified": "2024-11-21T09:15:25.083",
    "fix_date": "2024-04-20T17:59:48Z"
  },
  "references": [
    {
      "url": "https://github.com/FreeRDP/FreeRDP/commit/5e5d27cf310e4c10b854be7667bfb7a5d774eb47",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/FreeRDP/FreeRDP/security/advisories/GHSA-mxv6-2cw6-m3mx",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/5JL476WVJSIE7SBUKVJRVA6A52V2HOLZ/",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/7SIS6NUNLUBOV4CPCSWKDE6T6C2W3WTR/",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/PX3U6YPZQ7PEJBVKSBUOLWVH7DHROHY5/",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZKI4UISUXYNBPN4K6TIQKDRTIJ6CDCKJ/",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://oss-fuzz.com/testcase-detail/5559242514825216",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/FreeRDP/FreeRDP/commit/5e5d27cf310e4c10b854be7667bfb7a5d774eb47",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/FreeRDP/FreeRDP/security/advisories/GHSA-mxv6-2cw6-m3mx",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/5JL476WVJSIE7SBUKVJRVA6A52V2HOLZ/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/7SIS6NUNLUBOV4CPCSWKDE6T6C2W3WTR/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/PX3U6YPZQ7PEJBVKSBUOLWVH7DHROHY5/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZKI4UISUXYNBPN4K6TIQKDRTIJ6CDCKJ/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://oss-fuzz.com/testcase-detail/5559242514825216",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:07.012272",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "FreeRDP",
    "owner": "FreeRDP",
    "created_at": "2011-06-30T19:14:15Z",
    "updated_at": "2025-01-14T11:51:38Z",
    "pushed_at": "2025-01-14T11:16:30Z",
    "size": 68011,
    "stars": 11214,
    "forks": 14938,
    "open_issues": 248,
    "watchers": 11214,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master",
      "stable-1.0",
      "stable-1.1",
      "stable-2.0"
    ],
    "languages": {
      "C": 17349509,
      "C++": 685511,
      "CMake": 627854,
      "Objective-C": 540407,
      "Java": 373726,
      "HTML": 99135,
      "Shell": 51324,
      "Python": 46681,
      "Lua": 27393,
      "Roff": 26338,
      "Perl": 8044,
      "C#": 5756,
      "CSS": 5696,
      "Makefile": 2420,
      "Rich Text Format": 937
    },
    "commit_activity": {
      "total_commits_last_year": 2287,
      "avg_commits_per_week": 43.98076923076923,
      "days_active_last_year": 268
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T13:01:37.323973"
  }
}