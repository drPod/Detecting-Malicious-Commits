{
  "cve_id": "CVE-2024-32871",
  "github_data": {
    "repository": "pimcore/pimcore",
    "fix_commit": "38af70b3130f16fc27f2aea34e2943d7bdaaba06",
    "related_commits": [
      "38af70b3130f16fc27f2aea34e2943d7bdaaba06",
      "a6821a16ea38086bf6012e682e1743488244bd85",
      "38af70b3130f16fc27f2aea34e2943d7bdaaba06",
      "a6821a16ea38086bf6012e682e1743488244bd85"
    ],
    "patch_url": "https://github.com/pimcore/pimcore/commit/38af70b3130f16fc27f2aea34e2943d7bdaaba06.patch",
    "fix_commit_details": {
      "sha": "38af70b3130f16fc27f2aea34e2943d7bdaaba06",
      "commit_date": "2024-05-13T12:48:07Z",
      "author": {
        "login": "mattamon",
        "type": "User",
        "stats": {
          "total_commits": 161,
          "average_weekly_commits": 0.32007952286282304,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 46
        }
      },
      "commit_message": {
        "title": "Fix thumbnail generation if asset or config is null",
        "length": 51,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 48,
        "additions": 31,
        "deletions": 17
      },
      "files": [
        {
          "filename": "models/Asset/Document/ImageThumbnail.php",
          "status": "modified",
          "additions": 5,
          "deletions": 4,
          "patch": "@@ -76,14 +76,15 @@ public function getPath(array $args = []): string\n      */\n     public function generate(bool $deferredAllowed = true): void\n     {\n-        if (!$this->checkAllowedFormats($this->config->getFormat(), $this->asset)) {\n-            throw new ThumbnailFormatNotSupportedException();\n-        }\n-\n         $deferred = $deferredAllowed && $this->deferred;\n         $generated = false;\n \n         if ($this->asset && empty($this->pathReference)) {\n+\n+            if (!$this->checkAllowedFormats($this->config->getFormat(), $this->asset)) {\n+                throw new ThumbnailFormatNotSupportedException();\n+            }\n+\n             $config = $this->getConfig();\n             $cacheFileStream = null;\n             $config->setFilenameSuffix('page-' . $this->page);"
        },
        {
          "filename": "models/Asset/Image/Thumbnail.php",
          "status": "modified",
          "additions": 19,
          "deletions": 7,
          "patch": "@@ -112,13 +112,7 @@ protected function useOriginalFile(string $filename): bool\n      */\n     public function generate(bool $deferredAllowed = true): void\n     {\n-        if (!$this->checkAllowedFormats($this->config->getFormat(), $this->asset)) {\n-            throw new ThumbnailFormatNotSupportedException();\n-        }\n-\n-        if (!$this->checkMaxScalingFactor($this->config->getHighResolution())) {\n-            throw new ThumbnailMaxScalingFactorException();\n-        }\n+        $this->validate();\n \n         $deferred = false;\n         $generated = false;\n@@ -460,4 +454,22 @@ private function getSrcset(Config $thumbConfig, Image $image, array $options, ?s\n \n         return implode(', ', $srcSetValues);\n     }\n+\n+    /**\n+     * @throws ThumbnailFormatNotSupportedException\n+     * @throws ThumbnailMaxScalingFactorException\n+     */\n+    private function validate(): void\n+    {\n+        if(!$this->asset || !$this->config) {\n+            return;\n+        }\n+        if (!$this->checkAllowedFormats($this->config->getFormat(), $this->asset)) {\n+            throw new ThumbnailFormatNotSupportedException();\n+        }\n+\n+        if (!$this->checkMaxScalingFactor($this->config->getHighResolution())) {\n+            throw new ThumbnailMaxScalingFactorException();\n+        }\n+    }\n }"
        },
        {
          "filename": "models/Asset/Thumbnail/ImageThumbnailTrait.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -434,7 +434,7 @@ private function checkAllowedFormats(string $format, ?Asset $asset = null): bool\n     {\n         $format = strtolower($format);\n         if($asset) {\n-            $original = pathinfo($asset->getRealFullPath(), PATHINFO_EXTENSION);\n+            $original = strtolower(pathinfo($asset->getRealFullPath(), PATHINFO_EXTENSION));\n             if ($format === $original || $format === 'source') {\n                 return true;\n             }"
        },
        {
          "filename": "models/Asset/Video/ImageThumbnail.php",
          "status": "modified",
          "additions": 6,
          "deletions": 5,
          "patch": "@@ -77,20 +77,21 @@ public function getPath(array $args = []): string\n     }\n \n     /**\n-     * @throws Exception\n+     * @throws Exception|\\League\\Flysystem\\FilesystemException|ThumbnailFormatNotSupportedException\n      *\n      * @internal\n      */\n     public function generate(bool $deferredAllowed = true): void\n     {\n-        if (!$this->checkAllowedFormats($this->config->getFormat(), $this->asset)) {\n-            throw new ThumbnailFormatNotSupportedException();\n-        }\n-\n         $deferred = $deferredAllowed && $this->deferred;\n         $generated = false;\n \n         if ($this->asset && empty($this->pathReference)) {\n+\n+            if (!$this->checkAllowedFormats($this->config->getFormat(), $this->asset)) {\n+                throw new ThumbnailFormatNotSupportedException();\n+            }\n+\n             $cs = $this->asset->getCustomSetting('image_thumbnail_time');\n             $im = $this->asset->getCustomSetting('image_thumbnail_asset');\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 4,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "a3c7544d81bc772dc53f7ea0e99c6eac37c59114",
            "date": "2025-01-14T13:54:55Z",
            "author_login": "herbertroth"
          },
          {
            "sha": "081e73f14983613ed43e6ea9e40450063392b289",
            "date": "2025-01-14T13:53:00Z",
            "author_login": "herbertroth"
          },
          {
            "sha": "bf1081a2c9a7de74ca965aa802ea07ac4e022b28",
            "date": "2025-01-14T13:52:39Z",
            "author_login": "herbertroth"
          },
          {
            "sha": "7a232e673e963325610264dc760d8d0dbdd7a0d1",
            "date": "2025-01-14T13:52:17Z",
            "author_login": "herbertroth"
          },
          {
            "sha": "cf380cd040bdbb134e62dd1fa9cb3954def8a595",
            "date": "2025-01-14T13:50:40Z",
            "author_login": "herbertroth"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-770",
    "description": "Pimcore is an Open Source Data & Experience Management Platform. The Pimcore thumbnail generation can be used to flood the server with large files. By changing the file extension or scaling factor of the requested thumbnail, attackers can create files that are much larger in file size than the original. This vulnerability is fixed in 11.2.4.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-06-04T15:15:45.757",
    "last_modified": "2024-11-21T09:15:54.353",
    "fix_date": "2024-05-13T12:48:07Z"
  },
  "references": [
    {
      "url": "https://github.com/pimcore/pimcore/commit/38af70b3130f16fc27f2aea34e2943d7bdaaba06",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/pimcore/pimcore/commit/a6821a16ea38086bf6012e682e1743488244bd85",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/pimcore/pimcore/security/advisories/GHSA-277c-5vvj-9pwx",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/pimcore/pimcore/commit/38af70b3130f16fc27f2aea34e2943d7bdaaba06",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/pimcore/pimcore/commit/a6821a16ea38086bf6012e682e1743488244bd85",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/pimcore/pimcore/security/advisories/GHSA-277c-5vvj-9pwx",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:26.336127",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "pimcore",
    "owner": "pimcore",
    "created_at": "2011-11-01T09:16:14Z",
    "updated_at": "2025-01-14T09:15:55Z",
    "pushed_at": "2025-01-13T14:41:25Z",
    "size": 524212,
    "stars": 3455,
    "forks": 1448,
    "open_issues": 480,
    "watchers": 3455,
    "has_security_policy": false,
    "default_branch": "11.x",
    "protected_branches": [
      "11.x",
      "11.5"
    ],
    "languages": {
      "PHP": 6722485,
      "JavaScript": 330727,
      "Twig": 9213,
      "CSS": 2342,
      "HTML": 687,
      "Shell": 538
    },
    "commit_activity": {
      "total_commits_last_year": 619,
      "avg_commits_per_week": 11.903846153846153,
      "days_active_last_year": 182
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T13:01:17.566039"
  }
}