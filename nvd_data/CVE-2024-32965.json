{
  "cve_id": "CVE-2024-32965",
  "github_data": {
    "repository": "lobehub/lobe-chat",
    "fix_commit": "e960a23b0c69a5762eb27d776d33dac443058faf",
    "related_commits": [
      "e960a23b0c69a5762eb27d776d33dac443058faf"
    ],
    "patch_url": "https://github.com/lobehub/lobe-chat/commit/e960a23b0c69a5762eb27d776d33dac443058faf.patch",
    "fix_commit_details": {
      "sha": "e960a23b0c69a5762eb27d776d33dac443058faf",
      "commit_date": "2024-09-20T15:46:21Z",
      "author": {
        "login": "arvinxx",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "\ud83d\udc1b fix: try to implement better ssrf-protect (#4044)",
        "length": 146,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 62,
        "additions": 24,
        "deletions": 38
      },
      "files": [
        {
          "filename": "package.json",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -203,6 +203,7 @@\n     \"remark\": \"^14.0.3\",\n     \"remark-gfm\": \"^3.0.1\",\n     \"remark-html\": \"^15.0.2\",\n+    \"request-filtering-agent\": \"^2.0.1\",\n     \"resolve-accept-language\": \"^3.1.5\",\n     \"rtl-detect\": \"^1.1.2\",\n     \"semver\": \"^7.6.3\","
        },
        {
          "filename": "src/app/api/proxy/route.ts",
          "status": "removed",
          "additions": 0,
          "deletions": 34,
          "patch": "@@ -1,34 +0,0 @@\n-import { isPrivate } from 'ip';\n-import { NextResponse } from 'next/server';\n-import dns from 'node:dns';\n-import { promisify } from 'node:util';\n-\n-const lookupAsync = promisify(dns.lookup);\n-\n-export const runtime = 'nodejs';\n-\n-/**\n- * just for a proxy\n- */\n-export const POST = async (req: Request) => {\n-  const url = new URL(await req.text());\n-  let address;\n-\n-  try {\n-    const lookupResult = await lookupAsync(url.hostname);\n-    address = lookupResult.address;\n-  } catch (err) {\n-    console.error(`${url.hostname} DNS parser error:`, err);\n-\n-    return NextResponse.json({ error: 'DNS parser error' }, { status: 504 });\n-  }\n-\n-  const isInternalHost = isPrivate(address);\n-\n-  if (isInternalHost)\n-    return NextResponse.json({ error: 'Not support internal host proxy' }, { status: 400 });\n-\n-  const res = await fetch(url.toString());\n-\n-  return new Response(res.body, { headers: res.headers });\n-};"
        },
        {
          "filename": "src/app/webapi/proxy/route.ts",
          "status": "added",
          "additions": 19,
          "deletions": 0,
          "patch": "@@ -0,0 +1,19 @@\n+import { NextResponse } from 'next/server';\n+import fetch from 'node-fetch';\n+import { useAgent as ssrfAgent } from 'request-filtering-agent';\n+\n+/**\n+ * just for a proxy\n+ */\n+export const POST = async (req: Request) => {\n+  const url = await req.text();\n+\n+  try {\n+    const res = await fetch(url, { agent: ssrfAgent(url) });\n+\n+    return new Response(await res.arrayBuffer(), { headers: { ...res.headers } });\n+  } catch (err) {\n+    console.error(err); // DNS lookup 127.0.0.1(family:4, host:127.0.0.1.nip.io) is not allowed. Because, It is private IP address.\n+    return NextResponse.json({ error: 'Not support internal host proxy' }, { status: 400 });\n+  }\n+};"
        },
        {
          "filename": "src/server/routers/lambda/user.ts",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -63,7 +63,7 @@ export const userRouter = router({\n     const sessionCount = await sessionModel.count();\n \n     return {\n-      canEnablePWAGuide: messageCount >= 2,\n+      canEnablePWAGuide: messageCount >= 4,\n       canEnableTrace: messageCount >= 4,\n       // \u6709\u6d88\u606f\uff0c\u6216\u8005\u521b\u5efa\u8fc7\u52a9\u624b\uff0c\u5219\u8ba4\u4e3a\u6709 conversation\n       hasConversation: messageCount > 0 || sessionCount > 1,"
        },
        {
          "filename": "src/services/_url.ts",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -1,4 +1,4 @@\n-// TODO: \u672a\u6765\u8def\u7531\u9700\u8981\u8fc1\u79fb\u5230 trpc or /webapi\n+// TODO: \u672a\u6765\u6240\u6709\u6838\u5fc3\u8def\u7531\u9700\u8981\u8fc1\u79fb\u5230 trpc\uff0c\u90e8\u5206\u4e0d\u9700\u8981\u8fc1\u79fb\u7684\u5219\u8d70 webapi\n \n /* eslint-disable sort-keys-fix/sort-keys-fix */\n import { transform } from 'lodash-es';\n@@ -17,7 +17,7 @@ const mapWithBasePath = <T extends object>(apis: T): T => {\n };\n \n export const API_ENDPOINTS = mapWithBasePath({\n-  proxy: '/api/proxy',\n+  proxy: '/webapi/proxy',\n   oauth: '/api/auth',\n \n   // agent markets"
        },
        {
          "filename": "src/services/user/client.ts",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -23,7 +23,7 @@ export class ClientService implements IUserService {\n \n     return {\n       avatar: user.avatar,\n-      canEnablePWAGuide: messageCount >= 2,\n+      canEnablePWAGuide: messageCount >= 4,\n       canEnableTrace: messageCount >= 4,\n       hasConversation: messageCount > 0 || sessionCount > 0,\n       isOnboard: true,"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 1,
        "dependency_files": 1,
        "test_files": 0,
        "unique_directories": 6,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "0f57f1edb26faa3dfa6c02ffcf7af2b3062db196",
            "date": "2025-01-14T18:42:41Z",
            "author_login": "lobehubbot"
          },
          {
            "sha": "90494bec6ee829293a319b0587721be3102e5c1d",
            "date": "2025-01-14T18:41:39Z",
            "author_login": "semantic-release-bot"
          },
          {
            "sha": "32013b49fb0ba6396dd2d54caaa9359c1b04352d",
            "date": "2025-01-14T18:33:51Z",
            "author_login": "arvinxx"
          },
          {
            "sha": "df082e5618d283d753fa53e92d9f9db5d7f003fa",
            "date": "2025-01-14T18:04:38Z",
            "author_login": "jannikmaierhoefer"
          },
          {
            "sha": "7c4f0f202d371583d1027f621fff706b1ab118f8",
            "date": "2025-01-14T17:59:06Z",
            "author_login": "lobehubbot"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.1,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:H/I:L/A:L",
    "cwe_id": "CWE-918",
    "description": "Lobe Chat is an open-source, AI chat framework. Versions of lobe-chat prior to 1.19.13 have an unauthorized ssrf vulnerability. An attacker can construct malicious requests to cause SSRF without logging in, attack intranet services, and leak sensitive information. The jwt token header X-Lobe-Chat-Auth strored proxy address and OpenAI API Key, can be modified to scan an internal network in the target lobe-web environment. This issue has been addressed in release version 1.19.13 and all users are advised to upgrade. There are no known workarounds for this vulnerability.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2024-11-26T19:15:23.343",
    "last_modified": "2024-11-26T19:15:23.343",
    "fix_date": "2024-09-20T15:46:21Z"
  },
  "references": [
    {
      "url": "https://github.com/lobehub/lobe-chat/commit/e960a23b0c69a5762eb27d776d33dac443058faf",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/lobehub/lobe-chat/security/advisories/GHSA-2xcc-vm3f-m8rw",
      "source": "security-advisories@github.com",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:09:31.306645",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "lobe-chat",
    "owner": "lobehub",
    "created_at": "2023-05-21T07:19:12Z",
    "updated_at": "2025-01-14T17:59:22Z",
    "pushed_at": "2025-01-14T17:59:18Z",
    "size": 311821,
    "stars": 51600,
    "forks": 11147,
    "open_issues": 536,
    "watchers": 51600,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "TypeScript": 5578907,
      "MDX": 11645,
      "JavaScript": 10584,
      "Shell": 9656,
      "Dockerfile": 7552,
      "CSS": 4903,
      "TeX": 1797
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T18:01:24.365688"
  }
}