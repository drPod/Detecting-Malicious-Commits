{
  "cve_id": "CVE-2024-32971",
  "github_data": {
    "repository": "apollographql/router",
    "fix_commit": "ff9f666598cd17661880fe7fc6e9c9611316e529",
    "related_commits": [
      "ff9f666598cd17661880fe7fc6e9c9611316e529",
      "ff9f666598cd17661880fe7fc6e9c9611316e529"
    ],
    "patch_url": "https://github.com/apollographql/router/commit/ff9f666598cd17661880fe7fc6e9c9611316e529.patch",
    "fix_commit_details": {
      "sha": "ff9f666598cd17661880fe7fc6e9c9611316e529",
      "commit_date": "2024-04-26T20:52:11Z",
      "author": {
        "login": "abernix",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "release: v1.45.1 (#5009)",
        "length": 24,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 773,
        "additions": 388,
        "deletions": 385
      },
      "files": [
        {
          "filename": ".circleci/config.yml",
          "status": "modified",
          "additions": 8,
          "deletions": 8,
          "patch": "@@ -48,14 +48,14 @@ executors:\n       # See https://circleci.com/docs/xcode-policy along with the support matrix\n       # at https://circleci.com/docs/using-macos#supported-xcode-versions.\n       # We use the major.minor notation to bring in compatible patches.\n-      xcode: 14.2\n+      xcode: \"14.2.0\"\n     resource_class: macos.m1.medium.gen1\n   macos_test: &macos_test_executor\n     macos:\n       # See https://circleci.com/docs/xcode-policy along with the support matrix\n       # at https://circleci.com/docs/using-macos#supported-xcode-versions.\n       # We use the major.minor notation to bring in compatible patches.\n-      xcode: 14.2\n+      xcode: \"14.2.0\"\n     resource_class: macos.m1.medium.gen1\n   windows_build: &windows_build_executor\n     machine:\n@@ -201,7 +201,7 @@ commands:\n             find xtask/src -type f | while read name; do md5sum $name; done | sort -k 2 | md5sum > ~/.xtask_version\n             # The closest common ancestor to the default branch, so that test jobs can take advantage previous compiles\n             git remote set-head origin -a\n-            TARGET_BRANCH=$(git rev-parse --abbrev-ref origin/HEAD)    \n+            TARGET_BRANCH=$(git rev-parse --abbrev-ref origin/HEAD)\n             echo \"Target branch is ${TARGET_BRANCH}\"\n             COMMON_ANCESTOR_REF=$(git merge-base HEAD \"${TARGET_BRANCH}\")\n             echo \"Common ancestor is ${COMMON_ANCESTOR_REF}\"\n@@ -715,8 +715,8 @@ jobs:\n                   # save containers for analysis\n                   mkdir built-containers\n                   docker save -o built-containers/router_${VERSION}-debug.tar ${ROUTER_TAG}:${VERSION}-debug\n-                  docker save -o built-containers/router_${VERSION}.tar ${ROUTER_TAG}:${VERSION}  \n-                 \n+                  docker save -o built-containers/router_${VERSION}.tar ${ROUTER_TAG}:${VERSION}\n+\n             - persist_to_workspace:\n                 root: .\n                 paths:\n@@ -971,8 +971,8 @@ workflows:\n           # Disables all PR comments from this job\n           do-pr-comments: false\n           # Scan job will return 1 if findings violating the Wiz policy are found.\n-          # Toggle off to prevent any CI failures OR \n-          # contact Apollo's Security team to adjust what violates the \n+          # Toggle off to prevent any CI failures OR\n+          # contact Apollo's Security team to adjust what violates the\n           # Wiz policy used in this scan.\n           fail-on-findings: true\n           # Configure scan job to use a policy specific to apollo-router.\n@@ -1069,7 +1069,7 @@ workflows:\n               ignore: /.*/\n             tags:\n               only: /v.*/\n-  \n+\n   security-scans:\n     when:\n       not: << pipeline.parameters.nightly >>"
        },
        {
          "filename": "CHANGELOG.md",
          "status": "modified",
          "additions": 34,
          "deletions": 0,
          "patch": "@@ -4,8 +4,37 @@ All notable changes to Router will be documented in this file.\n \n This project adheres to [Semantic Versioning v2.0.0](https://semver.org/spec/v2.0.0.html).\n \n+# [1.45.1] - 2024-04-26\n+\n+## \ud83d\udc1b Fixes\n+\n+### Correct v1.44.0 regression in query plan cache ([PR #5028](https://github.com/apollographql/router/pull/5028))\n+\n+Correct a critical regression that was introduced in [v1.44.0](https://github.com/apollographql/router/pull/4883) which could lead to execution of an incorrect query plan.\n+\n+By [@o0Ignition0o](https://github.com/o0Ignition0o) in https://github.com/apollographql/router/pull/5028\n+\n+### Use entire schema when hashing an introspection query ([Issue #5006](https://github.com/apollographql/router/issues/5006))\n+\n+Correct a _different_ hashing bug which impacted introspection queries which was also introduced in [v1.44.0](https://github.com/apollographql/router/pull/4883).  This other hashing bug failed to account for introspection queries, resulting in introspection results being misaligned to the current schema. \n+\n+This release fixes the hashing mechanism by adding the schema string to hashed data if an introspection field is encountered. As a result, the entire schema is taken into account and the correct introspection result is returned.\n+\n+By [@Geal](https://github.com/Geal) in https://github.com/apollographql/router/pull/5007\n+\n+### Fix subgraph name mapping of Datadog exporter ([PR #5012](https://github.com/apollographql/router/pull/5012))\n+\n+Previously in the router v1.45.0, subgraph name mapping didn't work correctly in the router's Datadog exporter. The exporter used the incorrect value `apollo.subgraph.name` for mapping attributes when it should have used the value `subgraph.name`. This issue has been fixed in this release.\n+\n+By [@garypen](https://github.com/garypen) in https://github.com/apollographql/router/pull/5012\n+\n+\n # [1.45.0] - 2024-04-22\n \n+> **Warning**\n+>\n+> **This version has a critical bug impacting all users.  See the _Fixes_ in [v1.45.1](https://github.com/apollographql/router/releases/tag/v1.45.1) for details.  We highly recommend using v1.45.1 or v1.43.2 over v1.45.0.**\n+\n ## \ud83d\ude80 Features\n \n ### Query validation process with Rust ([PR #4551](https://github.com/apollographql/router/pull/4551))\n@@ -154,6 +183,11 @@ By [@bonnici](https://github.com/bonnici) in https://github.com/apollographql/ro\n \n # [1.44.0] - 2024-04-12\n \n+> **Warning**\n+>\n+> **This version has a critical bug impacting all users.  See the _Fixes_ in [v1.45.1](https://github.com/apollographql/router/releases/tag/v1.45.1) for details.  We highly recommend using v1.45.1 or v1.43.2 over v1.44.0.**\n+\n+\n ## \ud83d\ude80 Features\n \n ### Add details to `router service call failed` errors ([Issue #4899](https://github.com/apollographql/router/issues/4899))"
        },
        {
          "filename": "Cargo.lock",
          "status": "modified",
          "additions": 3,
          "deletions": 3,
          "patch": "@@ -250,7 +250,7 @@ dependencies = [\n \n [[package]]\n name = \"apollo-router\"\n-version = \"1.45.0\"\n+version = \"1.45.1\"\n dependencies = [\n  \"access-json\",\n  \"anyhow\",\n@@ -411,7 +411,7 @@ dependencies = [\n \n [[package]]\n name = \"apollo-router-benchmarks\"\n-version = \"1.45.0\"\n+version = \"1.45.1\"\n dependencies = [\n  \"apollo-parser\",\n  \"apollo-router\",\n@@ -427,7 +427,7 @@ dependencies = [\n \n [[package]]\n name = \"apollo-router-scaffold\"\n-version = \"1.45.0\"\n+version = \"1.45.1\"\n dependencies = [\n  \"anyhow\",\n  \"cargo-scaffold\","
        },
        {
          "filename": "apollo-router-benchmarks/Cargo.toml",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -1,6 +1,6 @@\n [package]\n name = \"apollo-router-benchmarks\"\n-version = \"1.45.0\"\n+version = \"1.45.1\"\n authors = [\"Apollo Graph, Inc. <packages@apollographql.com>\"]\n edition = \"2021\"\n license = \"Elastic-2.0\""
        },
        {
          "filename": "apollo-router-scaffold/Cargo.toml",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -1,6 +1,6 @@\n [package]\n name = \"apollo-router-scaffold\"\n-version = \"1.45.0\"\n+version = \"1.45.1\"\n authors = [\"Apollo Graph, Inc. <packages@apollographql.com>\"]\n edition = \"2021\"\n license = \"Elastic-2.0\""
        },
        {
          "filename": "apollo-router-scaffold/templates/base/Cargo.toml",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -22,7 +22,7 @@ apollo-router = { path =\"{{integration_test}}apollo-router\" }\n apollo-router = { git=\"https://github.com/apollographql/router.git\", branch=\"{{branch}}\" }\n {{else}}\n # Note if you update these dependencies then also update xtask/Cargo.toml\n-apollo-router = \"1.45.0\"\n+apollo-router = \"1.45.1\"\n {{/if}}\n {{/if}}\n async-trait = \"0.1.52\""
        },
        {
          "filename": "apollo-router-scaffold/templates/base/xtask/Cargo.toml",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -13,7 +13,7 @@ apollo-router-scaffold = { path =\"{{integration_test}}apollo-router-scaffold\" }\n {{#if branch}}\n apollo-router-scaffold = { git=\"https://github.com/apollographql/router.git\", branch=\"{{branch}}\" }\n {{else}}\n-apollo-router-scaffold = { git = \"https://github.com/apollographql/router.git\", tag = \"v1.45.0\" }\n+apollo-router-scaffold = { git = \"https://github.com/apollographql/router.git\", tag = \"v1.45.1\" }\n {{/if}}\n {{/if}}\n anyhow = \"1.0.58\""
        },
        {
          "filename": "apollo-router/Cargo.toml",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -1,6 +1,6 @@\n [package]\n name = \"apollo-router\"\n-version = \"1.45.0\"\n+version = \"1.45.1\"\n authors = [\"Apollo Graph, Inc. <packages@apollographql.com>\"]\n repository = \"https://github.com/apollographql/router/\"\n documentation = \"https://docs.rs/apollo-router\""
        },
        {
          "filename": "apollo-router/src/plugins/progressive_override/snapshots/apollo_router__plugins__progressive_override__tests__non_overridden_field_yields_expected_query_plan.snap",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -18,7 +18,7 @@ expression: query_plan\n           \"id\": null,\n           \"inputRewrites\": null,\n           \"outputRewrites\": null,\n-          \"schemaAwareHash\": \"9358047754b11522aac502a3c6a668cd4286c07d489680834e63d6e033db4eb5\",\n+          \"schemaAwareHash\": \"12dda6193654ae4fe6e38bc09d4f81cc73d0c9e098692096f72d2158eef4776f\",\n           \"authorization\": {\n             \"is_authenticated\": false,\n             \"scopes\": [],"
        },
        {
          "filename": "apollo-router/src/plugins/progressive_override/snapshots/apollo_router__plugins__progressive_override__tests__overridden_field_yields_expected_query_plan.snap",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -23,7 +23,7 @@ expression: query_plan\n               \"id\": null,\n               \"inputRewrites\": null,\n               \"outputRewrites\": null,\n-              \"schemaAwareHash\": \"8f445761c0bcdda90b8da35ccd13fd98e474514f3efc071bd2c39495b5af94e5\",\n+              \"schemaAwareHash\": \"00ad582ea45fc1bce436b36b21512f3d2c47b74fdbdc61e4b349289722c9ecf2\",\n               \"authorization\": {\n                 \"is_authenticated\": false,\n                 \"scopes\": [],\n@@ -61,7 +61,7 @@ expression: query_plan\n                 \"id\": null,\n                 \"inputRewrites\": null,\n                 \"outputRewrites\": null,\n-                \"schemaAwareHash\": \"9a1feab7ee8c57c8a4ab4db29712412a9cfe94009bfcb40dc0d22ea54c410865\",\n+                \"schemaAwareHash\": \"a8ebdc2151a2e5207882e43c6906c0c64167fd9a8e0c7c4becc47736a5105096\",\n                 \"authorization\": {\n                   \"is_authenticated\": false,\n                   \"scopes\": [],"
        },
        {
          "filename": "apollo-router/src/plugins/snapshots/apollo_router__plugins__expose_query_plan__tests__it_expose_query_plan-2.snap",
          "status": "modified",
          "additions": 4,
          "deletions": 4,
          "patch": "@@ -68,7 +68,7 @@ expression: \"serde_json::to_value(response).unwrap()\"\n               \"id\": null,\n               \"inputRewrites\": null,\n               \"outputRewrites\": null,\n-              \"schemaAwareHash\": \"34be619a78867ab9d0670048f4c93574e38cd9253e9cc032f567078355b25086\",\n+              \"schemaAwareHash\": \"7245d488e97c3b2ac9f5fa4dd4660940b94ad81af070013305b2c0f76337b2f9\",\n               \"authorization\": {\n                 \"is_authenticated\": false,\n                 \"scopes\": [],\n@@ -107,7 +107,7 @@ expression: \"serde_json::to_value(response).unwrap()\"\n                 \"id\": null,\n                 \"inputRewrites\": null,\n                 \"outputRewrites\": null,\n-                \"schemaAwareHash\": \"f1582d942020b23347d84f6ae46c018492ae7c59c9b1472e0b442121ddf16368\",\n+                \"schemaAwareHash\": \"6e0b4156706ea0cf924500cfdc99dd44b9f0ed07e2d3f888d4aff156e6a33238\",\n                 \"authorization\": {\n                   \"is_authenticated\": false,\n                   \"scopes\": [],\n@@ -153,7 +153,7 @@ expression: \"serde_json::to_value(response).unwrap()\"\n                     \"id\": null,\n                     \"inputRewrites\": null,\n                     \"outputRewrites\": null,\n-                    \"schemaAwareHash\": \"6fa5a74c5af2b18f343e9e69bbcbc9335e9faaa46c3d8964d199002dfeb0026f\",\n+                    \"schemaAwareHash\": \"ff649f3d70241d5a8cd5f5d03ff4c41ecff72b0e4129a480207b05ac92318042\",\n                     \"authorization\": {\n                       \"is_authenticated\": false,\n                       \"scopes\": [],\n@@ -196,7 +196,7 @@ expression: \"serde_json::to_value(response).unwrap()\"\n                     \"id\": null,\n                     \"inputRewrites\": null,\n                     \"outputRewrites\": null,\n-                    \"schemaAwareHash\": \"6fa5a74c5af2b18f343e9e69bbcbc9335e9faaa46c3d8964d199002dfeb0026f\",\n+                    \"schemaAwareHash\": \"bf9f3beda78a7a565e47c862157bad4ec871d724d752218da1168455dddca074\",\n                     \"authorization\": {\n                       \"is_authenticated\": false,\n                       \"scopes\": [],"
        },
        {
          "filename": "apollo-router/src/plugins/snapshots/apollo_router__plugins__expose_query_plan__tests__it_expose_query_plan.snap",
          "status": "modified",
          "additions": 4,
          "deletions": 4,
          "patch": "@@ -68,7 +68,7 @@ expression: \"serde_json::to_value(response).unwrap()\"\n               \"id\": null,\n               \"inputRewrites\": null,\n               \"outputRewrites\": null,\n-              \"schemaAwareHash\": \"34be619a78867ab9d0670048f4c93574e38cd9253e9cc032f567078355b25086\",\n+              \"schemaAwareHash\": \"7245d488e97c3b2ac9f5fa4dd4660940b94ad81af070013305b2c0f76337b2f9\",\n               \"authorization\": {\n                 \"is_authenticated\": false,\n                 \"scopes\": [],\n@@ -107,7 +107,7 @@ expression: \"serde_json::to_value(response).unwrap()\"\n                 \"id\": null,\n                 \"inputRewrites\": null,\n                 \"outputRewrites\": null,\n-                \"schemaAwareHash\": \"f1582d942020b23347d84f6ae46c018492ae7c59c9b1472e0b442121ddf16368\",\n+                \"schemaAwareHash\": \"6e0b4156706ea0cf924500cfdc99dd44b9f0ed07e2d3f888d4aff156e6a33238\",\n                 \"authorization\": {\n                   \"is_authenticated\": false,\n                   \"scopes\": [],\n@@ -153,7 +153,7 @@ expression: \"serde_json::to_value(response).unwrap()\"\n                     \"id\": null,\n                     \"inputRewrites\": null,\n                     \"outputRewrites\": null,\n-                    \"schemaAwareHash\": \"6fa5a74c5af2b18f343e9e69bbcbc9335e9faaa46c3d8964d199002dfeb0026f\",\n+                    \"schemaAwareHash\": \"ff649f3d70241d5a8cd5f5d03ff4c41ecff72b0e4129a480207b05ac92318042\",\n                     \"authorization\": {\n                       \"is_authenticated\": false,\n                       \"scopes\": [],\n@@ -196,7 +196,7 @@ expression: \"serde_json::to_value(response).unwrap()\"\n                     \"id\": null,\n                     \"inputRewrites\": null,\n                     \"outputRewrites\": null,\n-                    \"schemaAwareHash\": \"6fa5a74c5af2b18f343e9e69bbcbc9335e9faaa46c3d8964d199002dfeb0026f\",\n+                    \"schemaAwareHash\": \"bf9f3beda78a7a565e47c862157bad4ec871d724d752218da1168455dddca074\",\n                     \"authorization\": {\n                       \"is_authenticated\": false,\n                       \"scopes\": [],"
        },
        {
          "filename": "apollo-router/src/plugins/telemetry/apollo_exporter.rs",
          "status": "modified",
          "additions": 0,
          "deletions": 14,
          "patch": "@@ -442,17 +442,3 @@ where\n         None => serializer.serialize_none(),\n     }\n }\n-\n-#[cfg(not(windows))] // git checkout converts \\n to \\r\\n, making == below fail\n-#[test]\n-fn check_reports_proto_is_up_to_date() {\n-    let proto_url = \"https://usage-reporting.api.apollographql.com/proto/reports.proto\";\n-    let response = reqwest::blocking::get(proto_url).unwrap();\n-    let content = response.text().unwrap();\n-    // Not using assert_eq! as printing the entire file would be too verbose\n-    assert!(\n-        content == include_str!(\"proto/reports.proto\"),\n-        \"Protobuf file is out of date. Run this command to update it:\\n\\n    \\\n-            curl -f {proto_url} > apollo-router/src/plugins/telemetry/proto/reports.proto\\n\\n\"\n-    );\n-}"
        },
        {
          "filename": "apollo-router/src/plugins/telemetry/tracing/datadog.rs",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -29,7 +29,7 @@ lazy_static! {\n         map.insert(\"request\", \"http.route\");\n         map.insert(\"supergraph\", \"graphql.operation.name\");\n         map.insert(\"query_planning\", \"graphql.operation.name\");\n-        map.insert(\"subgraph\", \"apollo.subgraph.name\");\n+        map.insert(\"subgraph\", \"subgraph.name\");\n         map.insert(\"subgraph_request\", \"graphql.operation.name\");\n         map\n     };"
        },
        {
          "filename": "apollo-router/src/query_planner/bridge_query_planner.rs",
          "status": "modified",
          "additions": 17,
          "deletions": 7,
          "patch": "@@ -379,7 +379,9 @@ impl BridgeQueryPlanner {\n             .into_result()\n         {\n             Ok(mut plan) => {\n-                plan.data.query_plan.hash_subqueries(&self.subgraph_schemas);\n+                plan.data\n+                    .query_plan\n+                    .hash_subqueries(&self.subgraph_schemas, &self.schema.raw_sdl);\n                 plan.data\n                     .query_plan\n                     .extract_authorization_metadata(&self.schema.definitions, &key);\n@@ -583,19 +585,22 @@ impl Service<QueryPlannerRequest> for BridgeQueryPlanner {\n                 Some(d) => d,\n             };\n \n-            let schema = &this.schema.api_schema().definitions;\n-            match add_defer_labels(schema, &doc.ast) {\n+            let api_schema = this.schema.api_schema();\n+            let api_schema_definitions = &api_schema.definitions;\n+            match add_defer_labels(api_schema_definitions, &doc.ast) {\n                 Err(e) => {\n                     return Err(QueryPlannerError::SpecError(SpecError::TransformError(\n                         e.to_string(),\n                     )))\n                 }\n                 Ok(modified_query) => {\n                     let executable_document = modified_query\n-                        .to_executable_validate(schema)\n+                        .to_executable_validate(api_schema_definitions)\n+                        // Assume transformation creates a valid document: ignore conversion errors\n                         .map_err(|e| SpecError::ValidationError(e.into()))?;\n                     let hash = QueryHashVisitor::hash_query(\n-                        schema,\n+                        api_schema_definitions,\n+                        &api_schema.raw_sdl,\n                         &executable_document,\n                         operation_name.as_deref(),\n                     )\n@@ -715,6 +720,7 @@ impl BridgeQueryPlanner {\n                 .map_err(|e| SpecError::ValidationError(e.into()))?;\n             let hash = QueryHashVisitor::hash_query(\n                 &self.schema.definitions,\n+                &self.schema.raw_sdl,\n                 &executable_document,\n                 key.operation_name.as_deref(),\n             )\n@@ -807,9 +813,13 @@ struct QueryPlan {\n }\n \n impl QueryPlan {\n-    fn hash_subqueries(&mut self, schemas: &HashMap<String, Arc<Valid<apollo_compiler::Schema>>>) {\n+    fn hash_subqueries(\n+        &mut self,\n+        schemas: &HashMap<String, Arc<Valid<apollo_compiler::Schema>>>,\n+        supergraph_schema_hash: &str,\n+    ) {\n         if let Some(node) = self.node.as_mut() {\n-            node.hash_subqueries(schemas);\n+            node.hash_subqueries(schemas, supergraph_schema_hash);\n         }\n     }\n "
        },
        {
          "filename": "apollo-router/src/query_planner/caching_query_planner.rs",
          "status": "modified",
          "additions": 5,
          "deletions": 0,
          "patch": "@@ -141,6 +141,7 @@ where\n                             hash,\n                             metadata,\n                             plan_options,\n+                            ..\n                         },\n                         _,\n                     )| WarmUpCachingQueryKey {\n@@ -206,6 +207,7 @@ where\n                 query: query.clone(),\n                 operation: operation.clone(),\n                 hash: doc.hash.clone(),\n+                sdl: Arc::clone(&self.schema.raw_sdl),\n                 metadata,\n                 plan_options,\n             };\n@@ -386,6 +388,7 @@ where\n             query: request.query.clone(),\n             operation: request.operation_name.to_owned(),\n             hash: doc.hash.clone(),\n+            sdl: Arc::clone(&self.schema.raw_sdl),\n             metadata,\n             plan_options,\n         };\n@@ -522,6 +525,7 @@ fn stats_report_key_hash(stats_report_key: &str) -> String {\n #[derive(Debug, Clone, PartialEq, Eq)]\n pub(crate) struct CachingQueryKey {\n     pub(crate) query: String,\n+    pub(crate) sdl: Arc<String>,\n     pub(crate) operation: Option<String>,\n     pub(crate) hash: Arc<QueryHash>,\n     pub(crate) metadata: CacheKeyMetadata,\n@@ -541,6 +545,7 @@ impl std::fmt::Display for CachingQueryKey {\n         hasher.update(\n             &serde_json::to_vec(&self.plan_options).expect(\"serialization should not fail\"),\n         );\n+        hasher.update(&serde_json::to_vec(&self.sdl).expect(\"serialization should not fail\"));\n         let metadata = hex::encode(hasher.finalize());\n \n         write!("
        },
        {
          "filename": "apollo-router/src/query_planner/fetch.rs",
          "status": "modified",
          "additions": 11,
          "deletions": 3,
          "patch": "@@ -497,12 +497,20 @@ impl FetchNode {\n         &self.operation_kind\n     }\n \n-    pub(crate) fn hash_subquery(&mut self, schema: &Valid<apollo_compiler::Schema>) {\n+    pub(crate) fn hash_subquery(\n+        &mut self,\n+        schema: &Valid<apollo_compiler::Schema>,\n+        supergraph_schema_hash: &str,\n+    ) {\n         let doc = ExecutableDocument::parse(schema, &self.operation, \"query.graphql\")\n             .expect(\"subgraph queries should be valid\");\n \n-        if let Ok(hash) = QueryHashVisitor::hash_query(schema, &doc, self.operation_name.as_deref())\n-        {\n+        if let Ok(hash) = QueryHashVisitor::hash_query(\n+            schema,\n+            supergraph_schema_hash,\n+            &doc,\n+            self.operation_name.as_deref(),\n+        ) {\n             self.schema_aware_hash = Arc::new(QueryHash(hash));\n         }\n     }"
        },
        {
          "filename": "apollo-router/src/query_planner/plan.rs",
          "status": "modified",
          "additions": 12,
          "deletions": 9,
          "patch": "@@ -315,40 +315,43 @@ impl PlanNode {\n     pub(crate) fn hash_subqueries(\n         &mut self,\n         schemas: &HashMap<String, Arc<Valid<apollo_compiler::Schema>>>,\n+        supergraph_schema_hash: &str,\n     ) {\n         match self {\n             PlanNode::Fetch(fetch_node) => {\n                 if let Some(schema) = schemas.get(&fetch_node.service_name) {\n-                    fetch_node.hash_subquery(schema);\n+                    fetch_node.hash_subquery(schema, supergraph_schema_hash);\n                 }\n             }\n \n             PlanNode::Sequence { nodes } => {\n                 for node in nodes {\n-                    node.hash_subqueries(schemas);\n+                    node.hash_subqueries(schemas, supergraph_schema_hash);\n                 }\n             }\n             PlanNode::Parallel { nodes } => {\n                 for node in nodes {\n-                    node.hash_subqueries(schemas);\n+                    node.hash_subqueries(schemas, supergraph_schema_hash);\n                 }\n             }\n-            PlanNode::Flatten(flatten) => flatten.node.hash_subqueries(schemas),\n+            PlanNode::Flatten(flatten) => flatten\n+                .node\n+                .hash_subqueries(schemas, supergraph_schema_hash),\n             PlanNode::Defer { primary, deferred } => {\n                 if let Some(node) = primary.node.as_mut() {\n-                    node.hash_subqueries(schemas);\n+                    node.hash_subqueries(schemas, supergraph_schema_hash);\n                 }\n                 for deferred_node in deferred {\n                     if let Some(node) = deferred_node.node.take() {\n                         let mut new_node = (*node).clone();\n-                        new_node.hash_subqueries(schemas);\n+                        new_node.hash_subqueries(schemas, supergraph_schema_hash);\n                         deferred_node.node = Some(Arc::new(new_node));\n                     }\n                 }\n             }\n             PlanNode::Subscription { primary: _, rest } => {\n                 if let Some(node) = rest.as_mut() {\n-                    node.hash_subqueries(schemas);\n+                    node.hash_subqueries(schemas, supergraph_schema_hash);\n                 }\n             }\n             PlanNode::Condition {\n@@ -357,10 +360,10 @@ impl PlanNode {\n                 else_clause,\n             } => {\n                 if let Some(node) = if_clause.as_mut() {\n-                    node.hash_subqueries(schemas);\n+                    node.hash_subqueries(schemas, supergraph_schema_hash);\n                 }\n                 if let Some(node) = else_clause.as_mut() {\n-                    node.hash_subqueries(schemas);\n+                    node.hash_subqueries(schemas, supergraph_schema_hash);\n                 }\n             }\n         }"
        },
        {
          "filename": "apollo-router/src/query_planner/snapshots/apollo_router__query_planner__bridge_query_planner__tests__plan_root.snap",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -14,7 +14,7 @@ Fetch(\n         input_rewrites: None,\n         output_rewrites: None,\n         schema_aware_hash: QueryHash(\n-            \"68a86d7602ea2876e77b84d7942f585ef6b6101887bb2979d1f0af3b28c9a0ed\",\n+            \"a4ab3ffe0fd7863aea8cd1e85d019d2c64ec0351d62f9759bed3c9dc707ea315\",\n         ),\n         authorization: CacheKeyMetadata {\n             is_authenticated: false,"
        },
        {
          "filename": "apollo-router/src/spec/query.rs",
          "status": "modified",
          "additions": 12,
          "deletions": 5,
          "patch": "@@ -280,8 +280,9 @@ impl Query {\n                 return Err(SpecError::ParseError(errors.into()));\n             }\n         };\n-        let schema = &schema.api_schema().definitions;\n-        let executable_document = match ast.to_executable_validate(schema) {\n+        let api_schema = schema.api_schema();\n+        let api_schema_definitions = &api_schema.definitions;\n+        let executable_document = match ast.to_executable_validate(api_schema_definitions) {\n             Ok(doc) => doc,\n             Err(errors) => {\n                 return Err(SpecError::ValidationError(errors.into()));\n@@ -292,8 +293,14 @@ impl Query {\n         let recursion_limit = parser.recursion_reached();\n         tracing::trace!(?recursion_limit, \"recursion limit data\");\n \n-        let hash = QueryHashVisitor::hash_query(schema, &executable_document, operation_name)\n-            .map_err(|e| SpecError::QueryHashing(e.to_string()))?;\n+        let hash = QueryHashVisitor::hash_query(\n+            api_schema_definitions,\n+            &api_schema.raw_sdl,\n+            &executable_document,\n+            operation_name,\n+        )\n+        .map_err(|e| SpecError::QueryHashing(e.to_string()))?;\n+\n         Ok(Arc::new(ParsedDocumentInner {\n             ast,\n             executable: Arc::new(executable_document),\n@@ -343,7 +350,7 @@ impl Query {\n             .map(|operation| Operation::from_hir(operation, schema, &mut defer_stats, &fragments))\n             .collect::<Result<Vec<_>, SpecError>>()?;\n \n-        let mut visitor = QueryHashVisitor::new(&schema.definitions, document);\n+        let mut visitor = QueryHashVisitor::new(&schema.definitions, &schema.raw_sdl, document);\n         traverse::document(&mut visitor, document, operation_name).map_err(|e| {\n             SpecError::QueryHashing(format!(\"could not calculate the query hash: {e}\"))\n         })?;"
        },
        {
          "filename": "apollo-router/src/spec/query/change.rs",
          "status": "modified",
          "additions": 162,
          "deletions": 30,
          "patch": "@@ -33,26 +33,34 @@ pub(crate) const JOIN_TYPE_DIRECTIVE_NAME: &str = \"join__type\";\n /// then the hash will stay the same\n pub(crate) struct QueryHashVisitor<'a> {\n     schema: &'a schema::Schema,\n+    // TODO: remove once introspection has been moved out of query planning\n+    // For now, introspection is stiull handled by the planner, so when an\n+    // introspection query is hashed, it should take the whole schema into account\n+    schema_str: &'a str,\n     hasher: Sha256,\n     fragments: HashMap<&'a ast::Name, &'a Node<executable::Fragment>>,\n     hashed_types: HashSet<String>,\n     // name, field\n     hashed_fields: HashSet<(String, String)>,\n+    seen_introspection: bool,\n     join_field_directive_name: Option<String>,\n     join_type_directive_name: Option<String>,\n }\n \n impl<'a> QueryHashVisitor<'a> {\n     pub(crate) fn new(\n         schema: &'a schema::Schema,\n+        schema_str: &'a str,\n         executable: &'a executable::ExecutableDocument,\n     ) -> Self {\n         Self {\n             schema,\n+            schema_str,\n             hasher: Sha256::new(),\n             fragments: executable.fragments.iter().collect(),\n             hashed_types: HashSet::new(),\n             hashed_fields: HashSet::new(),\n+            seen_introspection: false,\n             // should we just return an error if we do not find those directives?\n             join_field_directive_name: Schema::directive_name(\n                 schema,\n@@ -71,11 +79,13 @@ impl<'a> QueryHashVisitor<'a> {\n \n     pub(crate) fn hash_query(\n         schema: &'a schema::Schema,\n+        schema_str: &'a str,\n         executable: &'a executable::ExecutableDocument,\n         operation_name: Option<&str>,\n     ) -> Result<Vec<u8>, BoxError> {\n-        let mut visitor = QueryHashVisitor::new(schema, executable);\n+        let mut visitor = QueryHashVisitor::new(schema, schema_str, executable);\n         traverse::document(&mut visitor, executable, operation_name)?;\n+        executable.to_string().hash(&mut visitor);\n         Ok(visitor.finish())\n     }\n \n@@ -357,6 +367,12 @@ impl<'a> Visitor for QueryHashVisitor<'a> {\n         field_def: &ast::FieldDefinition,\n         node: &executable::Field,\n     ) -> Result<(), BoxError> {\n+        if !self.seen_introspection && (field_def.name == \"__schema\" || field_def.name == \"__type\")\n+        {\n+            self.seen_introspection = true;\n+            self.schema_str.hash(self);\n+        }\n+\n         self.hash_field(\n             parent_type.to_string(),\n             field_def.name.as_str().to_string(),\n@@ -411,9 +427,37 @@ mod tests {\n     use super::QueryHashVisitor;\n     use crate::spec::query::traverse;\n \n+    #[derive(Debug)]\n+    struct HashComparator {\n+        from_visitor: String,\n+        from_hash_query: String,\n+    }\n+\n+    impl From<(String, String)> for HashComparator {\n+        fn from(value: (String, String)) -> Self {\n+            Self {\n+                from_visitor: value.0,\n+                from_hash_query: value.1,\n+            }\n+        }\n+    }\n+\n+    // The non equality check is not the same\n+    // as one would expect from PartialEq.\n+    // This is why HashComparator doesn't implement it.\n+    impl HashComparator {\n+        fn equals(&self, other: &Self) -> bool {\n+            self.from_visitor == other.from_visitor && self.from_hash_query == other.from_hash_query\n+        }\n+        fn doesnt_match(&self, other: &Self) -> bool {\n+            // This is intentional, we check to prevent BOTH hashes from being equal\n+            self.from_visitor != other.from_visitor && self.from_hash_query != other.from_hash_query\n+        }\n+    }\n+\n     #[track_caller]\n-    fn hash(schema: &str, query: &str) -> String {\n-        let schema = Schema::parse(schema, \"schema.graphql\")\n+    fn hash(schema_str: &str, query: &str) -> HashComparator {\n+        let schema = Schema::parse(schema_str, \"schema.graphql\")\n             .unwrap()\n             .validate()\n             .unwrap();\n@@ -424,22 +468,26 @@ mod tests {\n             .unwrap()\n             .validate(&schema)\n             .unwrap();\n-        let mut visitor = QueryHashVisitor::new(&schema, &exec);\n+        let mut visitor = QueryHashVisitor::new(&schema, schema_str, &exec);\n         traverse::document(&mut visitor, &exec, None).unwrap();\n \n-        hex::encode(visitor.finish())\n+        (\n+            hex::encode(visitor.finish()),\n+            hex::encode(QueryHashVisitor::hash_query(&schema, schema_str, &exec, None).unwrap()),\n+        )\n+            .into()\n     }\n \n     #[track_caller]\n-    fn hash_subgraph_query(schema: &str, query: &str) -> String {\n-        let schema = Valid::assume_valid(Schema::parse(schema, \"schema.graphql\").unwrap());\n+    fn hash_subgraph_query(schema_str: &str, query: &str) -> String {\n+        let schema = Valid::assume_valid(Schema::parse(schema_str, \"schema.graphql\").unwrap());\n         let doc = Document::parse(query, \"query.graphql\").unwrap();\n         let exec = doc\n             .to_executable(&schema)\n             .unwrap()\n             .validate(&schema)\n             .unwrap();\n-        let mut visitor = QueryHashVisitor::new(&schema, &exec);\n+        let mut visitor = QueryHashVisitor::new(&schema, schema_str, &exec);\n         traverse::document(&mut visitor, &exec, None).unwrap();\n \n         hex::encode(visitor.finish())\n@@ -479,20 +527,18 @@ mod tests {\n         }\n         \"#;\n         let query = \"query { me { name } }\";\n-        assert_eq!(hash(schema1, query), hash(schema2, query));\n+        assert!(hash(schema1, query).equals(&hash(schema2, query)));\n \n         // id is nullable in 1, non nullable in 2\n         let query = \"query { me { id name } }\";\n-        assert_ne!(hash(schema1, query), hash(schema2, query));\n+        assert!(hash(schema1, query).doesnt_match(&hash(schema2, query)));\n \n         // simple normalization\n         let query = \"query {  moi: me { name   } }\";\n-        assert_eq!(hash(schema1, query), hash(schema2, query));\n+        assert!(hash(schema1, query).equals(&hash(schema2, query)));\n \n-        assert_ne!(\n-            hash(schema1, \"query { me { id name } }\"),\n-            hash(schema1, \"query { me { name id } }\")\n-        );\n+        assert!(hash(schema1, \"query { me { id name } }\")\n+            .doesnt_match(&hash(schema1, \"query { me { name id } }\")));\n     }\n \n     #[test]\n@@ -532,13 +578,13 @@ mod tests {\n         }\n         \"#;\n         let query = \"query { me { name } }\";\n-        assert_eq!(hash(schema1, query), hash(schema2, query));\n+        assert!(hash(schema1, query).equals(&hash(schema2, query)));\n \n         let query = \"query { me { id name } }\";\n-        assert_ne!(hash(schema1, query), hash(schema2, query));\n+        assert!(hash(schema1, query).doesnt_match(&hash(schema2, query)));\n \n         let query = \"query { customer { id } }\";\n-        assert_ne!(hash(schema1, query), hash(schema2, query));\n+        assert!(hash(schema1, query).doesnt_match(&hash(schema2, query)));\n     }\n \n     #[test]\n@@ -586,13 +632,13 @@ mod tests {\n         \"#;\n \n         let query = \"query { me { id name } }\";\n-        assert_eq!(hash(schema1, query), hash(schema2, query));\n+        assert!(hash(schema1, query).equals(&hash(schema2, query)));\n \n         let query = \"query { customer { id } }\";\n-        assert_ne!(hash(schema1, query), hash(schema2, query));\n+        assert!(hash(schema1, query).doesnt_match(&hash(schema2, query)));\n \n         let query = \"query { customer { ... on User { name } } }\";\n-        assert_ne!(hash(schema1, query), hash(schema2, query));\n+        assert!(hash(schema1, query).doesnt_match(&hash(schema2, query)));\n     }\n \n     #[test]\n@@ -614,19 +660,19 @@ mod tests {\n         \"#;\n \n         let query = \"query { a(i: 0) }\";\n-        assert_ne!(hash(schema1, query), hash(schema2, query));\n+        assert!(hash(schema1, query).doesnt_match(&hash(schema2, query)));\n \n         let query = \"query { b }\";\n-        assert_ne!(hash(schema1, query), hash(schema2, query));\n+        assert!(hash(schema1, query).doesnt_match(&hash(schema2, query)));\n \n         let query = \"query { b(i: 0)}\";\n-        assert_ne!(hash(schema1, query), hash(schema2, query));\n+        assert!(hash(schema1, query).doesnt_match(&hash(schema2, query)));\n \n         let query = \"query { c(j: 0)}\";\n-        assert_ne!(hash(schema1, query), hash(schema2, query));\n+        assert!(hash(schema1, query).doesnt_match(&hash(schema2, query)));\n \n         let query = \"query { c(i:0, j: 0)}\";\n-        assert_ne!(hash(schema1, query), hash(schema2, query));\n+        assert!(hash(schema1, query).doesnt_match(&hash(schema2, query)));\n     }\n \n     #[test]\n@@ -817,10 +863,10 @@ mod tests {\n         }\n         \"#;\n         let query = \"query { me { name } }\";\n-        assert_ne!(hash(schema1, query), hash(schema2, query));\n+        assert!(hash(schema1, query).doesnt_match(&hash(schema2, query)));\n \n         let query = \"query { itf { name } }\";\n-        assert_ne!(hash(schema1, query), hash(schema2, query));\n+        assert!(hash(schema1, query).doesnt_match(&hash(schema2, query)));\n     }\n \n     #[test]\n@@ -945,9 +991,95 @@ mod tests {\n         }\n         \"#;\n         let query = \"query { me { username } }\";\n-        assert_ne!(hash(schema1, query), hash(schema2, query));\n+        assert!(hash(schema1, query).doesnt_match(&hash(schema2, query)));\n \n         let query = \"query { me { a } }\";\n-        assert_ne!(hash(schema1, query), hash(schema2, query));\n+        assert!(hash(schema1, query).doesnt_match(&hash(schema2, query)));\n+    }\n+\n+    #[test]\n+    fn introspection() {\n+        let schema1: &str = r#\"\n+        schema {\n+          query: Query\n+        }\n+    \n+        type Query {\n+          me: User\n+          customer: User\n+        }\n+    \n+        type User {\n+          id: ID\n+          name: String\n+        }\n+        \"#;\n+\n+        let schema2: &str = r#\"\n+        schema {\n+            query: Query\n+        }\n+    \n+        type Query {\n+          me: NotUser\n+        }\n+    \n+    \n+        type NotUser {\n+          id: ID!\n+          name: String\n+        }\n+        \"#;\n+\n+        let query = \"{ __schema { types { name } } }\";\n+\n+        assert!(hash(schema1, query).doesnt_match(&hash(schema2, query)));\n+    }\n+\n+    #[test]\n+    fn fields_with_different_arguments_have_different_hashes() {\n+        let schema: &str = r#\"\n+        schema {\n+          query: Query\n+        }\n+    \n+        type Query {\n+          test(arg: Int): String\n+        }\n+        \"#;\n+\n+        let query_one = \"query { a: test(arg: 1) b: test(arg: 2) }\";\n+        let query_two = \"query { a: test(arg: 1) b: test(arg: 3) }\";\n+\n+        // This assertion tests an internal hash function that isn't directly\n+        // used for the query hash, and we'll need to make it pass to rely\n+        // solely on the internal function again.\n+        //\n+        // assert!(hash(schema, query_one).doesnt_match(&hash(schema,\n+        // query_two)));\n+        assert!(hash(schema, query_one).from_hash_query != hash(schema, query_two).from_hash_query);\n+    }\n+\n+    #[test]\n+    fn fields_with_different_aliases_have_different_hashes() {\n+        let schema: &str = r#\"\n+        schema {\n+          query: Query\n+        }\n+    \n+        type Query {\n+          test(arg: Int): String\n+        }\n+        \"#;\n+\n+        let query_one = \"query { a: test }\";\n+        let query_two = \"query { b: test }\";\n+\n+        // This assertion tests an internal hash function that isn't directly\n+        // used for the query hash, and we'll need to make it pass to rely\n+        // solely on the internal function again.\n+        //\n+        // assert!(hash(schema, query_one).doesnt_match(&hash(schema, query_two)));\n+        assert!(hash(schema, query_one).from_hash_query != hash(schema, query_two).from_hash_query);\n     }\n }"
        },
        {
          "filename": "apollo-router/tests/integration/redis.rs",
          "status": "modified",
          "additions": 95,
          "deletions": 53,
          "patch": "@@ -28,12 +28,12 @@ mod test {\n         // 2. run `docker compose up -d` and connect to the redis container by running `docker exec -ti <container_id> /bin/bash`.\n         // 3. Run the `redis-cli` command from the shell and start the redis `monitor` command.\n         // 4. Run this test and yank the updated cache key from the redis logs.\n-        let known_cache_key = \"plan:v2.7.2:af1ee357bc75cfbbcc6adda41089a56e7d1d52f6d44c049739dde2c259314f58:3973e022e93220f9212c18d0d0c543ae7c309e46640da93a4a0314de999f5112:2bf7810d3a47b31d8a77ebb09cdc784a3f77306827dc55b06770030a858167c7\";\n+        let known_cache_key = \"plan:v2.7.2:121b9859eba2d8fa6dde0a54b6e3781274cf69f7ffb0af912e92c01c6bfff6ca:3973e022e93220f9212c18d0d0c543ae7c309e46640da93a4a0314de999f5112:5c7a72fa35639949328548d77b56dba2e77d0dfa90c19b69978da119e996bb92\";\n \n-        let config = RedisConfig::from_url(\"redis://127.0.0.1:6379\")?;\n+        let config = RedisConfig::from_url(\"redis://127.0.0.1:6379\").unwrap();\n         let client = RedisClient::new(config, None, None, None);\n         let connection_task = client.connect();\n-        client.wait_for_connect().await?;\n+        client.wait_for_connect().await.unwrap();\n \n         client.del::<String, _>(known_cache_key).await.unwrap();\n \n@@ -53,17 +53,25 @@ mod test {\n                         }\n                     }\n                 }\n-            }))?\n+            }))\n+            .unwrap()\n             .schema(include_str!(\"../fixtures/supergraph.graphql\"))\n             .build_supergraph()\n-            .await?;\n+            .await\n+            .unwrap();\n \n         let request = supergraph::Request::fake_builder()\n             .query(r#\"{ topProducts { name name2:name } }\"#)\n             .method(Method::POST)\n-            .build()?;\n+            .build()\n+            .unwrap();\n \n-        let _ = supergraph.oneshot(request).await?.next_response().await;\n+        let _ = supergraph\n+            .oneshot(request)\n+            .await\n+            .unwrap()\n+            .next_response()\n+            .await;\n \n         let s: String = match client.get(known_cache_key).await {\n             Ok(s) => s,\n@@ -116,16 +124,24 @@ mod test {\n                         }\n                     }\n                 }\n-            }))?\n+            }))\n+            .unwrap()\n             .schema(include_str!(\"../fixtures/supergraph.graphql\"))\n             .build_supergraph()\n-            .await?;\n+            .await\n+            .unwrap();\n \n         let request = supergraph::Request::fake_builder()\n             .query(r#\"{ topProducts { name name2:name } }\"#)\n             .method(Method::POST)\n-            .build()?;\n-        let _ = supergraph.oneshot(request).await?.next_response().await;\n+            .build()\n+            .unwrap();\n+        let _ = supergraph\n+            .oneshot(request)\n+            .await\n+            .unwrap()\n+            .next_response()\n+            .await;\n         let new_exp: i64 = client\n             .custom_raw(cmd!(\"EXPIRETIME\"), vec![known_cache_key.to_string()])\n             .await\n@@ -135,7 +151,7 @@ mod test {\n \n         assert!(exp < new_exp);\n \n-        client.quit().await?;\n+        client.quit().await.unwrap();\n         // calling quit ends the connection and event listener tasks\n         let _ = connection_task.await;\n         Ok(())\n@@ -149,10 +165,10 @@ mod test {\n \n     #[tokio::test(flavor = \"multi_thread\")]\n     async fn apq() -> Result<(), BoxError> {\n-        let config = RedisConfig::from_url(\"redis://127.0.0.1:6379\")?;\n+        let config = RedisConfig::from_url(\"redis://127.0.0.1:6379\").unwrap();\n         let client = RedisClient::new(config, None, None, None);\n         let connection_task = client.connect();\n-        client.wait_for_connect().await?;\n+        client.wait_for_connect().await.unwrap();\n \n         let config = json!({\n             \"apq\": {\n@@ -172,10 +188,12 @@ mod test {\n \n         let router = apollo_router::TestHarness::builder()\n             .with_subgraph_network_requests()\n-            .configuration_json(config.clone())?\n+            .configuration_json(config.clone())\n+            .unwrap()\n             .schema(include_str!(\"../fixtures/supergraph.graphql\"))\n             .build_router()\n-            .await?;\n+            .await\n+            .unwrap();\n \n         let query_hash = \"4c45433039407593557f8a982dafd316a66ec03f0e1ed5fa1b7ef8060d76e8ec\";\n \n@@ -194,19 +212,22 @@ mod test {\n         let request: router::Request = supergraph::Request::fake_builder()\n             .extension(\"persistedQuery\", persisted.clone())\n             .method(Method::POST)\n-            .build()?\n+            .build()\n+            .unwrap()\n             .try_into()\n             .unwrap();\n \n         let res = router\n             .clone()\n             .oneshot(request)\n-            .await?\n+            .await\n+            .unwrap()\n             .into_graphql_response_stream()\n             .await\n             .next()\n             .await\n-            .unwrap()?;\n+            .unwrap()\n+            .unwrap();\n         assert_eq!(\n             res.errors.first().unwrap().message,\n             \"PersistedQueryNotFound\"\n@@ -220,19 +241,22 @@ mod test {\n             .query(r#\"{ topProducts { name name2:name } }\"#)\n             .extension(\"persistedQuery\", persisted.clone())\n             .method(Method::POST)\n-            .build()?\n+            .build()\n+            .unwrap()\n             .try_into()\n             .unwrap();\n \n         let res = router\n             .clone()\n             .oneshot(request)\n-            .await?\n+            .await\n+            .unwrap()\n             .into_graphql_response_stream()\n             .await\n             .next()\n             .await\n-            .unwrap()?;\n+            .unwrap()\n+            .unwrap();\n         assert!(res.data.is_some());\n         assert!(res.errors.is_empty());\n \n@@ -243,43 +267,48 @@ mod test {\n         // it should have the same connection to Redis, but the in memory cache has been reset\n         let router = apollo_router::TestHarness::builder()\n             .with_subgraph_network_requests()\n-            .configuration_json(config.clone())?\n+            .configuration_json(config.clone())\n+            .unwrap()\n             .schema(include_str!(\"../fixtures/supergraph.graphql\"))\n             .build_router()\n-            .await?;\n+            .await\n+            .unwrap();\n \n         // a request with only the hash should succeed because it is stored in Redis\n         let request: router::Request = supergraph::Request::fake_builder()\n             .extension(\"persistedQuery\", persisted.clone())\n             .method(Method::POST)\n-            .build()?\n+            .build()\n+            .unwrap()\n             .try_into()\n             .unwrap();\n \n         let res = router\n             .clone()\n             .oneshot(request)\n-            .await?\n+            .await\n+            .unwrap()\n             .into_graphql_response_stream()\n             .await\n             .next()\n             .await\n-            .unwrap()?;\n+            .unwrap()\n+            .unwrap();\n         assert!(res.data.is_some());\n         assert!(res.errors.is_empty());\n \n-        client.quit().await?;\n+        client.quit().await.unwrap();\n         // calling quit ends the connection and event listener tasks\n         let _ = connection_task.await;\n         Ok(())\n     }\n \n     #[tokio::test(flavor = \"multi_thread\")]\n     async fn entity_cache() -> Result<(), BoxError> {\n-        let config = RedisConfig::from_url(\"redis://127.0.0.1:6379\")?;\n+        let config = RedisConfig::from_url(\"redis://127.0.0.1:6379\").unwrap();\n         let client = RedisClient::new(config, None, None, None);\n         let connection_task = client.connect();\n-        client.wait_for_connect().await?;\n+        client.wait_for_connect().await.unwrap();\n \n         let mut subgraphs = MockedSubgraphs::default();\n         subgraphs.insert(\n@@ -357,7 +386,8 @@ mod test {\n                 \"include_subgraph_errors\": {\n                     \"all\": true\n                 }\n-            }))?\n+            }))\n+            .unwrap()\n             .extra_plugin(subgraphs)\n             .schema(include_str!(\"../fixtures/supergraph-auth.graphql\"))\n             .build_supergraph()\n@@ -367,24 +397,26 @@ mod test {\n         let request = supergraph::Request::fake_builder()\n             .query(r#\"{ topProducts { name reviews { body } } }\"#)\n             .method(Method::POST)\n-            .build()?;\n+            .build()\n+            .unwrap();\n \n         let response = supergraph\n             .oneshot(request)\n-            .await?\n+            .await\n+            .unwrap()\n             .next_response()\n             .await\n             .unwrap();\n         insta::assert_json_snapshot!(response);\n \n         let s:String = client\n-          .get(\"subgraph:products:Query:07bd08ba4eb8b85451edd3b3aae3c3ad3dc0892d86deedde6e6d53f6415f807f:d9d84a3c7ffc27b0190a671212f3740e5b8478e84e23825830e97822e25cf05c\")\n+          .get(\"subgraph:products:Query:0df945dc1bc08f7fc02e8905b4c72aa9112f29bb7a214e4a38d199f0aa635b48:d9d84a3c7ffc27b0190a671212f3740e5b8478e84e23825830e97822e25cf05c\")\n           .await\n           .unwrap();\n         let v: Value = serde_json::from_str(&s).unwrap();\n         insta::assert_json_snapshot!(v.as_object().unwrap().get(\"data\").unwrap());\n \n-        let s: String = client.get(\"subgraph:reviews:Product:4911f7a9dbad8a47b8900d65547503a2f3c0359f65c0bc5652ad9b9843281f66:826d5cf03645266e30655c7475530e2d40e0d5978595b0ab16318b1ce87c0fe1:d9d84a3c7ffc27b0190a671212f3740e5b8478e84e23825830e97822e25cf05c\").await.unwrap();\n+        let s: String = client.get(\"subgraph:reviews:Product:4911f7a9dbad8a47b8900d65547503a2f3c0359f65c0bc5652ad9b9843281f66:1de543dab57fde0f00247922ccc4f76d4c916ae26a89dd83cd1a62300d0cda20:d9d84a3c7ffc27b0190a671212f3740e5b8478e84e23825830e97822e25cf05c\").await.unwrap();\n         let v: Value = serde_json::from_str(&s).unwrap();\n         insta::assert_json_snapshot!(v.as_object().unwrap().get(\"data\").unwrap());\n \n@@ -459,7 +491,8 @@ mod test {\n                 \"include_subgraph_errors\": {\n                     \"all\": true\n                 }\n-            }))?\n+            }))\n+            .unwrap()\n             .extra_plugin(subgraphs)\n             .schema(include_str!(\"../fixtures/supergraph-auth.graphql\"))\n             .build_supergraph()\n@@ -469,35 +502,37 @@ mod test {\n         let request = supergraph::Request::fake_builder()\n             .query(r#\"{ topProducts(first: 2) { name reviews { body } } }\"#)\n             .method(Method::POST)\n-            .build()?;\n+            .build()\n+            .unwrap();\n \n         let response = supergraph\n             .oneshot(request)\n-            .await?\n+            .await\n+            .unwrap()\n             .next_response()\n             .await\n             .unwrap();\n         insta::assert_json_snapshot!(response);\n \n         let s:String = client\n-        .get(\"subgraph:reviews:Product:d9a4cd73308dd13ca136390c10340823f94c335b9da198d2339c886c738abf0d:826d5cf03645266e30655c7475530e2d40e0d5978595b0ab16318b1ce87c0fe1:d9d84a3c7ffc27b0190a671212f3740e5b8478e84e23825830e97822e25cf05c\")\n+        .get(\"subgraph:reviews:Product:d9a4cd73308dd13ca136390c10340823f94c335b9da198d2339c886c738abf0d:1de543dab57fde0f00247922ccc4f76d4c916ae26a89dd83cd1a62300d0cda20:d9d84a3c7ffc27b0190a671212f3740e5b8478e84e23825830e97822e25cf05c\")\n         .await\n         .unwrap();\n         let v: Value = serde_json::from_str(&s).unwrap();\n         insta::assert_json_snapshot!(v.as_object().unwrap().get(\"data\").unwrap());\n \n-        client.quit().await?;\n+        client.quit().await.unwrap();\n         // calling quit ends the connection and event listener tasks\n         let _ = connection_task.await;\n         Ok(())\n     }\n \n     #[tokio::test(flavor = \"multi_thread\")]\n     async fn entity_cache_authorization() -> Result<(), BoxError> {\n-        let config = RedisConfig::from_url(\"redis://127.0.0.1:6379\")?;\n+        let config = RedisConfig::from_url(\"redis://127.0.0.1:6379\").unwrap();\n         let client = RedisClient::new(config, None, None, None);\n         let connection_task = client.connect();\n-        client.wait_for_connect().await?;\n+        client.wait_for_connect().await.unwrap();\n \n         let mut subgraphs = MockedSubgraphs::default();\n         subgraphs.insert(\n@@ -659,7 +694,8 @@ mod test {\n                 \"include_subgraph_errors\": {\n                     \"all\": true\n                 }\n-            }))?\n+            }))\n+            .unwrap()\n             .extra_plugin(subgraphs)\n             .schema(include_str!(\"../fixtures/supergraph-auth.graphql\"))\n             .build_supergraph()\n@@ -679,19 +715,21 @@ mod test {\n             )\n             .context(context)\n             .method(Method::POST)\n-            .build()?;\n+            .build()\n+            .unwrap();\n \n         let response = supergraph\n             .clone()\n             .oneshot(request)\n-            .await?\n+            .await\n+            .unwrap()\n             .next_response()\n             .await\n             .unwrap();\n         insta::assert_json_snapshot!(response);\n \n         let s:String = client\n-          .get(\"subgraph:products:Query:07bd08ba4eb8b85451edd3b3aae3c3ad3dc0892d86deedde6e6d53f6415f807f:d9d84a3c7ffc27b0190a671212f3740e5b8478e84e23825830e97822e25cf05c\")\n+          .get(\"subgraph:products:Query:0df945dc1bc08f7fc02e8905b4c72aa9112f29bb7a214e4a38d199f0aa635b48:d9d84a3c7ffc27b0190a671212f3740e5b8478e84e23825830e97822e25cf05c\")\n           .await\n           .unwrap();\n         let v: Value = serde_json::from_str(&s).unwrap();\n@@ -712,7 +750,7 @@ mod test {\n         );\n \n         let s: String = client\n-        .get(\"subgraph:reviews:Product:4911f7a9dbad8a47b8900d65547503a2f3c0359f65c0bc5652ad9b9843281f66:826d5cf03645266e30655c7475530e2d40e0d5978595b0ab16318b1ce87c0fe1:d9d84a3c7ffc27b0190a671212f3740e5b8478e84e23825830e97822e25cf05c\")\n+        .get(\"subgraph:reviews:Product:4911f7a9dbad8a47b8900d65547503a2f3c0359f65c0bc5652ad9b9843281f66:1de543dab57fde0f00247922ccc4f76d4c916ae26a89dd83cd1a62300d0cda20:d9d84a3c7ffc27b0190a671212f3740e5b8478e84e23825830e97822e25cf05c\")\n         .await\n         .unwrap();\n         let v: Value = serde_json::from_str(&s).unwrap();\n@@ -744,19 +782,21 @@ mod test {\n             )\n             .context(context)\n             .method(Method::POST)\n-            .build()?;\n+            .build()\n+            .unwrap();\n \n         let response = supergraph\n             .clone()\n             .oneshot(request)\n-            .await?\n+            .await\n+            .unwrap()\n             .next_response()\n             .await\n             .unwrap();\n         insta::assert_json_snapshot!(response);\n \n         let s:String = client\n-          .get(\"subgraph:reviews:Product:4911f7a9dbad8a47b8900d65547503a2f3c0359f65c0bc5652ad9b9843281f66:c75297b98da101021e30020db99a3a11c2f9ac2008de94ce410c47940162e304:d9d84a3c7ffc27b0190a671212f3740e5b8478e84e23825830e97822e25cf05c\")\n+          .get(\"subgraph:reviews:Product:4911f7a9dbad8a47b8900d65547503a2f3c0359f65c0bc5652ad9b9843281f66:3b6ef3c8fd34c469d59f513942c5f4c8f91135e828712de2024e2cd4613c50ae:d9d84a3c7ffc27b0190a671212f3740e5b8478e84e23825830e97822e25cf05c\")\n           .await\n           .unwrap();\n         let v: Value = serde_json::from_str(&s).unwrap();\n@@ -789,18 +829,20 @@ mod test {\n             )\n             .context(context)\n             .method(Method::POST)\n-            .build()?;\n+            .build()\n+            .unwrap();\n \n         let response = supergraph\n             .clone()\n             .oneshot(request)\n-            .await?\n+            .await\n+            .unwrap()\n             .next_response()\n             .await\n             .unwrap();\n         insta::assert_json_snapshot!(response);\n \n-        client.quit().await?;\n+        client.quit().await.unwrap();\n         // calling quit ends the connection and event listener tasks\n         let _ = connection_task.await;\n         Ok(())"
        },
        {
          "filename": "apollo-router/tests/integration/snapshots/integration_tests__integration__redis__test__query_planner.snap",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -12,7 +12,7 @@ expression: query_plan\n   \"id\": null,\n   \"inputRewrites\": null,\n   \"outputRewrites\": null,\n-  \"schemaAwareHash\": \"af1ee357bc75cfbbcc6adda41089a56e7d1d52f6d44c049739dde2c259314f58\",\n+  \"schemaAwareHash\": \"121b9859eba2d8fa6dde0a54b6e3781274cf69f7ffb0af912e92c01c6bfff6ca\",\n   \"authorization\": {\n     \"is_authenticated\": false,\n     \"scopes\": [],"
        },
        {
          "filename": "dockerfiles/tracing/docker-compose.datadog.yml",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -3,7 +3,7 @@ services:\n \n   apollo-router:\n     container_name: apollo-router\n-    image: ghcr.io/apollographql/router:v1.45.0\n+    image: ghcr.io/apollographql/router:v1.45.1\n     volumes:\n       - ./supergraph.graphql:/etc/config/supergraph.graphql\n       - ./router/datadog.router.yaml:/etc/config/configuration.yaml"
        },
        {
          "filename": "dockerfiles/tracing/docker-compose.jaeger.yml",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -4,7 +4,7 @@ services:\n   apollo-router:\n     container_name: apollo-router\n     #build: ./router\n-    image: ghcr.io/apollographql/router:v1.45.0\n+    image: ghcr.io/apollographql/router:v1.45.1\n     volumes:\n       - ./supergraph.graphql:/etc/config/supergraph.graphql\n       - ./router/jaeger.router.yaml:/etc/config/configuration.yaml"
        },
        {
          "filename": "dockerfiles/tracing/docker-compose.zipkin.yml",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -4,7 +4,7 @@ services:\n   apollo-router:\n     container_name: apollo-router\n     build: ./router\n-    image: ghcr.io/apollographql/router:v1.45.0\n+    image: ghcr.io/apollographql/router:v1.45.1\n     volumes:\n       - ./supergraph.graphql:/etc/config/supergraph.graphql\n       - ./router/zipkin.router.yaml:/etc/config/configuration.yaml"
        },
        {
          "filename": "helm/chart/router/Chart.yaml",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -20,10 +20,10 @@ type: application\n # so it matches the shape of our release process and release automation.\n # By proxy of that decision, this version uses SemVer 2.0.0, though the prefix\n # of \"v\" is not included.\n-version: 1.45.0\n+version: 1.45.1\n \n # This is the version number of the application being deployed. This version number should be\n # incremented each time you make changes to the application. Versions are not expected to\n # follow Semantic Versioning. They should reflect the version the application is using.\n # It is recommended to use it with quotes.\n-appVersion: \"v1.45.0\"\n+appVersion: \"v1.45.1\""
        },
        {
          "filename": "helm/chart/router/README.md",
          "status": "modified",
          "additions": 3,
          "deletions": 3,
          "patch": "@@ -2,7 +2,7 @@\n \n [router](https://github.com/apollographql/router) Rust Graph Routing runtime for Apollo Federation\n \n-![Version: 1.45.0](https://img.shields.io/badge/Version-1.45.0-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square) ![AppVersion: v1.45.0](https://img.shields.io/badge/AppVersion-v1.45.0-informational?style=flat-square)\n+![Version: 1.45.1](https://img.shields.io/badge/Version-1.45.1-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square) ![AppVersion: v1.45.1](https://img.shields.io/badge/AppVersion-v1.45.1-informational?style=flat-square)\n \n ## Prerequisites\n \n@@ -11,15 +11,15 @@\n ## Get Repo Info\n \n ```console\n-helm pull oci://ghcr.io/apollographql/helm-charts/router --version 1.45.0\n+helm pull oci://ghcr.io/apollographql/helm-charts/router --version 1.45.1\n ```\n \n ## Install Chart\n \n **Important:** only helm3 is supported\n \n ```console\n-helm upgrade --install [RELEASE_NAME] oci://ghcr.io/apollographql/helm-charts/router --version 1.45.0 --values my-values.yaml\n+helm upgrade --install [RELEASE_NAME] oci://ghcr.io/apollographql/helm-charts/router --version 1.45.1 --values my-values.yaml\n ```\n \n _See [configuration](#configuration) below._"
        },
        {
          "filename": "licenses.html",
          "status": "modified",
          "additions": 1,
          "deletions": 225,
          "patch": "@@ -44,7 +44,7 @@ <h1>Third Party Licenses</h1>\n     \n         <h2>Overview of licenses:</h2>\n         <ul class=\"licenses-overview\">\n-            <li><a href=\"#Apache-2.0\">Apache License 2.0</a> (508)</li>\n+            <li><a href=\"#Apache-2.0\">Apache License 2.0</a> (481)</li>\n             <li><a href=\"#MIT\">MIT License</a> (154)</li>\n             <li><a href=\"#BSD-3-Clause\">BSD 3-Clause &quot;New&quot; or &quot;Revised&quot; License</a> (12)</li>\n             <li><a href=\"#ISC\">ISC License</a> (11)</li>\n@@ -4652,204 +4652,6 @@ <h4>Used by:</h4>\n       of your accepting any such warranty or additional liability.\r\n \r\n    END OF TERMS AND CONDITIONS\r\n-</pre>\n-            </li>\n-            <li class=\"license\">\n-                <h3 id=\"Apache-2.0\">Apache License 2.0</h3>\n-                <h4>Used by:</h4>\n-                <ul class=\"license-used-by\">\n-                    <li><a href=\" https://github.com/yoshuawuyts/kv-log-macro \">kv-log-macro</a></li>\n-                </ul>\n-                <pre class=\"license-text\">                                 Apache License\r\n-                           Version 2.0, January 2004\r\n-                        http://www.apache.org/licenses/\r\n-\r\n-   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\r\n-\r\n-   1. Definitions.\r\n-\r\n-      &quot;License&quot; shall mean the terms and conditions for use, reproduction,\r\n-      and distribution as defined by Sections 1 through 9 of this document.\r\n-\r\n-      &quot;Licensor&quot; shall mean the copyright owner or entity authorized by\r\n-      the copyright owner that is granting the License.\r\n-\r\n-      &quot;Legal Entity&quot; shall mean the union of the acting entity and all\r\n-      other entities that control, are controlled by, or are under common\r\n-      control with that entity. For the purposes of this definition,\r\n-      &quot;control&quot; means (i) the power, direct or indirect, to cause the\r\n-      direction or management of such entity, whether by contract or\r\n-      otherwise, or (ii) ownership of fifty percent (50%) or more of the\r\n-      outstanding shares, or (iii) beneficial ownership of such entity.\r\n-\r\n-      &quot;You&quot; (or &quot;Your&quot;) shall mean an individual or Legal Entity\r\n-      exercising permissions granted by this License.\r\n-\r\n-      &quot;Source&quot; form shall mean the preferred form for making modifications,\r\n-      including but not limited to software source code, documentation\r\n-      source, and configuration files.\r\n-\r\n-      &quot;Object&quot; form shall mean any form resulting from mechanical\r\n-      transformation or translation of a Source form, including but\r\n-      not limited to compiled object code, generated documentation,\r\n-      and conversions to other media types.\r\n-\r\n-      &quot;Work&quot; shall mean the work of authorship, whether in Source or\r\n-      Object form, made available under the License, as indicated by a\r\n-      copyright notice that is included in or attached to the work\r\n-      (an example is provided in the Appendix below).\r\n-\r\n-      &quot;Derivative Works&quot; shall mean any work, whether in Source or Object\r\n-      form, that is based on (or derived from) the Work and for which the\r\n-      editorial revisions, annotations, elaborations, or other modifications\r\n-      represent, as a whole, an original work of authorship. For the purposes\r\n-      of this License, Derivative Works shall not include works that remain\r\n-      separable from, or merely link (or bind by name) to the interfaces of,\r\n-      the Work and Derivative Works thereof.\r\n-\r\n-      &quot;Contribution&quot; shall mean any work of authorship, including\r\n-      the original version of the Work and any modifications or additions\r\n-      to that Work or Derivative Works thereof, that is intentionally\r\n-      submitted to Licensor for inclusion in the Work by the copyright owner\r\n-      or by an individual or Legal Entity authorized to submit on behalf of\r\n-      the copyright owner. For the purposes of this definition, &quot;submitted&quot;\r\n-      means any form of electronic, verbal, or written communication sent\r\n-      to the Licensor or its representatives, including but not limited to\r\n-      communication on electronic mailing lists, source code control systems,\r\n-      and issue tracking systems that are managed by, or on behalf of, the\r\n-      Licensor for the purpose of discussing and improving the Work, but\r\n-      excluding communication that is conspicuously marked or otherwise\r\n-      designated in writing by the copyright owner as &quot;Not a Contribution.&quot;\r\n-\r\n-      &quot;Contributor&quot; shall mean Licensor and any individual or Legal Entity\r\n-      on behalf of whom a Contribution has been received by Licensor and\r\n-      subsequently incorporated within the Work.\r\n-\r\n-   2. Grant of Copyright License. Subject to the terms and conditions of\r\n-      this License, each Contributor hereby grants to You a perpetual,\r\n-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\r\n-      copyright license to reproduce, prepare Derivative Works of,\r\n-      publicly display, publicly perform, sublicense, and distribute the\r\n-      Work and such Derivative Works in Source or Object form.\r\n-\r\n-   3. Grant of Patent License. Subject to the terms and conditions of\r\n-      this License, each Contributor hereby grants to You a perpetual,\r\n-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\r\n-      (except as stated in this section) patent license to make, have made,\r\n-      use, offer to sell, sell, import, and otherwise transfer the Work,\r\n-      where such license applies only to those patent claims licensable\r\n-      by such Contributor that are necessarily infringed by their\r\n-      Contribution(s) alone or by combination of their Contribution(s)\r\n-      with the Work to which such Contribution(s) was submitted. If You\r\n-      institute patent litigation against any entity (including a\r\n-      cross-claim or counterclaim in a lawsuit) alleging that the Work\r\n-      or a Contribution incorporated within the Work constitutes direct\r\n-      or contributory patent infringement, then any patent licenses\r\n-      granted to You under this License for that Work shall terminate\r\n-      as of the date such litigation is filed.\r\n-\r\n-   4. Redistribution. You may reproduce and distribute copies of the\r\n-      Work or Derivative Works thereof in any medium, with or without\r\n-      modifications, and in Source or Object form, provided that You\r\n-      meet the following conditions:\r\n-\r\n-      (a) You must give any other recipients of the Work or\r\n-          Derivative Works a copy of this License; and\r\n-\r\n-      (b) You must cause any modified files to carry prominent notices\r\n-          stating that You changed the files; and\r\n-\r\n-      (c) You must retain, in the Source form of any Derivative Works\r\n-          that You distribute, all copyright, patent, trademark, and\r\n-          attribution notices from the Source form of the Work,\r\n-          excluding those notices that do not pertain to any part of\r\n-          the Derivative Works; and\r\n-\r\n-      (d) If the Work includes a &quot;NOTICE&quot; text file as part of its\r\n-          distribution, then any Derivative Works that You distribute must\r\n-          include a readable copy of the attribution notices contained\r\n-          within such NOTICE file, excluding those notices that do not\r\n-          pertain to any part of the Derivative Works, in at least one\r\n-          of the following places: within a NOTICE text file distributed\r\n-          as part of the Derivative Works; within the Source form or\r\n-          documentation, if provided along with the Derivative Works; or,\r\n-          within a display generated by the Derivative Works, if and\r\n-          wherever such third-party notices normally appear. The contents\r\n-          of the NOTICE file are for informational purposes only and\r\n-          do not modify the License. You may add Your own attribution\r\n-          notices within Derivative Works that You distribute, alongside\r\n-          or as an addendum to the NOTICE text from the Work, provided\r\n-          that such additional attribution notices cannot be construed\r\n-          as modifying the License.\r\n-\r\n-      You may add Your own copyright statement to Your modifications and\r\n-      may provide additional or different license terms and conditions\r\n-      for use, reproduction, or distribution of Your modifications, or\r\n-      for any such Derivative Works as a whole, provided Your use,\r\n-      reproduction, and distribution of the Work otherwise complies with\r\n-      the conditions stated in this License.\r\n-\r\n-   5. Submission of Contributions. Unless You explicitly state otherwise,\r\n-      any Contribution intentionally submitted for inclusion in the Work\r\n-      by You to the Licensor shall be under the terms and conditions of\r\n-      this License, without any additional terms or conditions.\r\n-      Notwithstanding the above, nothing herein shall supersede or modify\r\n-      the terms of any separate license agreement you may have executed\r\n-      with Licensor regarding such Contributions.\r\n-\r\n-   6. Trademarks. This License does not grant permission to use the trade\r\n-      names, trademarks, service marks, or product names of the Licensor,\r\n-      except as required for reasonable and customary use in describing the\r\n-      origin of the Work and reproducing the content of the NOTICE file.\r\n-\r\n-   7. Disclaimer of Warranty. Unless required by applicable law or\r\n-      agreed to in writing, Licensor provides the Work (and each\r\n-      Contributor provides its Contributions) on an &quot;AS IS&quot; BASIS,\r\n-      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\r\n-      implied, including, without limitation, any warranties or conditions\r\n-      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\r\n-      PARTICULAR PURPOSE. You are solely responsible for determining the\r\n-      appropriateness of using or redistributing the Work and assume any\r\n-      risks associated with Your exercise of permissions under this License.\r\n-\r\n-   8. Limitation of Liability. In no event and under no legal theory,\r\n-      whether in tort (including negligence), contract, or otherwise,\r\n-      unless required by applicable law (such as deliberate and grossly\r\n-      negligent acts) or agreed to in writing, shall any Contributor be\r\n-      liable to You for damages, including any direct, indirect, special,\r\n-      incidental, or consequential damages of any character arising as a\r\n-      result of this License or out of the use or inability to use the\r\n-      Work (including but not limited to damages for loss of goodwill,\r\n-      work stoppage, computer failure or malfunction, or any and all\r\n-      other commercial damages or losses), even if such Contributor\r\n-      has been advised of the possibility of such damages.\r\n-\r\n-   9. Accepting Warranty or Additional Liability. While redistributing\r\n-      the Work or Derivative Works thereof, You may choose to offer,\r\n-      and charge a fee for, acceptance of support, warranty, indemnity,\r\n-      or other liability obligations and/or rights consistent with this\r\n-      License. However, in accepting such obligations, You may act only\r\n-      on Your own behalf and on Your sole responsibility, not on behalf\r\n-      of any other Contributor, and only if You agree to indemnify,\r\n-      defend, and hold each Contributor harmless for any liability\r\n-      incurred by, or claims asserted against, such Contributor by reason\r\n-      of your accepting any such warranty or additional liability.\r\n-\r\n-   END OF TERMS AND CONDITIONS\r\n-\r\n-   Copyright 2019 Yoshua Wuyts\r\n-\r\n-   Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);\r\n-   you may not use this file except in compliance with the License.\r\n-   You may obtain a copy of the License at\r\n-\r\n-       http://www.apache.org/licenses/LICENSE-2.0\r\n-\r\n-   Unless required by applicable law or agreed to in writing, software\r\n-   distributed under the License is distributed on an &quot;AS IS&quot; BASIS,\r\n-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n-   See the License for the specific language governing permissions and\r\n-   limitations under the License.\r\n </pre>\n             </li>\n             <li class=\"license\">\n@@ -8411,26 +8213,13 @@ <h4>Used by:</h4>\n                     <li><a href=\" https://github.com/rust-fuzz/arbitrary/ \">arbitrary</a></li>\n                     <li><a href=\" https://github.com/vorner/arc-swap \">arc-swap</a></li>\n                     <li><a href=\" https://github.com/smol-rs/async-channel \">async-channel</a></li>\n-                    <li><a href=\" https://github.com/smol-rs/async-channel \">async-channel</a></li>\n                     <li><a href=\" https://github.com/Nullus157/async-compression \">async-compression</a></li>\n-                    <li><a href=\" https://github.com/smol-rs/async-executor \">async-executor</a></li>\n-                    <li><a href=\" https://github.com/Keruspe/async-global-executor \">async-global-executor</a></li>\n-                    <li><a href=\" https://github.com/smol-rs/async-io \">async-io</a></li>\n-                    <li><a href=\" https://github.com/smol-rs/async-io \">async-io</a></li>\n-                    <li><a href=\" https://github.com/smol-rs/async-lock \">async-lock</a></li>\n-                    <li><a href=\" https://github.com/smol-rs/async-lock \">async-lock</a></li>\n-                    <li><a href=\" https://github.com/smol-rs/async-process \">async-process</a></li>\n-                    <li><a href=\" https://github.com/smol-rs/async-signal \">async-signal</a></li>\n-                    <li><a href=\" https://github.com/async-rs/async-std \">async-std</a></li>\n-                    <li><a href=\" https://github.com/smol-rs/async-task \">async-task</a></li>\n-                    <li><a href=\" https://github.com/smol-rs/atomic-waker \">atomic-waker</a></li>\n                     <li><a href=\" https://github.com/cuviper/autocfg \">autocfg</a></li>\n                     <li><a href=\" https://github.com/rust-lang/backtrace-rs \">backtrace</a></li>\n                     <li><a href=\" https://github.com/marshallpierce/rust-base64 \">base64</a></li>\n                     <li><a href=\" https://github.com/marshallpierce/rust-base64 \">base64</a></li>\n                     <li><a href=\" https://github.com/bitflags/bitflags \">bitflags</a></li>\n                     <li><a href=\" https://github.com/bitflags/bitflags \">bitflags</a></li>\n-                    <li><a href=\" https://github.com/smol-rs/blocking \">blocking</a></li>\n                     <li><a href=\" https://github.com/BurntSushi/bstr \">bstr</a></li>\n                     <li><a href=\" https://github.com/fitzgen/bumpalo \">bumpalo</a></li>\n                     <li><a href=\" https://github.com/vorner/bytes-utils \">bytes-utils</a></li>\n@@ -8453,9 +8242,6 @@ <h4>Used by:</h4>\n                     <li><a href=\" https://github.com/sagiegurari/envmnt.git \">envmnt</a></li>\n                     <li><a href=\" https://github.com/cuviper/equivalent \">equivalent</a></li>\n                     <li><a href=\" https://github.com/smol-rs/event-listener \">event-listener</a></li>\n-                    <li><a href=\" https://github.com/smol-rs/event-listener \">event-listener</a></li>\n-                    <li><a href=\" https://github.com/smol-rs/event-listener \">event-listener</a></li>\n-                    <li><a href=\" https://github.com/smol-rs/event-listener \">event-listener-strategy</a></li>\n                     <li><a href=\" https://github.com/smol-rs/fastrand \">fastrand</a></li>\n                     <li><a href=\" https://github.com/smol-rs/fastrand \">fastrand</a></li>\n                     <li><a href=\" https://github.com/alexcrichton/filetime \">filetime</a></li>\n@@ -8466,7 +8252,6 @@ <h4>Used by:</h4>\n                     <li><a href=\" https://github.com/dnsl48/fraction.git \">fraction</a></li>\n                     <li><a href=\" https://github.com/sagiegurari/fsio.git \">fsio</a></li>\n                     <li><a href=\" https://github.com/smol-rs/futures-lite \">futures-lite</a></li>\n-                    <li><a href=\" https://github.com/smol-rs/futures-lite \">futures-lite</a></li>\n                     <li><a href=\" https://github.com/gimli-rs/gimli \">gimli</a></li>\n                     <li><a href=\" https://github.com/rust-lang/git2-rs \">git2</a></li>\n                     <li><a href=\" https://github.com/zkcrypto/group \">group</a></li>\n@@ -8485,7 +8270,6 @@ <h4>Used by:</h4>\n                     <li><a href=\" https://github.com/bluss/indexmap \">indexmap</a></li>\n                     <li><a href=\" https://github.com/indexmap-rs/indexmap \">indexmap</a></li>\n                     <li><a href=\" https://github.com/dtolnay/inventory \">inventory</a></li>\n-                    <li><a href=\" https://github.com/sunfishcode/io-lifetimes \">io-lifetimes</a></li>\n                     <li><a href=\" https://github.com/liranringel/ipconfig \">ipconfig</a></li>\n                     <li><a href=\" https://github.com/rust-itertools/itertools \">itertools</a></li>\n                     <li><a href=\" https://github.com/rust-itertools/itertools \">itertools</a></li>\n@@ -8499,7 +8283,6 @@ <h4>Used by:</h4>\n                     <li><a href=\" https://github.com/rust-lang/libz-sys \">libz-ng-sys</a></li>\n                     <li><a href=\" https://github.com/rust-lang/libz-sys \">libz-sys</a></li>\n                     <li><a href=\" https://github.com/sunfishcode/linux-raw-sys \">linux-raw-sys</a></li>\n-                    <li><a href=\" https://github.com/sunfishcode/linux-raw-sys \">linux-raw-sys</a></li>\n                     <li><a href=\" https://github.com/Amanieu/parking_lot \">lock_api</a></li>\n                     <li><a href=\" https://github.com/rust-lang/log \">log</a></li>\n                     <li><a href=\" https://github.com/bluss/maplit \">maplit</a></li>\n@@ -8531,10 +8314,8 @@ <h4>Used by:</h4>\n                     <li><a href=\" https://github.com/pest-parser/pest \">pest_generator</a></li>\n                     <li><a href=\" https://github.com/pest-parser/pest \">pest_meta</a></li>\n                     <li><a href=\" https://github.com/petgraph/petgraph \">petgraph</a></li>\n-                    <li><a href=\" https://github.com/notgull/piper \">piper</a></li>\n                     <li><a href=\" https://github.com/rust-lang/pkg-config-rs \">pkg-config</a></li>\n                     <li><a href=\" https://github.com/rustsec/rustsec/tree/main/platforms \">platforms</a></li>\n-                    <li><a href=\" https://github.com/smol-rs/polling \">polling</a></li>\n                     <li><a href=\" https://github.com/alexcrichton/proc-macro2 \">proc-macro2</a></li>\n                     <li><a href=\" https://github.com/tokio-rs/prost \">prost</a></li>\n                     <li><a href=\" https://github.com/tokio-rs/prost \">prost</a></li>\n@@ -8556,7 +8337,6 @@ <h4>Used by:</h4>\n                     <li><a href=\" https://github.com/Kimundi/rustc-version-rs \">rustc_version</a></li>\n                     <li><a href=\" https://github.com/Kimundi/rustc-version-rs \">rustc_version</a></li>\n                     <li><a href=\" https://github.com/bytecodealliance/rustix \">rustix</a></li>\n-                    <li><a href=\" https://github.com/bytecodealliance/rustix \">rustix</a></li>\n                     <li><a href=\" https://github.com/rustls/rustls \">rustls</a></li>\n                     <li><a href=\" https://github.com/ctz/rustls-native-certs \">rustls-native-certs</a></li>\n                     <li><a href=\" https://github.com/rustls/pemfile \">rustls-pemfile</a></li>\n@@ -8574,7 +8354,6 @@ <h4>Used by:</h4>\n                     <li><a href=\" https://github.com/mitsuhiko/similar \">similar</a></li>\n                     <li><a href=\" https://github.com/servo/rust-smallvec \">smallvec</a></li>\n                     <li><a href=\" https://github.com/rust-lang/socket2 \">socket2</a></li>\n-                    <li><a href=\" https://github.com/rust-lang/socket2 \">socket2</a></li>\n                     <li><a href=\" https://github.com/storyyeller/stable_deref_trait \">stable_deref_trait</a></li>\n                     <li><a href=\" https://github.com/dtolnay/syn \">syn</a></li>\n                     <li><a href=\" https://github.com/dtolnay/syn \">syn</a></li>\n@@ -8599,7 +8378,6 @@ <h4>Used by:</h4>\n                     <li><a href=\" https://github.com/unicode-rs/unicode-xid \">unicode-xid</a></li>\n                     <li><a href=\" https://github.com/servo/rust-url \">url</a></li>\n                     <li><a href=\" https://github.com/uuid-rs/uuid \">uuid</a></li>\n-                    <li><a href=\" https://github.com/sval-rs/value-bag \">value-bag</a></li>\n                     <li><a href=\" https://github.com/SergioBenitez/version_check \">version_check</a></li>\n                     <li><a href=\" https://github.com/stjepang/waker-fn \">waker-fn</a></li>\n                     <li><a href=\" https://github.com/bytecodealliance/wasi \">wasi</a></li>\n@@ -11105,7 +10883,6 @@ <h4>Used by:</h4>\n                 <ul class=\"license-used-by\">\n                     <li><a href=\" https://github.com/yaahc/displaydoc \">displaydoc</a></li>\n                     <li><a href=\" https://github.com/async-rs/futures-timer \">futures-timer</a></li>\n-                    <li><a href=\" https://github.com/smol-rs/polling \">polling</a></li>\n                     <li><a href=\" https://github.com/rust-analyzer/text-size \">text-size</a></li>\n                 </ul>\n                 <pre class=\"license-text\">                              Apache License\r\n@@ -12417,7 +12194,6 @@ <h4>Used by:</h4>\n                     <li><a href=\" https://github.com/nrc/proc-macro-rules \">deno-proc-macro-rules</a></li>\n                     <li><a href=\" https://github.com/nrc/proc-macro-rules \">deno-proc-macro-rules-macros</a></li>\n                     <li><a href=\" https://gitlab.com/kornelski/dunce \">dunce</a></li>\n-                    <li><a href=\" https://github.com/rustwasm/gloo/tree/master/crates/timers \">gloo-timers</a></li>\n                     <li><a href=\" https://github.com/graphql-rust/graphql-client \">graphql-introspection-query</a></li>\n                     <li><a href=\" https://github.com/graphql-rust/graphql-client \">graphql_client</a></li>\n                     <li><a href=\" https://github.com/graphql-rust/graphql-client \">graphql_client_codegen</a></li>"
        },
        {
          "filename": "scripts/install.sh",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -11,7 +11,7 @@ BINARY_DOWNLOAD_PREFIX=\"https://github.com/apollographql/router/releases/downloa\n \n # Router version defined in apollo-router's Cargo.toml\n # Note: Change this line manually during the release steps.\n-PACKAGE_VERSION=\"v1.45.0\"\n+PACKAGE_VERSION=\"v1.45.1\"\n \n download_binary() {\n     downloader --check"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 4,
        "dependency_files": 5,
        "test_files": 7,
        "unique_directories": 20,
        "max_directory_depth": 5
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "4fc63d55104c81c77e6e0a3cca615eac28e39dc3",
            "date": "2025-01-14T14:27:07Z",
            "author_login": "abernix"
          },
          {
            "sha": "553083e8173e3f1da2b4b8f93f20b5dedb4ac0c5",
            "date": "2025-01-10T20:15:11Z",
            "author_login": "shorgi"
          },
          {
            "sha": "a80938d29c6fc26624709b1ce782d8e4a0b9478d",
            "date": "2025-01-10T14:58:50Z",
            "author_login": "SimonSapin"
          },
          {
            "sha": "4dd7df8ad40d2d59476357cc6abfaab0986df925",
            "date": "2025-01-08T17:49:24Z",
            "author_login": "abernix"
          },
          {
            "sha": "c5ee35f4fb9ff2004a5e4c7eb23d01bc24d48287",
            "date": "2025-01-08T17:43:31Z",
            "author_login": "goto-bus-stop"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.0,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:H/I:H/A:H",
    "cwe_id": "CWE-440",
    "description": "Apollo Router is a configurable, graph router written in Rust to run a federated supergraph that uses Apollo Federation 2. The affected versions of Apollo Router contain a bug that in limited circumstances, could lead to unexpected operations being executed which can result in unintended data or effects. This only affects Router instances configured to use distributed query plan caching. The root cause of this defect is a bug in Apollo Router\u2019s cache retrieval logic: When this defect is present and distributed query planning caching is enabled, asking the Router to execute an operation (whether it is a query, a mutation, or a subscription) may result in an unexpected variation of that operation being executed or the generation of unexpected errors. The issue stems from inadvertently executing a modified version of a previously executed operation, whose query plan is stored in the underlying cache (specifically, Redis). Depending on the type of the operation, the result may vary. For a query, results may be fetched that don\u2019t match what was requested (e.g., rather than running `fetchUsers(type: ENTERPRISE)` the Router may run `fetchUsers(type: TRIAL)`. For a mutation, this may result in incorrect mutations being sent to underlying subgraph servers (e.g., rather than sending `deleteUser(id: 10)` to a subgraph, the Router may run `deleteUser(id: 12)`. Users who are using distributed query plan caching, are advised to either upgrade to version 1.45.1 or above or downgrade to version 1.43.2 of the Apollo Router. Apollo Router versions 1.44.0 or 1.45.0 are not recommended for use and have been withdrawn. Users unable to upgrade can disable distributed query plan caching to mitigate this issue.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2024-05-02T07:15:21.733",
    "last_modified": "2024-11-21T09:16:08.317",
    "fix_date": "2024-04-26T20:52:11Z"
  },
  "references": [
    {
      "url": "https://github.com/apollographql/router/commit/ff9f666598cd17661880fe7fc6e9c9611316e529",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/apollographql/router/releases/tag/v1.45.1",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/apollographql/router/security/advisories/GHSA-q9p4-hw9m-fj2v",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://www.apollographql.com/docs/router/configuration/distributed-caching/#distributed-query-plan-caching",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/apollographql/router/commit/ff9f666598cd17661880fe7fc6e9c9611316e529",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/apollographql/router/releases/tag/v1.45.1",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/apollographql/router/security/advisories/GHSA-q9p4-hw9m-fj2v",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://www.apollographql.com/docs/router/configuration/distributed-caching/#distributed-query-plan-caching",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:07.050384",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "router",
    "owner": "apollographql",
    "created_at": "2021-11-04T13:05:56Z",
    "updated_at": "2025-01-14T14:27:12Z",
    "pushed_at": "2025-01-14T14:32:18Z",
    "size": 44306,
    "stars": 831,
    "forks": 275,
    "open_issues": 508,
    "watchers": 831,
    "has_security_policy": false,
    "default_branch": "dev",
    "protected_branches": [
      "1.2.2",
      "1.2.3",
      "1.2.3456",
      "1.12.0",
      "1.23.0-alpha.0",
      "1.24.0-alpha.0",
      "1.24.0-alpha.1",
      "1.25.0-alpha.0",
      "1.25.0-alpha.1",
      "1.25.0-alpha.2",
      "1.27.0-alpha.1",
      "1.28.0-alpha.0",
      "1.30.0-alpha.1",
      "1.32.1-alpha.1",
      "1.33.2-alpha.0",
      "1.34.0-alpha.0",
      "1.43.3",
      "1.45.1",
      "1.46.0-rc.0",
      "1.52.2",
      "1.55.1",
      "1.58.1+telemetry-fix",
      "1.123.456"
    ],
    "languages": {
      "Rust": 8602740,
      "TLA": 23302,
      "Shell": 13702,
      "TypeScript": 7544,
      "HTML": 4831,
      "Smarty": 3754,
      "Dockerfile": 3307,
      "Handlebars": 1847,
      "RenderScript": 1
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T15:36:29.734203"
  }
}