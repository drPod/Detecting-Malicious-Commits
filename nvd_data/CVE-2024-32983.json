{
  "cve_id": "CVE-2024-32983",
  "github_data": {
    "repository": "misskey-dev/misskey",
    "fix_commit": "d2a5bb39e344fcb84a24ae60faafe4694b227b88",
    "related_commits": [
      "d2a5bb39e344fcb84a24ae60faafe4694b227b88",
      "d2a5bb39e344fcb84a24ae60faafe4694b227b88"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "d2a5bb39e344fcb84a24ae60faafe4694b227b88",
      "commit_date": "2024-05-01T07:33:58Z",
      "author": {
        "login": "tesaguri",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Merge pull request from GHSA-2vxv-pv3m-3wvj",
        "length": 237,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 216,
        "additions": 146,
        "deletions": 70
      },
      "files": [
        {
          "filename": "CHANGELOG.md",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -2,6 +2,7 @@\n \n ### Note\n - \u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u30d1\u30cd\u30eb\u5185\u306b\u3042\u308b\u30b5\u30de\u30ea\u30fc\u30d7\u30ed\u30ad\u30b7\u306e\u8a2d\u5b9a\u500b\u6240\u304c\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u304b\u3089\u5168\u822c\u3078\u5909\u66f4\u3068\u306a\u308a\u307e\u3059\u3002\n+- \u60aa\u610f\u306e\u3042\u308b\u7b2c\u4e09\u8005\u304c\u30ea\u30e2\u30fc\u30c8\u30e6\u30fc\u30b6\u30fc\u306b\u306a\u308a\u3059\u307e\u3057\u305f\u30a2\u30af\u30c6\u30a3\u30d3\u30c6\u30a3\u3092\u53d7\u3051\u53d6\u308c\u3066\u3057\u307e\u3046\u554f\u984c\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f\u3002\u8a73\u3057\u304f\u306f[GitHub security advisory](https://github.com/misskey-dev/misskey/security/advisories/GHSA-2vxv-pv3m-3wvj)\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n \n ### General\n - Enhance: URL\u30d7\u30ec\u30d3\u30e5\u30fc\u306e\u6709\u52b9\u5316\u30fb\u7121\u52b9\u5316\u3092\u8a2d\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b #13569\n@@ -61,6 +62,7 @@\n ### Server\n - Enhance: \u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8`antennas/update`\u306e\u5fc5\u9808\u9805\u76ee\u3092`antennaId`\u306e\u307f\u306b\n - Enhance: misskey-dev/summaly@5.1.0\u306e\u53d6\u308a\u8fbc\u307f\uff08\u30d7\u30ec\u30d3\u30e5\u30fc\u751f\u6210\u51e6\u7406\u306e\u52b9\u7387\u5316\uff09\n+- Fix: \u30ea\u30e2\u30fc\u30c8\u304b\u3089\u914d\u9001\u3055\u308c\u305f\u30a2\u30af\u30c6\u30a3\u30d3\u30c6\u30a3\u306bJSON-LD compaction\u3092\u304b\u3051\u308b\n - Fix: \u30d5\u30a9\u30ed\u30fc\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u4f5c\u6210\u3059\u308b\u969b\u306b\u65e2\u5b58\u306e\u3082\u306e\u306f\u524a\u9664\u3059\u308b\u3088\u3046\u306b  \n   (Cherry-picked from https://activitypub.software/TransFem-org/Sharkey/-/merge_requests/440)\n - Fix: \u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8`notes/translate`\u306e\u30a8\u30e9\u30fc\u3092\u6539\u5584"
        },
        {
          "filename": "packages/backend/src/core/CoreModule.ts",
          "status": "modified",
          "additions": 6,
          "deletions": 6,
          "patch": "@@ -127,7 +127,7 @@ import { ApMfmService } from './activitypub/ApMfmService.js';\n import { ApRendererService } from './activitypub/ApRendererService.js';\n import { ApRequestService } from './activitypub/ApRequestService.js';\n import { ApResolverService } from './activitypub/ApResolverService.js';\n-import { LdSignatureService } from './activitypub/LdSignatureService.js';\n+import { JsonLdService } from './activitypub/JsonLdService.js';\n import { RemoteLoggerService } from './RemoteLoggerService.js';\n import { RemoteUserResolveService } from './RemoteUserResolveService.js';\n import { WebfingerService } from './WebfingerService.js';\n@@ -266,7 +266,7 @@ const $ApMfmService: Provider = { provide: 'ApMfmService', useExisting: ApMfmSer\n const $ApRendererService: Provider = { provide: 'ApRendererService', useExisting: ApRendererService };\n const $ApRequestService: Provider = { provide: 'ApRequestService', useExisting: ApRequestService };\n const $ApResolverService: Provider = { provide: 'ApResolverService', useExisting: ApResolverService };\n-const $LdSignatureService: Provider = { provide: 'LdSignatureService', useExisting: LdSignatureService };\n+const $JsonLdService: Provider = { provide: 'JsonLdService', useExisting: JsonLdService };\n const $RemoteLoggerService: Provider = { provide: 'RemoteLoggerService', useExisting: RemoteLoggerService };\n const $RemoteUserResolveService: Provider = { provide: 'RemoteUserResolveService', useExisting: RemoteUserResolveService };\n const $WebfingerService: Provider = { provide: 'WebfingerService', useExisting: WebfingerService };\n@@ -406,7 +406,7 @@ const $ApQuestionService: Provider = { provide: 'ApQuestionService', useExisting\n \t\tApRendererService,\n \t\tApRequestService,\n \t\tApResolverService,\n-\t\tLdSignatureService,\n+\t\tJsonLdService,\n \t\tRemoteLoggerService,\n \t\tRemoteUserResolveService,\n \t\tWebfingerService,\n@@ -542,7 +542,7 @@ const $ApQuestionService: Provider = { provide: 'ApQuestionService', useExisting\n \t\t$ApRendererService,\n \t\t$ApRequestService,\n \t\t$ApResolverService,\n-\t\t$LdSignatureService,\n+\t\t$JsonLdService,\n \t\t$RemoteLoggerService,\n \t\t$RemoteUserResolveService,\n \t\t$WebfingerService,\n@@ -678,7 +678,7 @@ const $ApQuestionService: Provider = { provide: 'ApQuestionService', useExisting\n \t\tApRendererService,\n \t\tApRequestService,\n \t\tApResolverService,\n-\t\tLdSignatureService,\n+\t\tJsonLdService,\n \t\tRemoteLoggerService,\n \t\tRemoteUserResolveService,\n \t\tWebfingerService,\n@@ -813,7 +813,7 @@ const $ApQuestionService: Provider = { provide: 'ApQuestionService', useExisting\n \t\t$ApRendererService,\n \t\t$ApRequestService,\n \t\t$ApResolverService,\n-\t\t$LdSignatureService,\n+\t\t$JsonLdService,\n \t\t$RemoteLoggerService,\n \t\t$RemoteUserResolveService,\n \t\t$WebfingerService,"
        },
        {
          "filename": "packages/backend/src/core/activitypub/ApRendererService.ts",
          "status": "modified",
          "additions": 7,
          "deletions": 38,
          "patch": "@@ -28,8 +28,9 @@ import { bindThis } from '@/decorators.js';\n import { CustomEmojiService } from '@/core/CustomEmojiService.js';\n import { isNotNull } from '@/misc/is-not-null.js';\n import { IdService } from '@/core/IdService.js';\n-import { LdSignatureService } from './LdSignatureService.js';\n+import { JsonLdService } from './JsonLdService.js';\n import { ApMfmService } from './ApMfmService.js';\n+import { CONTEXT } from './misc/contexts.js';\n import type { IAccept, IActivity, IAdd, IAnnounce, IApDocument, IApEmoji, IApHashtag, IApImage, IApMention, IBlock, ICreate, IDelete, IFlag, IFollow, IKey, ILike, IMove, IObject, IPost, IQuestion, IReject, IRemove, ITombstone, IUndo, IUpdate } from './type.js';\n \n @Injectable()\n@@ -56,7 +57,7 @@ export class ApRendererService {\n \t\tprivate customEmojiService: CustomEmojiService,\n \t\tprivate userEntityService: UserEntityService,\n \t\tprivate driveFileEntityService: DriveFileEntityService,\n-\t\tprivate ldSignatureService: LdSignatureService,\n+\t\tprivate jsonLdService: JsonLdService,\n \t\tprivate userKeypairService: UserKeypairService,\n \t\tprivate apMfmService: ApMfmService,\n \t\tprivate mfmService: MfmService,\n@@ -617,48 +618,16 @@ export class ApRendererService {\n \t\t\tx.id = `${this.config.url}/${randomUUID()}`;\n \t\t}\n \n-\t\treturn Object.assign({\n-\t\t\t'@context': [\n-\t\t\t\t'https://www.w3.org/ns/activitystreams',\n-\t\t\t\t'https://w3id.org/security/v1',\n-\t\t\t\t{\n-\t\t\t\t\tKey: 'sec:Key',\n-\t\t\t\t\t// as non-standards\n-\t\t\t\t\tmanuallyApprovesFollowers: 'as:manuallyApprovesFollowers',\n-\t\t\t\t\tsensitive: 'as:sensitive',\n-\t\t\t\t\tHashtag: 'as:Hashtag',\n-\t\t\t\t\tquoteUrl: 'as:quoteUrl',\n-\t\t\t\t\t// Mastodon\n-\t\t\t\t\ttoot: 'http://joinmastodon.org/ns#',\n-\t\t\t\t\tEmoji: 'toot:Emoji',\n-\t\t\t\t\tfeatured: 'toot:featured',\n-\t\t\t\t\tdiscoverable: 'toot:discoverable',\n-\t\t\t\t\t// schema\n-\t\t\t\t\tschema: 'http://schema.org#',\n-\t\t\t\t\tPropertyValue: 'schema:PropertyValue',\n-\t\t\t\t\tvalue: 'schema:value',\n-\t\t\t\t\t// Misskey\n-\t\t\t\t\tmisskey: 'https://misskey-hub.net/ns#',\n-\t\t\t\t\t'_misskey_content': 'misskey:_misskey_content',\n-\t\t\t\t\t'_misskey_quote': 'misskey:_misskey_quote',\n-\t\t\t\t\t'_misskey_reaction': 'misskey:_misskey_reaction',\n-\t\t\t\t\t'_misskey_votes': 'misskey:_misskey_votes',\n-\t\t\t\t\t'_misskey_summary': 'misskey:_misskey_summary',\n-\t\t\t\t\t'isCat': 'misskey:isCat',\n-\t\t\t\t\t// vcard\n-\t\t\t\t\tvcard: 'http://www.w3.org/2006/vcard/ns#',\n-\t\t\t\t},\n-\t\t\t],\n-\t\t}, x as T & { id: string });\n+\t\treturn Object.assign({ '@context': CONTEXT }, x as T & { id: string });\n \t}\n \n \t@bindThis\n \tpublic async attachLdSignature(activity: any, user: { id: MiUser['id']; host: null; }): Promise<IActivity> {\n \t\tconst keypair = await this.userKeypairService.getUserKeypair(user.id);\n \n-\t\tconst ldSignature = this.ldSignatureService.use();\n-\t\tldSignature.debug = false;\n-\t\tactivity = await ldSignature.signRsaSignature2017(activity, keypair.privateKey, `${this.config.url}/users/${user.id}#main-key`);\n+\t\tconst jsonLd = this.jsonLdService.use();\n+\t\tjsonLd.debug = false;\n+\t\tactivity = await jsonLd.signRsaSignature2017(activity, keypair.privateKey, `${this.config.url}/users/${user.id}#main-key`);\n \n \t\treturn activity;\n \t}"
        },
        {
          "filename": "packages/backend/src/core/activitypub/JsonLdService.ts",
          "status": "renamed",
          "additions": 20,
          "deletions": 12,
          "patch": "@@ -7,14 +7,14 @@ import * as crypto from 'node:crypto';\n import { Injectable } from '@nestjs/common';\n import { HttpRequestService } from '@/core/HttpRequestService.js';\n import { bindThis } from '@/decorators.js';\n-import { CONTEXTS } from './misc/contexts.js';\n+import { CONTEXT, PRELOADED_CONTEXTS } from './misc/contexts.js';\n import { validateContentTypeSetAsJsonLD } from './misc/validator.js';\n import type { JsonLdDocument } from 'jsonld';\n-import type { JsonLd, RemoteDocument } from 'jsonld/jsonld-spec.js';\n+import type { JsonLd as JsonLdObject, RemoteDocument } from 'jsonld/jsonld-spec.js';\n \n-// RsaSignature2017 based from https://github.com/transmute-industries/RsaSignature2017\n+// RsaSignature2017 implementation is based on https://github.com/transmute-industries/RsaSignature2017\n \n-class LdSignature {\n+class JsonLd {\n \tpublic debug = false;\n \tpublic preLoad = true;\n \tpublic loderTimeout = 5000;\n@@ -89,10 +89,18 @@ class LdSignature {\n \t}\n \n \t@bindThis\n-\tpublic async normalize(data: JsonLdDocument): Promise<string> {\n+\tpublic async compact(data: any, context: any = CONTEXT): Promise<JsonLdDocument> {\n \t\tconst customLoader = this.getLoader();\n \t\t// XXX: Importing jsonld dynamically since Jest frequently fails to import it statically\n \t\t// https://github.com/misskey-dev/misskey/pull/9894#discussion_r1103753595\n+\t\treturn (await import('jsonld')).default.compact(data, context, {\n+\t\t\tdocumentLoader: customLoader,\n+\t\t});\n+\t}\n+\n+\t@bindThis\n+\tpublic async normalize(data: JsonLdDocument): Promise<string> {\n+\t\tconst customLoader = this.getLoader();\n \t\treturn (await import('jsonld')).default.normalize(data, {\n \t\t\tdocumentLoader: customLoader,\n \t\t});\n@@ -104,11 +112,11 @@ class LdSignature {\n \t\t\tif (!/^https?:\\/\\//.test(url)) throw new Error(`Invalid URL ${url}`);\n \n \t\t\tif (this.preLoad) {\n-\t\t\t\tif (url in CONTEXTS) {\n+\t\t\t\tif (url in PRELOADED_CONTEXTS) {\n \t\t\t\t\tif (this.debug) console.debug(`HIT: ${url}`);\n \t\t\t\t\treturn {\n \t\t\t\t\t\tcontextUrl: undefined,\n-\t\t\t\t\t\tdocument: CONTEXTS[url],\n+\t\t\t\t\t\tdocument: PRELOADED_CONTEXTS[url],\n \t\t\t\t\t\tdocumentUrl: url,\n \t\t\t\t\t};\n \t\t\t\t}\n@@ -125,7 +133,7 @@ class LdSignature {\n \t}\n \n \t@bindThis\n-\tprivate async fetchDocument(url: string): Promise<JsonLd> {\n+\tprivate async fetchDocument(url: string): Promise<JsonLdObject> {\n \t\tconst json = await this.httpRequestService.send(\n \t\t\turl,\n \t\t\t{\n@@ -146,7 +154,7 @@ class LdSignature {\n \t\t\t}\n \t\t});\n \n-\t\treturn json as JsonLd;\n+\t\treturn json as JsonLdObject;\n \t}\n \n \t@bindThis\n@@ -158,14 +166,14 @@ class LdSignature {\n }\n \n @Injectable()\n-export class LdSignatureService {\n+export class JsonLdService {\n \tconstructor(\n \t\tprivate httpRequestService: HttpRequestService,\n \t) {\n \t}\n \n \t@bindThis\n-\tpublic use(): LdSignature {\n-\t\treturn new LdSignature(this.httpRequestService);\n+\tpublic use(): JsonLd {\n+\t\treturn new JsonLd(this.httpRequestService);\n \t}\n }"
        },
        {
          "filename": "packages/backend/src/core/activitypub/misc/contexts.ts",
          "status": "modified",
          "additions": 37,
          "deletions": 2,
          "patch": "@@ -3,7 +3,7 @@\n  * SPDX-License-Identifier: AGPL-3.0-only\n  */\n \n-import type { JsonLd } from 'jsonld/jsonld-spec.js';\n+import type { Context, JsonLd } from 'jsonld/jsonld-spec.js';\n \n /* eslint:disable:quotemark indent */\n const id_v1 = {\n@@ -526,7 +526,42 @@ const activitystreams = {\n \t},\n } satisfies JsonLd;\n \n-export const CONTEXTS: Record<string, JsonLd> = {\n+const context_iris = [\n+\t'https://www.w3.org/ns/activitystreams',\n+\t'https://w3id.org/security/v1',\n+];\n+\n+const extension_context_definition = {\n+\tKey: 'sec:Key',\n+\t// as non-standards\n+\tmanuallyApprovesFollowers: 'as:manuallyApprovesFollowers',\n+\tsensitive: 'as:sensitive',\n+\tHashtag: 'as:Hashtag',\n+\tquoteUrl: 'as:quoteUrl',\n+\t// Mastodon\n+\ttoot: 'http://joinmastodon.org/ns#',\n+\tEmoji: 'toot:Emoji',\n+\tfeatured: 'toot:featured',\n+\tdiscoverable: 'toot:discoverable',\n+\t// schema\n+\tschema: 'http://schema.org#',\n+\tPropertyValue: 'schema:PropertyValue',\n+\tvalue: 'schema:value',\n+\t// Misskey\n+\tmisskey: 'https://misskey-hub.net/ns#',\n+\t'_misskey_content': 'misskey:_misskey_content',\n+\t'_misskey_quote': 'misskey:_misskey_quote',\n+\t'_misskey_reaction': 'misskey:_misskey_reaction',\n+\t'_misskey_votes': 'misskey:_misskey_votes',\n+\t'_misskey_summary': 'misskey:_misskey_summary',\n+\t'isCat': 'misskey:isCat',\n+\t// vcard\n+\tvcard: 'http://www.w3.org/2006/vcard/ns#',\n+} satisfies Context;\n+\n+export const CONTEXT: (string | Context)[] = [...context_iris, extension_context_definition];\n+\n+export const PRELOADED_CONTEXTS: Record<string, JsonLd> = {\n \t'https://w3id.org/identity/v1': id_v1,\n \t'https://w3id.org/security/v1': security_v1,\n \t'https://www.w3.org/ns/activitystreams': activitystreams,"
        },
        {
          "filename": "packages/backend/src/queue/processors/InboxProcessorService.ts",
          "status": "modified",
          "additions": 32,
          "deletions": 12,
          "patch": "@@ -15,13 +15,14 @@ import InstanceChart from '@/core/chart/charts/instance.js';\n import ApRequestChart from '@/core/chart/charts/ap-request.js';\n import FederationChart from '@/core/chart/charts/federation.js';\n import { getApId } from '@/core/activitypub/type.js';\n+import type { IActivity } from '@/core/activitypub/type.js';\n import type { MiRemoteUser } from '@/models/User.js';\n import type { MiUserPublickey } from '@/models/UserPublickey.js';\n import { ApDbResolverService } from '@/core/activitypub/ApDbResolverService.js';\n import { StatusError } from '@/misc/status-error.js';\n import { UtilityService } from '@/core/UtilityService.js';\n import { ApPersonService } from '@/core/activitypub/models/ApPersonService.js';\n-import { LdSignatureService } from '@/core/activitypub/LdSignatureService.js';\n+import { JsonLdService } from '@/core/activitypub/JsonLdService.js';\n import { ApInboxService } from '@/core/activitypub/ApInboxService.js';\n import { bindThis } from '@/decorators.js';\n import { IdentifiableError } from '@/misc/identifiable-error.js';\n@@ -38,7 +39,7 @@ export class InboxProcessorService {\n \t\tprivate apInboxService: ApInboxService,\n \t\tprivate federatedInstanceService: FederatedInstanceService,\n \t\tprivate fetchInstanceMetadataService: FetchInstanceMetadataService,\n-\t\tprivate ldSignatureService: LdSignatureService,\n+\t\tprivate jsonLdService: JsonLdService,\n \t\tprivate apPersonService: ApPersonService,\n \t\tprivate apDbResolverService: ApDbResolverService,\n \t\tprivate instanceChart: InstanceChart,\n@@ -52,7 +53,7 @@ export class InboxProcessorService {\n \t@bindThis\n \tpublic async process(job: Bull.Job<InboxJobData>): Promise<string> {\n \t\tconst signature = job.data.signature;\t// HTTP-signature\n-\t\tconst activity = job.data.activity;\n+\t\tlet activity = job.data.activity;\n \n \t\t//#region Log\n \t\tconst info = Object.assign({}, activity);\n@@ -110,20 +111,21 @@ export class InboxProcessorService {\n \t\t// \u307e\u305f\u3001signature\u306esigner\u306f\u3001activity.actor\u3068\u4e00\u81f4\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\n \t\tif (!httpSignatureValidated || authUser.user.uri !== activity.actor) {\n \t\t\t// \u4e00\u81f4\u3057\u306a\u304f\u3066\u3082\u3001\u3067\u3082LD-Signature\u304c\u3042\u308a\u305d\u3046\u306a\u3089\u305d\u3063\u3061\u3082\u898b\u308b\n-\t\t\tif (activity.signature) {\n-\t\t\t\tif (activity.signature.type !== 'RsaSignature2017') {\n-\t\t\t\t\tthrow new Bull.UnrecoverableError(`skip: unsupported LD-signature type ${activity.signature.type}`);\n+\t\t\tconst ldSignature = activity.signature;\n+\t\t\tif (ldSignature) {\n+\t\t\t\tif (ldSignature.type !== 'RsaSignature2017') {\n+\t\t\t\t\tthrow new Bull.UnrecoverableError(`skip: unsupported LD-signature type ${ldSignature.type}`);\n \t\t\t\t}\n \n-\t\t\t\t// activity.signature.creator: https://example.oom/users/user#main-key\n+\t\t\t\t// ldSignature.creator: https://example.oom/users/user#main-key\n \t\t\t\t// \u307f\u305f\u3044\u306b\u306a\u3063\u3066\u3066User\u3092\u5f15\u3063\u5f35\u308c\u3070\u516c\u958b\u30ad\u30fc\u3082\u5165\u308b\u3053\u3068\u3092\u671f\u5f85\u3059\u308b\n-\t\t\t\tif (activity.signature.creator) {\n-\t\t\t\t\tconst candicate = activity.signature.creator.replace(/#.*/, '');\n+\t\t\t\tif (ldSignature.creator) {\n+\t\t\t\t\tconst candicate = ldSignature.creator.replace(/#.*/, '');\n \t\t\t\t\tawait this.apPersonService.resolvePerson(candicate).catch(() => null);\n \t\t\t\t}\n \n \t\t\t\t// keyId\u304b\u3089LD-Signature\u306e\u30e6\u30fc\u30b6\u30fc\u3092\u53d6\u5f97\n-\t\t\t\tauthUser = await this.apDbResolverService.getAuthUserFromKeyId(activity.signature.creator);\n+\t\t\t\tauthUser = await this.apDbResolverService.getAuthUserFromKeyId(ldSignature.creator);\n \t\t\t\tif (authUser == null) {\n \t\t\t\t\tthrow new Bull.UnrecoverableError('skip: LD-Signature\u306e\u30e6\u30fc\u30b6\u30fc\u304c\u53d6\u5f97\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f');\n \t\t\t\t}\n@@ -132,13 +134,31 @@ export class InboxProcessorService {\n \t\t\t\t\tthrow new Bull.UnrecoverableError('skip: LD-Signature\u306e\u30e6\u30fc\u30b6\u30fc\u306fpublicKey\u3092\u6301\u3063\u3066\u3044\u307e\u305b\u3093\u3067\u3057\u305f');\n \t\t\t\t}\n \n+\t\t\t\tconst jsonLd = this.jsonLdService.use();\n+\n \t\t\t\t// LD-Signature\u691c\u8a3c\n-\t\t\t\tconst ldSignature = this.ldSignatureService.use();\n-\t\t\t\tconst verified = await ldSignature.verifyRsaSignature2017(activity, authUser.key.keyPem).catch(() => false);\n+\t\t\t\tconst verified = await jsonLd.verifyRsaSignature2017(activity, authUser.key.keyPem).catch(() => false);\n \t\t\t\tif (!verified) {\n \t\t\t\t\tthrow new Bull.UnrecoverableError('skip: LD-Signature\u306e\u691c\u8a3c\u306b\u5931\u6557\u3057\u307e\u3057\u305f');\n \t\t\t\t}\n \n+\t\t\t\t// \u30a2\u30af\u30c6\u30a3\u30d3\u30c6\u30a3\u3092\u6b63\u898f\u5316\n+\t\t\t\tdelete activity.signature;\n+\t\t\t\ttry {\n+\t\t\t\t\tactivity = await jsonLd.compact(activity) as IActivity;\n+\t\t\t\t} catch (e) {\n+\t\t\t\t\tthrow new Bull.UnrecoverableError(`skip: failed to compact activity: ${e}`);\n+\t\t\t\t}\n+\t\t\t\t// TODO: \u5143\u306e\u30a2\u30af\u30c6\u30a3\u30d3\u30c6\u30a3\u3068\u975e\u4e92\u63db\u306a\u5f62\u306b\u6b63\u898f\u5316\u3055\u308c\u308b\u5834\u5408\u306f\u8ee2\u9001\u3092\u30b9\u30ad\u30c3\u30d7\u3059\u308b\n+\t\t\t\t// https://github.com/mastodon/mastodon/blob/664b0ca/app/services/activitypub/process_collection_service.rb#L24-L29\n+\t\t\t\tactivity.signature = ldSignature;\n+\n+\t\t\t\t//#region Log\n+\t\t\t\tconst compactedInfo = Object.assign({}, activity);\n+\t\t\t\tdelete compactedInfo['@context'];\n+\t\t\t\tthis.logger.debug(`compacted: ${JSON.stringify(compactedInfo, null, 2)}`);\n+\t\t\t\t//#endregion\n+\n \t\t\t\t// \u3082\u3046\u4e00\u5ea6actor\u30c1\u30a7\u30c3\u30af\n \t\t\t\tif (authUser.user.uri !== activity.actor) {\n \t\t\t\t\tthrow new Bull.UnrecoverableError(`skip: LD-Signature user(${authUser.user.uri}) !== activity.actor(${activity.actor})`);"
        },
        {
          "filename": "packages/backend/test/unit/activitypub.ts",
          "status": "modified",
          "additions": 42,
          "deletions": 0,
          "patch": "@@ -13,6 +13,8 @@ import { ApImageService } from '@/core/activitypub/models/ApImageService.js';\n import { ApNoteService } from '@/core/activitypub/models/ApNoteService.js';\n import { ApPersonService } from '@/core/activitypub/models/ApPersonService.js';\n import { ApRendererService } from '@/core/activitypub/ApRendererService.js';\n+import { JsonLdService } from '@/core/activitypub/JsonLdService.js';\n+import { CONTEXT } from '@/core/activitypub/misc/contexts.js';\n import { GlobalModule } from '@/GlobalModule.js';\n import { CoreModule } from '@/core/CoreModule.js';\n import { FederatedInstanceService } from '@/core/FederatedInstanceService.js';\n@@ -88,6 +90,7 @@ describe('ActivityPub', () => {\n \tlet noteService: ApNoteService;\n \tlet personService: ApPersonService;\n \tlet rendererService: ApRendererService;\n+\tlet jsonLdService: JsonLdService;\n \tlet resolver: MockResolver;\n \n \tconst metaInitial = {\n@@ -128,6 +131,7 @@ describe('ActivityPub', () => {\n \t\tpersonService = app.get<ApPersonService>(ApPersonService);\n \t\trendererService = app.get<ApRendererService>(ApRendererService);\n \t\timageService = app.get<ApImageService>(ApImageService);\n+\t\tjsonLdService = app.get<JsonLdService>(JsonLdService);\n \t\tresolver = new MockResolver(await app.resolve<LoggerService>(LoggerService));\n \n \t\t// Prevent ApPersonService from fetching instance, as it causes Jest import-after-test error\n@@ -381,4 +385,42 @@ describe('ActivityPub', () => {\n \t\t\tassert.strictEqual(driveFile, null);\n \t\t});\n \t});\n+\n+\tdescribe('JSON-LD', () =>{\n+\t\ttest('Compaction', async () => {\n+\t\t\tconst jsonLd = jsonLdService.use();\n+\n+\t\t\tconst object = {\n+\t\t\t\t'@context': [\n+\t\t\t\t\t'https://www.w3.org/ns/activitystreams',\n+\t\t\t\t\t{\n+\t\t\t\t\t\t_misskey_quote: 'https://misskey-hub.net/ns#_misskey_quote',\n+\t\t\t\t\t\tunknown: 'https://example.org/ns#unknown',\n+\t\t\t\t\t\tundefined: null,\n+\t\t\t\t\t},\n+\t\t\t\t],\n+\t\t\t\tid: 'https://example.com/notes/42',\n+\t\t\t\ttype: 'Note',\n+\t\t\t\tattributedTo: 'https://example.com/users/1',\n+\t\t\t\tto: ['https://www.w3.org/ns/activitystreams#Public'],\n+\t\t\t\tcontent: 'test test foo',\n+\t\t\t\t_misskey_quote: 'https://example.com/notes/1',\n+\t\t\t\tunknown: 'test test bar',\n+\t\t\t\tundefined: 'test test baz',\n+\t\t\t};\n+\t\t\tconst compacted = await jsonLd.compact(object);\n+\n+\t\t\tassert.deepStrictEqual(compacted, {\n+\t\t\t\t'@context': CONTEXT,\n+\t\t\t\tid: 'https://example.com/notes/42',\n+\t\t\t\ttype: 'Note',\n+\t\t\t\tattributedTo: 'https://example.com/users/1',\n+\t\t\t\tto: 'as:Public',\n+\t\t\t\tcontent: 'test test foo',\n+\t\t\t\t_misskey_quote: 'https://example.com/notes/1',\n+\t\t\t\t'https://example.org/ns#unknown': 'test test bar',\n+\t\t\t\t// undefined: 'test test baz',\n+\t\t\t});\n+\t\t});\n+\t});\n });"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 6,
        "max_directory_depth": 6
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "791b4500ec405446785acdc6d10c41acd9d2583c",
            "date": "2025-01-26T06:07:12Z",
            "author_login": "kakkokari-gtyih"
          },
          {
            "sha": "ef29130057e08e3c2b51625671d8cdfd495f6d08",
            "date": "2025-01-26T06:03:42Z",
            "author_login": "eternal-flame-AD"
          },
          {
            "sha": "f4bca4708eba50cdef4127c74a37678ac25747c8",
            "date": "2025-01-26T05:59:03Z",
            "author_login": "samunohito"
          },
          {
            "sha": "e94c697aae38820138d695a34b0f7af6d5c89e27",
            "date": "2025-01-26T03:26:29Z",
            "author_login": "syuilo"
          },
          {
            "sha": "8f37fb6713c1e094acdf995d47741c0447306b41",
            "date": "2025-01-25T12:01:11Z",
            "author_login": "kakkokari-gtyih"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.2,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:H/A:N",
    "cwe_id": "CWE-863",
    "description": "Misskey is an open source, decentralized microblogging platform. Misskey doesn't perform proper normalization on the JSON structures of incoming signed ActivityPub activity objects before processing them, allowing threat actors to spoof the contents of signed activities and impersonate the authors of the original activities. This vulnerability is fixed in 2024.5.0.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-06-03T16:15:08.567",
    "last_modified": "2024-11-21T09:16:10.010",
    "fix_date": "2024-05-01T07:33:58Z"
  },
  "references": [
    {
      "url": "https://github.com/misskey-dev/misskey/commit/d2a5bb39e344fcb84a24ae60faafe4694b227b88",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/misskey-dev/misskey/security/advisories/GHSA-2vxv-pv3m-3wvj",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/misskey-dev/misskey/commit/d2a5bb39e344fcb84a24ae60faafe4694b227b88",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/misskey-dev/misskey/security/advisories/GHSA-2vxv-pv3m-3wvj",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:26.334355",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "misskey",
    "owner": "misskey-dev",
    "created_at": "2016-12-25T13:16:07Z",
    "updated_at": "2025-01-26T06:07:17Z",
    "pushed_at": "2025-01-26T08:06:06Z",
    "size": 164612,
    "stars": 10264,
    "forks": 1404,
    "open_issues": 2267,
    "watchers": 10264,
    "has_security_policy": false,
    "default_branch": "develop",
    "protected_branches": [],
    "languages": {
      "TypeScript": 5503865,
      "Vue": 2535325,
      "JavaScript": 550495,
      "SCSS": 24017,
      "Pug": 20568,
      "CSS": 5581,
      "Dockerfile": 4843,
      "Shell": 1827,
      "Smarty": 1782,
      "HTML": 1242,
      "MDX": 575,
      "Procfile": 35
    },
    "commit_activity": {
      "total_commits_last_year": 1489,
      "avg_commits_per_week": 28.634615384615383,
      "days_active_last_year": 228
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "agpl-3.0"
    },
    "collected_at": "2025-01-26T08:06:37.138665"
  }
}