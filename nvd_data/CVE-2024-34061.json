{
  "cve_id": "CVE-2024-34061",
  "github_data": {
    "repository": "dgtlmoon/changedetection.io",
    "fix_commit": "c0f000b1d1ce03733460805dbbedde445fe2c762",
    "related_commits": [
      "c0f000b1d1ce03733460805dbbedde445fe2c762",
      "c0f000b1d1ce03733460805dbbedde445fe2c762"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "c0f000b1d1ce03733460805dbbedde445fe2c762",
      "commit_date": "2024-05-02T09:46:31Z",
      "author": {
        "login": "dgtlmoon",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Merge pull request from GHSA-pwgc-w4x9-gw67",
        "length": 189,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 55,
        "additions": 42,
        "deletions": 13
      },
      "files": [
        {
          "filename": "changedetectionio/blueprint/tags/templates/edit-tag.html",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -1,7 +1,7 @@\n {% extends 'base.html' %}\n {% block content %}\n-{% from '_helpers.jinja' import render_field, render_checkbox_field, render_button %}\n-{% from '_common_fields.jinja' import render_common_settings_form %}\n+{% from '_helpers.html' import render_field, render_checkbox_field, render_button %}\n+{% from '_common_fields.html' import render_common_settings_form %}\n <script>\n     const notification_base_url=\"{{url_for('ajax_callback_send_notification_test', mode=\"group-settings\")}}\";\n </script>"
        },
        {
          "filename": "changedetectionio/blueprint/tags/templates/groups-overview.html",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -1,6 +1,6 @@\n {% extends 'base.html' %}\n {% block content %}\n-{% from '_helpers.jinja' import render_simple_field, render_field %}\n+{% from '_helpers.html' import render_simple_field, render_field %}\n <script src=\"{{url_for('static_content', group='js', filename='jquery-3.6.0.min.js')}}\"></script>\n \n <div class=\"box\">"
        },
        {
          "filename": "changedetectionio/templates/IMPORTANT.md",
          "status": "added",
          "additions": 6,
          "deletions": 0,
          "patch": "@@ -0,0 +1,6 @@\n+# Important notes about templates\n+\n+Template names should always end in \".html\", \".htm\", \".xml\", \".xhtml\", \".svg\", even the `import`'ed templates.\n+\n+Jinja2's `def select_jinja_autoescape(self, filename: str) -> bool:` will check the filename extension and enable autoescaping\n+"
        },
        {
          "filename": "changedetectionio/templates/_common_fields.html",
          "status": "renamed",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -1,5 +1,5 @@\n \n-{% from '_helpers.jinja' import render_field %}\n+{% from '_helpers.html' import render_field %}\n \n {% macro render_common_settings_form(form, emailprefix, settings_application) %}\n                         <div class=\"pure-control-group\">"
        },
        {
          "filename": "changedetectionio/templates/_helpers.html",
          "status": "renamed",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "changedetectionio/templates/diff.html",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -1,5 +1,5 @@\n {% extends 'base.html' %}\n-{% from '_helpers.jinja' import render_field, render_checkbox_field, render_button %}\n+{% from '_helpers.html' import render_field, render_checkbox_field, render_button %}\n {% block content %}\n <script>\n     const screenshot_url=\"{{url_for('static_content', group='screenshot', filename=uuid)}}\";"
        },
        {
          "filename": "changedetectionio/templates/edit.html",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -1,7 +1,7 @@\n {% extends 'base.html' %}\n {% block content %}\n-{% from '_helpers.jinja' import render_field, render_checkbox_field, render_button %}\n-{% from '_common_fields.jinja' import render_common_settings_form %}\n+{% from '_helpers.html' import render_field, render_checkbox_field, render_button %}\n+{% from '_common_fields.html' import render_common_settings_form %}\n <script src=\"{{url_for('static_content', group='js', filename='tabs.js')}}\" defer></script>\n <script src=\"{{url_for('static_content', group='js', filename='vis.js')}}\" defer></script>\n <script>"
        },
        {
          "filename": "changedetectionio/templates/import.html",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -1,6 +1,6 @@\n {% extends 'base.html' %}\n {% block content %}\n-{% from '_helpers.jinja' import render_field %}\n+{% from '_helpers.html' import render_field %}\n <script src=\"{{url_for('static_content', group='js', filename='tabs.js')}}\" defer></script>\n <div class=\"edit-form monospaced-textarea\">\n "
        },
        {
          "filename": "changedetectionio/templates/settings.html",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -1,8 +1,8 @@\n {% extends 'base.html' %}\n \n {% block content %}\n-{% from '_helpers.jinja' import render_field, render_checkbox_field, render_button %}\n-{% from '_common_fields.jinja' import render_common_settings_form %}\n+{% from '_helpers.html' import render_field, render_checkbox_field, render_button %}\n+{% from '_common_fields.html' import render_common_settings_form %}\n <script>\n     const notification_base_url=\"{{url_for('ajax_callback_send_notification_test', mode=\"global-settings\")}}\";\n {% if emailprefix %}"
        },
        {
          "filename": "changedetectionio/templates/watch-overview.html",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -1,6 +1,6 @@\n {% extends 'base.html' %}\n {% block content %}\n-{% from '_helpers.jinja' import render_simple_field, render_field, render_nolabel_field, sort_by_title %}\n+{% from '_helpers.html' import render_simple_field, render_field, render_nolabel_field, sort_by_title %}\n <script src=\"{{url_for('static_content', group='js', filename='jquery-3.6.0.min.js')}}\"></script>\n <script src=\"{{url_for('static_content', group='js', filename='watch-overview.js')}}\" defer></script>\n "
        },
        {
          "filename": "changedetectionio/tests/test_security.py",
          "status": "modified",
          "additions": 25,
          "deletions": 2,
          "patch": "@@ -2,9 +2,11 @@\n from .util import set_original_response, set_modified_response, live_server_setup, wait_for_all_checks\n import time\n \n+def test_setup(client, live_server):\n+    live_server_setup(live_server)\n \n def test_bad_access(client, live_server):\n-    live_server_setup(live_server)\n+    #live_server_setup(live_server)\n     res = client.post(\n         url_for(\"import_page\"),\n         data={\"urls\": 'https://localhost'},\n@@ -63,4 +65,25 @@ def test_bad_access(client, live_server):\n     wait_for_all_checks(client)\n     res = client.get(url_for(\"index\"))\n \n-    assert b'file:// type access is denied for security reasons.' in res.data\n\\ No newline at end of file\n+    assert b'file:// type access is denied for security reasons.' in res.data\n+\n+def test_xss(client, live_server):\n+    #live_server_setup(live_server)\n+    from changedetectionio.notification import (\n+        default_notification_format\n+    )\n+    # the template helpers were named .jinja which meant they were not having jinja2 autoescape enabled.\n+    res = client.post(\n+        url_for(\"settings_page\"),\n+        data={\"application-notification_urls\": '\"><img src=x onerror=alert(document.domain)>',\n+              \"application-notification_title\": '\"><img src=x onerror=alert(document.domain)>',\n+              \"application-notification_body\": '\"><img src=x onerror=alert(document.domain)>',\n+              \"application-notification_format\": default_notification_format,\n+              \"requests-time_between_check-minutes\": 180,\n+              'application-fetch_backend': \"html_requests\"},\n+        follow_redirects=True\n+    )\n+\n+    assert b\"<img src=x onerror=alert(\" not in res.data\n+    assert b\"&lt;img\" in res.data\n+"
        }
      ],
      "file_patterns": {
        "security_files": 1,
        "config_files": 1,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 3,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "1c61b5a6239c9e4632492b7950db282e1466f933",
            "date": "2025-01-25T23:08:09Z",
            "author_login": "iafuad"
          },
          {
            "sha": "e799a1cdcbf1cb1feaa12838b7a8a3a85fee4f62",
            "date": "2025-01-21T12:40:01Z",
            "author_login": "dgtlmoon"
          },
          {
            "sha": "938065db6f8a735e562e2f62a7fb5300b734efd8",
            "date": "2025-01-20T15:10:54Z",
            "author_login": "dgtlmoon"
          },
          {
            "sha": "4f2d38ff49644d79d05c3661256c68ad3bcc5e63",
            "date": "2025-01-18T22:20:58Z",
            "author_login": "dgtlmoon"
          },
          {
            "sha": "8960f401b71d02519267819cfc617b8cd7305d4c",
            "date": "2025-01-13T12:13:18Z",
            "author_login": "dgtlmoon"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 4.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N",
    "cwe_id": "CWE-79",
    "description": "changedetection.io is a free open source web page change detection, website watcher, restock monitor and notification service. In affected versions Input in parameter notification_urls is not processed resulting in javascript execution in the application. A reflected XSS vulnerability happens when the user input from a URL or POST data is reflected on the page without being stored, thus allowing the attacker to inject malicious content. This issue has been addressed in version 0.45.22. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-05-02T14:15:10.083",
    "last_modified": "2024-11-21T09:18:00.410",
    "fix_date": "2024-05-02T09:46:31Z"
  },
  "references": [
    {
      "url": "https://github.com/dgtlmoon/changedetection.io/commit/c0f000b1d1ce03733460805dbbedde445fe2c762",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/dgtlmoon/changedetection.io/security/advisories/GHSA-pwgc-w4x9-gw67",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/dgtlmoon/changedetection.io/commit/c0f000b1d1ce03733460805dbbedde445fe2c762",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/dgtlmoon/changedetection.io/security/advisories/GHSA-pwgc-w4x9-gw67",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:07.051357",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "changedetection.io",
    "owner": "dgtlmoon",
    "created_at": "2021-01-27T16:03:30Z",
    "updated_at": "2025-01-26T07:42:58Z",
    "pushed_at": "2025-01-25T23:08:10Z",
    "size": 8798,
    "stars": 21320,
    "forks": 1156,
    "open_issues": 261,
    "watchers": 21320,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Python": 830650,
      "HTML": 137985,
      "JavaScript": 96137,
      "CSS": 49698,
      "SCSS": 41847,
      "Shell": 8373,
      "Dockerfile": 2677
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-26T08:02:58.429682"
  }
}