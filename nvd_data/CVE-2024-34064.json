{
  "cve_id": "CVE-2024-34064",
  "github_data": {
    "repository": "pallets/jinja",
    "fix_commit": "0668239dc6b44ef38e7a6c9f91f312fd4ca581cb",
    "related_commits": [
      "0668239dc6b44ef38e7a6c9f91f312fd4ca581cb",
      "0668239dc6b44ef38e7a6c9f91f312fd4ca581cb"
    ],
    "patch_url": "https://github.com/pallets/jinja/commit/0668239dc6b44ef38e7a6c9f91f312fd4ca581cb.patch",
    "fix_commit_details": {
      "sha": "0668239dc6b44ef38e7a6c9f91f312fd4ca581cb",
      "commit_date": "2024-05-05T23:35:24Z",
      "author": {
        "login": "davidism",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Merge pull request from GHSA-h75v-3vvj-5mfj",
        "length": 98,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 39,
        "additions": 29,
        "deletions": 10
      },
      "files": [
        {
          "filename": "CHANGES.rst",
          "status": "modified",
          "additions": 6,
          "deletions": 0,
          "patch": "@@ -5,6 +5,12 @@ Version 3.1.4\n \n Unreleased\n \n+-   The ``xmlattr`` filter does not allow keys with ``/`` solidus, ``>``\n+    greater-than sign, or ``=`` equals sign, in addition to disallowing spaces.\n+    Regardless of any validation done by Jinja, user input should never be used\n+    as keys to this filter, or must be separately validated first.\n+    GHSA-h75v-3vvj-5mfj\n+\n \n Version 3.1.3\n -------------"
        },
        {
          "filename": "src/jinja2/filters.py",
          "status": "modified",
          "additions": 17,
          "deletions": 5,
          "patch": "@@ -250,7 +250,9 @@ def do_items(value: t.Union[t.Mapping[K, V], Undefined]) -> t.Iterator[t.Tuple[K\n     yield from value.items()\n \n \n-_space_re = re.compile(r\"\\s\", flags=re.ASCII)\n+# Check for characters that would move the parser state from key to value.\n+# https://html.spec.whatwg.org/#attribute-name-state\n+_attr_key_re = re.compile(r\"[\\s/>=]\", flags=re.ASCII)\n \n \n @pass_eval_context\n@@ -259,8 +261,14 @@ def do_xmlattr(\n ) -> str:\n     \"\"\"Create an SGML/XML attribute string based on the items in a dict.\n \n-    If any key contains a space, this fails with a ``ValueError``. Values that\n-    are neither ``none`` nor ``undefined`` are automatically escaped.\n+    **Values** that are neither ``none`` nor ``undefined`` are automatically\n+    escaped, safely allowing untrusted user input.\n+\n+    User input should not be used as **keys** to this filter. If any key\n+    contains a space, ``/`` solidus, ``>`` greater-than sign, or ``=`` equals\n+    sign, this fails with a ``ValueError``. Regardless of this, user input\n+    should never be used as keys to this filter, or must be separately validated\n+    first.\n \n     .. sourcecode:: html+jinja\n \n@@ -280,6 +288,10 @@ def do_xmlattr(\n     As you can see it automatically prepends a space in front of the item\n     if the filter returned something unless the second parameter is false.\n \n+    .. versionchanged:: 3.1.4\n+        Keys with ``/`` solidus, ``>`` greater-than sign, or ``=`` equals sign\n+        are not allowed.\n+\n     .. versionchanged:: 3.1.3\n         Keys with spaces are not allowed.\n     \"\"\"\n@@ -289,8 +301,8 @@ def do_xmlattr(\n         if value is None or isinstance(value, Undefined):\n             continue\n \n-        if _space_re.search(key) is not None:\n-            raise ValueError(f\"Spaces are not allowed in attributes: '{key}'\")\n+        if _attr_key_re.search(key) is not None:\n+            raise ValueError(f\"Invalid character in attribute name: {key!r}\")\n \n         items.append(f'{escape(key)}=\"{escape(value)}\"')\n "
        },
        {
          "filename": "tests/test_filters.py",
          "status": "modified",
          "additions": 6,
          "deletions": 5,
          "patch": "@@ -474,11 +474,12 @@ def test_xmlattr(self, env):\n         assert 'bar=\"23\"' in out\n         assert 'blub:blub=\"&lt;?&gt;\"' in out\n \n-    def test_xmlattr_key_with_spaces(self, env):\n-        with pytest.raises(ValueError, match=\"Spaces are not allowed\"):\n-            env.from_string(\n-                \"{{ {'src=1 onerror=alert(1)': 'my_class'}|xmlattr }}\"\n-            ).render()\n+    @pytest.mark.parametrize(\"sep\", (\"\\t\", \"\\n\", \"\\f\", \" \", \"/\", \">\", \"=\"))\n+    def test_xmlattr_key_invalid(self, env: Environment, sep: str) -> None:\n+        with pytest.raises(ValueError, match=\"Invalid character\"):\n+            env.from_string(\"{{ {key: 'my_class'}|xmlattr }}\").render(\n+                key=f\"class{sep}onclick=alert(1)\"\n+            )\n \n     def test_sort1(self, env):\n         tmpl = env.from_string(\"{{ [2, 3, 1]|sort }}|{{ [2, 3, 1]|sort(true) }}\")"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 3,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "6aeab5d1da0bc0793406d7b402693e779b6cca7a",
            "date": "2024-12-21T18:47:46Z",
            "author_login": "davidism"
          },
          {
            "sha": "ab8218c7a1b66b62e0ad6b941bd514e3a64a358f",
            "date": "2024-12-21T18:47:08Z",
            "author_login": "davidism"
          },
          {
            "sha": "b4ffc8ff299dfd360064bea4cd2f862364601ad2",
            "date": "2024-12-21T18:30:50Z",
            "author_login": "davidism"
          },
          {
            "sha": "877f6e51be8e1765b06d911cfaa9033775f051d1",
            "date": "2024-12-21T18:16:13Z",
            "author_login": "davidism"
          },
          {
            "sha": "8d588592653b052f957b720e1fc93196e06f207f",
            "date": "2024-12-21T18:14:49Z",
            "author_login": "davidism"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.4,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N",
    "cwe_id": "CWE-79",
    "description": "Jinja is an extensible templating engine. The `xmlattr` filter in affected versions of Jinja accepts keys containing non-attribute characters. XML/HTML attributes cannot contain spaces, `/`, `>`, or `=`, as each would then be interpreted as starting a separate attribute. If an application accepts keys (as opposed to only values) as user input, and renders these in pages that other users see as well, an attacker could use this to inject other attributes and perform XSS. The fix for CVE-2024-22195 only addressed spaces but not other characters. Accepting keys as user input is now explicitly considered an unintended use case of the `xmlattr` filter, and code that does so without otherwise validating the input should be flagged as insecure, regardless of Jinja version. Accepting _values_ as user input continues to be safe. This vulnerability is fixed in 3.1.4.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-05-06T15:15:23.803",
    "last_modified": "2024-11-21T09:18:00.810",
    "fix_date": "2024-05-05T23:35:24Z"
  },
  "references": [
    {
      "url": "https://github.com/pallets/jinja/commit/0668239dc6b44ef38e7a6c9f91f312fd4ca581cb",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/pallets/jinja/security/advisories/GHSA-h75v-3vvj-5mfj",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/567XIGSZMABG6TSMYWD7MIYNJSUQQRUC/",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GCLF44KY43BSVMTE6S53B4V5WP3FRRSE/",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/SSCBHIL6BYKR5NRCBXP4XMP2CEEKGFVS/",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZALNWE3TXPPHVPSI3AZ5CTMSTAVN5UMS/",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/pallets/jinja/commit/0668239dc6b44ef38e7a6c9f91f312fd4ca581cb",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/pallets/jinja/security/advisories/GHSA-h75v-3vvj-5mfj",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/567XIGSZMABG6TSMYWD7MIYNJSUQQRUC/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GCLF44KY43BSVMTE6S53B4V5WP3FRRSE/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/SSCBHIL6BYKR5NRCBXP4XMP2CEEKGFVS/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZALNWE3TXPPHVPSI3AZ5CTMSTAVN5UMS/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:20.862593",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "jinja",
    "owner": "pallets",
    "created_at": "2010-10-17T13:41:17Z",
    "updated_at": "2025-01-14T17:14:56Z",
    "pushed_at": "2025-01-13T18:59:03Z",
    "size": 6851,
    "stars": 10514,
    "forks": 1626,
    "open_issues": 78,
    "watchers": 10514,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main",
      "stable"
    ],
    "languages": {
      "Python": 765568,
      "Shell": 165,
      "HTML": 81
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "bsd-3-clause"
    },
    "collected_at": "2025-01-14T17:33:24.688545"
  }
}