{
  "cve_id": "CVE-2024-34066",
  "github_data": {
    "repository": "pterodactyl/wings",
    "fix_commit": "5415f8ae07f533623bd8169836dd7e0b933964de",
    "related_commits": [
      "5415f8ae07f533623bd8169836dd7e0b933964de",
      "5415f8ae07f533623bd8169836dd7e0b933964de"
    ],
    "patch_url": "https://github.com/pterodactyl/wings/commit/5415f8ae07f533623bd8169836dd7e0b933964de.patch",
    "fix_commit_details": {
      "sha": "5415f8ae07f533623bd8169836dd7e0b933964de",
      "commit_date": "2024-04-10T21:23:03Z",
      "author": {
        "login": "matthewpi",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "config: prevent programmatic updates to specific fields",
        "length": 55,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 22,
        "additions": 12,
        "deletions": 10
      },
      "files": [
        {
          "filename": "config/config.go",
          "status": "modified",
          "additions": 12,
          "deletions": 10,
          "patch": "@@ -89,7 +89,7 @@ type ApiConfiguration struct {\n \t// Determines if functionality for allowing remote download of files into server directories\n \t// is enabled on this instance. If set to \"true\" remote downloads will not be possible for\n \t// servers.\n-\tDisableRemoteDownload bool `json:\"disable_remote_download\" yaml:\"disable_remote_download\"`\n+\tDisableRemoteDownload bool `json:\"-\" yaml:\"disable_remote_download\"`\n \n \t// The maximum size for files uploaded through the Panel in MB.\n \tUploadLimit int64 `default:\"100\" json:\"upload_limit\" yaml:\"upload_limit\"`\n@@ -123,23 +123,23 @@ type RemoteQueryConfiguration struct {\n // SystemConfiguration defines basic system configuration settings.\n type SystemConfiguration struct {\n \t// The root directory where all of the pterodactyl data is stored at.\n-\tRootDirectory string `default:\"/var/lib/pterodactyl\" yaml:\"root_directory\"`\n+\tRootDirectory string `default:\"/var/lib/pterodactyl\" json:\"-\" yaml:\"root_directory\"`\n \n \t// Directory where logs for server installations and other wings events are logged.\n-\tLogDirectory string `default:\"/var/log/pterodactyl\" yaml:\"log_directory\"`\n+\tLogDirectory string `default:\"/var/log/pterodactyl\" json:\"-\" yaml:\"log_directory\"`\n \n \t// Directory where the server data is stored at.\n-\tData string `default:\"/var/lib/pterodactyl/volumes\" yaml:\"data\"`\n+\tData string `default:\"/var/lib/pterodactyl/volumes\" json:\"-\" yaml:\"data\"`\n \n \t// Directory where server archives for transferring will be stored.\n-\tArchiveDirectory string `default:\"/var/lib/pterodactyl/archives\" yaml:\"archive_directory\"`\n+\tArchiveDirectory string `default:\"/var/lib/pterodactyl/archives\" json:\"-\" yaml:\"archive_directory\"`\n \n \t// Directory where local backups will be stored on the machine.\n-\tBackupDirectory string `default:\"/var/lib/pterodactyl/backups\" yaml:\"backup_directory\"`\n+\tBackupDirectory string `default:\"/var/lib/pterodactyl/backups\" json:\"-\" yaml:\"backup_directory\"`\n \n \t// TmpDirectory specifies where temporary files for Pterodactyl installation processes\n \t// should be created. This supports environments running docker-in-docker.\n-\tTmpDirectory string `default:\"/tmp/pterodactyl\" yaml:\"tmp_directory\"`\n+\tTmpDirectory string `default:\"/tmp/pterodactyl\" json:\"-\" yaml:\"tmp_directory\"`\n \n \t// The user that should own all of the server files, and be used for containers.\n \tUsername string `default:\"pterodactyl\" yaml:\"username\"`\n@@ -306,7 +306,7 @@ type Configuration struct {\n \n \t// The location where the panel is running that this daemon should connect to\n \t// to collect data and send events.\n-\tPanelLocation string                   `json:\"remote\" yaml:\"remote\"`\n+\tPanelLocation string                   `json:\"-\" yaml:\"remote\"`\n \tRemoteQuery   RemoteQueryConfiguration `json:\"remote_query\" yaml:\"remote_query\"`\n \n \t// AllowedMounts is a list of allowed host-system mount points.\n@@ -676,8 +676,10 @@ func getSystemName() (string, error) {\n \treturn release[\"ID\"], nil\n }\n \n-var openat2 atomic.Bool\n-var openat2Set atomic.Bool\n+var (\n+\topenat2    atomic.Bool\n+\topenat2Set atomic.Bool\n+)\n \n func UseOpenat2() bool {\n \tif openat2Set.Load() {"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 1,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "c6c235dbc07341d5f50606819624a2e4770648a7",
            "date": "2025-01-12T22:28:46Z",
            "author_login": "matthewpi"
          },
          {
            "sha": "a55277da471a7b559e7fa45bb07024b7629e7ba2",
            "date": "2025-01-12T21:45:16Z",
            "author_login": "matthewpi"
          },
          {
            "sha": "76a9f6dc5a3396a8e3b71fa1ebe2dcfa3ad93b3c",
            "date": "2025-01-12T21:25:34Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "0e96ef3edffe9978a13553b907899fdfe30d80c6",
            "date": "2025-01-12T21:25:19Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "1dee350268f632045203cf892f186e9c45f55a84",
            "date": "2025-01-12T21:22:18Z",
            "author_login": "matthewpi"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.4,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:H/UI:R/S:C/C:H/I:H/A:H",
    "cwe_id": "CWE-552",
    "description": "Pterodactyl wings is the server control plane for Pterodactyl Panel. If the Wings token is leaked either by viewing the node configuration or posting it accidentally somewhere, an attacker can use it to gain arbitrary file write and read access on the node the token is associated to. This issue has been addressed in version 1.11.12 and users are advised to upgrade. Users unable to upgrade may enable the `ignore_panel_config_updates` option as a workaround.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-05-03T18:15:09.363",
    "last_modified": "2024-11-21T09:18:01.130",
    "fix_date": "2024-04-10T21:23:03Z"
  },
  "references": [
    {
      "url": "https://github.com/pterodactyl/wings/commit/5415f8ae07f533623bd8169836dd7e0b933964de",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/pterodactyl/wings/security/advisories/GHSA-gqmf-jqgv-v8fw",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/pterodactyl/wings/commit/5415f8ae07f533623bd8169836dd7e0b933964de",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/pterodactyl/wings/security/advisories/GHSA-gqmf-jqgv-v8fw",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:20.850750",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "wings",
    "owner": "pterodactyl",
    "created_at": "2017-05-17T10:49:28Z",
    "updated_at": "2025-01-13T06:01:10Z",
    "pushed_at": "2025-01-12T22:32:13Z",
    "size": 3463,
    "stars": 769,
    "forks": 335,
    "open_issues": 18,
    "watchers": 769,
    "has_security_policy": false,
    "default_branch": "develop",
    "protected_branches": [
      "develop"
    ],
    "languages": {
      "Go": 651888,
      "Nix": 1270,
      "Makefile": 963,
      "Dockerfile": 697,
      "Shell": 10
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T15:17:48.763579"
  }
}