{
  "cve_id": "CVE-2024-34077",
  "github_data": {
    "repository": "mantisbt/mantisbt",
    "fix_commit": "92d11a01b195a1b6717a2f205218089158ea6d00",
    "related_commits": [
      "92d11a01b195a1b6717a2f205218089158ea6d00",
      "92d11a01b195a1b6717a2f205218089158ea6d00"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "92d11a01b195a1b6717a2f205218089158ea6d00",
      "commit_date": "2024-05-06T00:09:03Z",
      "author": {
        "login": "dregad",
        "type": "User",
        "stats": {
          "total_commits": 3418,
          "average_weekly_commits": 2.886824324324324,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 500
        }
      },
      "commit_message": {
        "title": "Validate confirm hash when updating account",
        "length": 220,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 28,
        "additions": 20,
        "deletions": 8
      },
      "files": [
        {
          "filename": "account_update.php",
          "status": "modified",
          "additions": 19,
          "deletions": 8,
          "patch": "@@ -60,19 +60,30 @@\n \n form_security_validate( 'account_update' );\n \n-# If token is set, it's a password reset request from verify.php, and if\n-# not we need to reauthenticate the user\n-$t_verify_user_id = gpc_get( 'verify_user_id', false );\n-$t_account_verification = $t_verify_user_id ? token_get_value( TOKEN_ACCOUNT_VERIFY, $t_verify_user_id ) : false;\n-if( !$t_account_verification ) {\n-\tauth_reauthenticate();\n-\t$t_user_id = auth_get_current_user_id();\n-} else {\n+$t_verify_user_id = gpc_get_int( 'verify_user_id', 0 );\n+$t_account_verification = (bool)$t_verify_user_id;\n+if( $t_account_verification ) {\n+\t# Password reset request from verify.php - validate the confirmation hash\n+\t$f_confirm_hash = gpc_get_string( 'confirm_hash' );\n+\t$t_token_confirm_hash = token_get_value( TOKEN_ACCOUNT_ACTIVATION, $t_verify_user_id );\n+\tif( $t_token_confirm_hash == null || $f_confirm_hash !== $t_token_confirm_hash ) {\n+\t\ttrigger_error( ERROR_LOST_PASSWORD_CONFIRM_HASH_INVALID, ERROR );\n+\t}\n+\n+\t# Make sure the token is not expired\n+\tif( null === token_get_value( TOKEN_ACCOUNT_VERIFY, $t_verify_user_id ) ) {\n+\t\ttrigger_error( ERROR_SESSION_NOT_VALID, ERROR );\n+\t}\n+\n \t# set a temporary cookie so the login information is passed between pages.\n \tauth_set_cookies( $t_verify_user_id );\n \t# fake login so the user can set their password\n \tauth_attempt_script_login( user_get_username( $t_verify_user_id ) );\n \t$t_user_id = $t_verify_user_id;\n+} else {\n+\t# Normal account update - authenticate the user\n+\tauth_reauthenticate();\n+\t$t_user_id = auth_get_current_user_id();\n }\n \n auth_ensure_user_authenticated();"
        },
        {
          "filename": "verify.php",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -131,6 +131,7 @@\n \t\t\t\t\t<legend><span><?php echo lang_get( 'edit_account_title' ) . ' - ' . string_display_line( $u_username ) ?></span></legend>\n \t\t\t\t\t<div class=\"space-10\"></div>\n \t\t\t\t\t<input type=\"hidden\" name=\"verify_user_id\" value=\"<?php echo $u_id ?>\">\n+\t\t\t\t\t<input type=\"hidden\" name=\"confirm_hash\" value=\"<?php echo string_html_specialchars( $f_confirm_hash ) ?>\">\n \t\t\t\t\t<?php\n \t\t\t\t\techo form_security_field( 'account_update' );\n \t\t\t\t\t# When verifying account, set a token and don't display current password"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 0
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "924fb05df417dc639fd50a518dba20531a322851",
            "date": "2025-01-23T12:46:58Z",
            "author_login": "dregad"
          },
          {
            "sha": "60cb1d4e48e3e4578a1b8f662e22ba59dea9cb21",
            "date": "2025-01-23T12:41:32Z",
            "author_login": "raspopov"
          },
          {
            "sha": "7626b72778eaa1d3767b21f613219b0d1c46d9ca",
            "date": "2025-01-23T12:29:11Z",
            "author_login": "dregad"
          },
          {
            "sha": "4994c09658dd16045cc2ff62f184842029fb43fc",
            "date": "2025-01-23T12:07:11Z",
            "author_login": "translatewiki"
          },
          {
            "sha": "64a6c746c971d6f7ecc3063f5bafe9cb357cca93",
            "date": "2025-01-20T12:07:27Z",
            "author_login": "translatewiki"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
    "cwe_id": "CWE-305",
    "description": "MantisBT (Mantis Bug Tracker) is an open source issue tracker. Insufficient access control in the registration and password reset process allows an attacker to reset another user's password and takeover their account, if the victim has an incomplete request pending. The exploit is only possible while the verification token is valid, i.e for 5 minutes after the confirmation URL sent by e-mail has been opened, and the user did not complete the process by updating their password. A brute-force attack calling account_update.php with increasing user IDs is possible. A successful takeover would grant the attacker full access to the compromised account, including sensitive information and functionalities associated with the account, the extent of which depends on its privileges and the data it has access to. Version 2.26.2 contains a patch for the issue. As a workaround, one may mitigate the risk by reducing the verification token's validity (change the value of the `TOKEN_EXPIRY_AUTHENTICATED` constant in `constants_inc.php`).",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-05-14T15:38:28.583",
    "last_modified": "2024-11-21T09:18:02.530",
    "fix_date": "2024-05-06T00:09:03Z"
  },
  "references": [
    {
      "url": "https://github.com/mantisbt/mantisbt/commit/92d11a01b195a1b6717a2f205218089158ea6d00",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/mantisbt/mantisbt/security/advisories/GHSA-93x3-m7pw-ppqm",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://mantisbt.org/bugs/view.php?id=34433",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/mantisbt/mantisbt/commit/92d11a01b195a1b6717a2f205218089158ea6d00",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/mantisbt/mantisbt/security/advisories/GHSA-93x3-m7pw-ppqm",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://mantisbt.org/bugs/view.php?id=34433",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:20.890683",
    "processing_status": "enhanced"
  }
}