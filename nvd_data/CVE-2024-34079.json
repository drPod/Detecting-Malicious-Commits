{
  "cve_id": "CVE-2024-34079",
  "github_data": {
    "repository": "octo-sts/app",
    "fix_commit": "74ba874c017cf973edd6711144cf4399a9fcff57",
    "related_commits": [
      "74ba874c017cf973edd6711144cf4399a9fcff57",
      "74ba874c017cf973edd6711144cf4399a9fcff57"
    ],
    "patch_url": "https://github.com/octo-sts/app/commit/74ba874c017cf973edd6711144cf4399a9fcff57.patch",
    "fix_commit_details": {
      "sha": "74ba874c017cf973edd6711144cf4399a9fcff57",
      "commit_date": "2024-05-10T18:49:11Z",
      "author": {
        "login": "mattmoor",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Merge pull request from GHSA-75r6-6jg8-pfcq",
        "length": 350,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 113,
        "additions": 113,
        "deletions": 0
      },
      "files": [
        {
          "filename": "pkg/maxsize/maxsize.go",
          "status": "added",
          "additions": 50,
          "deletions": 0,
          "patch": "@@ -0,0 +1,50 @@\n+// Copyright 2024 Chainguard, Inc.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package maxsize\n+\n+import (\n+\t\"io\"\n+\t\"net/http\"\n+)\n+\n+// NewRoundTripper creates a new http.RoundTripper that wraps the given\n+// http.RoundTripper and limits the size of the response body to maxSize bytes.\n+func NewRoundTripper(maxSize int64, inner http.RoundTripper) http.RoundTripper {\n+\treturn &ms{\n+\t\tbase:        inner,\n+\t\tmaxBodySize: maxSize,\n+\t}\n+}\n+\n+type ms struct {\n+\tbase        http.RoundTripper // The underlying RoundTripper\n+\tmaxBodySize int64             // Maximum allowed response body size in bytes\n+}\n+\n+// RoundTrip implements http.RoundTripper\n+func (rt *ms) RoundTrip(req *http.Request) (*http.Response, error) {\n+\tresp, err := rt.base.RoundTrip(req)\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\n+\tresp.Body = &lr{\n+\t\tLimitedReader: io.LimitedReader{\n+\t\t\tR: resp.Body,\n+\t\t\tN: rt.maxBodySize,\n+\t\t},\n+\t\tclose: resp.Body.Close,\n+\t}\n+\treturn resp, nil\n+}\n+\n+type lr struct {\n+\tio.LimitedReader\n+\tclose func() error\n+}\n+\n+// Close implements io.Closer\n+func (r *lr) Close() error {\n+\treturn r.close()\n+}"
        },
        {
          "filename": "pkg/maxsize/maxsize_test.go",
          "status": "added",
          "additions": 49,
          "deletions": 0,
          "patch": "@@ -0,0 +1,49 @@\n+// Copyright 2024 Chainguard, Inc.\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package maxsize\n+\n+import (\n+\t\"context\"\n+\t\"net/http\"\n+\t\"testing\"\n+\n+\t\"github.com/coreos/go-oidc/v3/oidc\"\n+)\n+\n+func TestCompile(t *testing.T) {\n+\ttests := []struct {\n+\t\tname    string\n+\t\tsize    int64\n+\t\twantErr bool\n+\t}{{\n+\t\tname:    \"large size\",\n+\t\tsize:    1000000, // 1M bytes\n+\t\twantErr: false,\n+\t}, {\n+\t\tname:    \"medium size\",\n+\t\tsize:    10000, // 10000 bytes\n+\t\twantErr: false,\n+\t}, {\n+\t\tname:    \"tiny size\",\n+\t\tsize:    10, // 10 bytes\n+\t\twantErr: true,\n+\t}}\n+\n+\tfor _, tt := range tests {\n+\t\tt.Run(tt.name, func(t *testing.T) {\n+\t\t\tctx := oidc.ClientContext(context.Background(), &http.Client{\n+\t\t\t\tTransport: NewRoundTripper(tt.size, http.DefaultTransport),\n+\t\t\t})\n+\t\t\tfor _, issuer := range []string{\n+\t\t\t\t\"https://accounts.google.com\",\n+\t\t\t\t\"https://token.actions.githubusercontent.com\",\n+\t\t\t\t\"https://issuer.enforce.dev\",\n+\t\t\t} {\n+\t\t\t\tif _, err := oidc.NewProvider(ctx, issuer); (err != nil) != tt.wantErr {\n+\t\t\t\t\tt.Errorf(\"constructing %q provider: %v\", issuer, err)\n+\t\t\t\t}\n+\t\t\t}\n+\t\t})\n+\t}\n+}"
        },
        {
          "filename": "pkg/provider/provider.go",
          "status": "modified",
          "additions": 14,
          "deletions": 0,
          "patch": "@@ -6,12 +6,22 @@ package provider\n import (\n \t\"context\"\n \t\"fmt\"\n+\t\"net/http\"\n \n \t\"github.com/chainguard-dev/clog\"\n+\t\"github.com/chainguard-dev/terraform-infra-common/pkg/httpmetrics\"\n \t\"github.com/coreos/go-oidc/v3/oidc\"\n \tlru \"github.com/hashicorp/golang-lru/v2\"\n+\t\"github.com/octo-sts/app/pkg/maxsize\"\n )\n \n+// MaximumResponseSize is the maximum size of allowed responses from\n+// OIDC providers.  Some anecdata\n+//   - Google: needs around 1KiB\n+//   - GitHub: needs around 5KiB\n+//   - Chainguard: needs around 2KiB\n+const MaximumResponseSize = 100 * 1024 // 100KiB\n+\n var (\n \t// providers is an LRU cache of recently used providers.\n \tproviders, _ = lru.New2Q[string, *oidc.Provider](100)\n@@ -25,6 +35,10 @@ func Get(ctx context.Context, issuer string) (provider *oidc.Provider, err error\n \t\treturn v, nil\n \t}\n \n+\tctx = oidc.ClientContext(ctx, &http.Client{\n+\t\tTransport: maxsize.NewRoundTripper(MaximumResponseSize, httpmetrics.Transport),\n+\t})\n+\n \t// Verify the token before we trust anything about it.\n \tprovider, err = oidc.NewProvider(ctx, issuer)\n \tif err != nil {"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "f510f352433a945c0c3398a5019c4f7d778af9e2",
            "date": "2025-01-14T09:59:51Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "4061c5dc9f6da4c138dffb52362c26ff25304408",
            "date": "2025-01-13T20:23:27Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "d737cdb02f86cb724f5d5efd4ad969f09b70b928",
            "date": "2025-01-13T08:23:36Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "c22c01d7b5828f40fe4a7ba24140bff417abc77d",
            "date": "2025-01-10T20:52:03Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "316961572fb0ae7e51b01a3cc38d38ac7c0fc137",
            "date": "2025-01-10T20:51:17Z",
            "author_login": "dependabot[bot]"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 3.7,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
    "cwe_id": "CWE-400",
    "description": "octo-sts is a GitHub App that acts like a Security Token Service (STS) for the Github API. This vulnerability can spike the resource utilization of the STS service, and combined with a significant traffic volume could potentially lead to a denial of service. This vulnerability is fixed in 0.1.0",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2024-05-14T15:38:29.183",
    "last_modified": "2024-11-21T09:18:02.823",
    "fix_date": "2024-05-10T18:49:11Z"
  },
  "references": [
    {
      "url": "https://github.com/octo-sts/app/commit/74ba874c017cf973edd6711144cf4399a9fcff57",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/octo-sts/app/security/advisories/GHSA-75r6-6jg8-pfcq",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/octo-sts/app/commit/74ba874c017cf973edd6711144cf4399a9fcff57",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/octo-sts/app/security/advisories/GHSA-75r6-6jg8-pfcq",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:20.890830",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "app",
    "owner": "octo-sts",
    "created_at": "2024-01-19T16:49:59Z",
    "updated_at": "2025-01-14T09:59:56Z",
    "pushed_at": "2025-01-14T09:59:53Z",
    "size": 837,
    "stars": 145,
    "forks": 15,
    "open_issues": 24,
    "watchers": 145,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main"
    ],
    "languages": {
      "Go": 84384,
      "HCL": 20526,
      "Shell": 93
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T20:37:01.325288"
  }
}