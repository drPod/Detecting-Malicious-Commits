{
  "cve_id": "CVE-2024-34349",
  "github_data": {
    "repository": "Sylius/Sylius",
    "fix_commit": "ba4b66da5af88cdb1bba6174de8bdf42f4853e12",
    "related_commits": [
      "ba4b66da5af88cdb1bba6174de8bdf42f4853e12",
      "ba4b66da5af88cdb1bba6174de8bdf42f4853e12"
    ],
    "patch_url": "https://github.com/Sylius/Sylius/commit/ba4b66da5af88cdb1bba6174de8bdf42f4853e12.patch",
    "fix_commit_details": {
      "sha": "ba4b66da5af88cdb1bba6174de8bdf42f4853e12",
      "commit_date": "2024-05-10T07:32:50Z",
      "author": {
        "login": "GSadee",
        "type": "User",
        "stats": {
          "total_commits": 5303,
          "average_weekly_commits": 7.821533923303835,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 343
        }
      },
      "commit_message": {
        "title": "bug #76 Fix potential xss in admin panel (mpysiak)",
        "length": 875,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 75,
        "additions": 68,
        "deletions": 7
      },
      "files": [
        {
          "filename": "features/product/managing_products/preventing_xss_attack_while_adding_a_new_product.feature",
          "status": "added",
          "additions": 22,
          "deletions": 0,
          "patch": "@@ -0,0 +1,22 @@\n+@managing_products\n+Feature: Preventing a potential XSS attack while adding new product\n+    In order to keep my information safe\n+    As an Administrator\n+    I want to be protected against the potential XSS attacks\n+\n+    Background:\n+        Given the store operates on a single channel in \"United States\"\n+        And the store has \"<script>alert('xss')</script>\" taxonomy\n+        And the store has \"No XSS\" taxonomy\n+        And I am logged in as an administrator\n+\n+    @ui @javascript @no-api\n+    Scenario: Preventing a potential XSS attack while adding new product\n+        When I want to create a new simple product\n+        Then I should be able to name it \"No XSS\" in \"English (United States)\"\n+\n+    @ui @javascript @no-api\n+    Scenario: Preventing a potential XSS attack while choosing main taxon for a new product\n+        When I want to create a new simple product\n+        Then I should be able to choose main taxon \"No XSS\"\n+"
        },
        {
          "filename": "features/product/managing_products/preventing_xss_attack_while_editing_product.feature",
          "status": "added",
          "additions": 16,
          "deletions": 0,
          "patch": "@@ -0,0 +1,16 @@\n+@managing_products\n+Feature: Preventing a potential XSS attack while selecting similar product\n+    In order to keep my information safe\n+    As an Administrator\n+    I want to be protected against the potential XSS attacks\n+\n+    Background:\n+        Given the store operates on a single channel in \"United States\"\n+        And the store has a product association type \"Accessories\"\n+        And the store has \"<script>alert('xss')</script>\" and \"LG headphones\" products\n+        And I am logged in as an administrator\n+\n+    @ui @javascript @no-api\n+    Scenario: Preventing a potential XSS attack while editing product\n+        When I want to create a new simple product\n+        Then I should be able to associate as \"Accessories\" the \"LG headphones\" product"
        },
        {
          "filename": "features/taxonomy/managing_taxons/preventing_xss_attack_while_adding_a_new_taxon.feature",
          "status": "added",
          "additions": 16,
          "deletions": 0,
          "patch": "@@ -0,0 +1,16 @@\n+@managing_taxons\n+Feature: Preventing a potential XSS attack while adding new taxon\n+    In order to keep my information safe\n+    As an Administrator\n+    I want to be protected against the potential XSS attacks\n+\n+    Background:\n+        Given the store operates on a single channel in \"United States\"\n+        And the store has \"Category\" taxonomy\n+        And the store has \"<script>alert('xss')</script>\" taxonomy\n+        And I am logged in as an administrator\n+\n+    @ui @javascript @no-api\n+    Scenario: Preventing a potential XSS attack while adding new taxon\n+        When I want to create a new taxon\n+        Then I should be able to change its parent taxon to \"Category\""
        },
        {
          "filename": "src/Sylius/Behat/Context/Ui/Admin/ManagingProductsContext.php",
          "status": "modified",
          "additions": 3,
          "deletions": 0,
          "patch": "@@ -88,6 +88,7 @@ public function iSpecifyItsCodeAs($code = null)\n      * @When I do not name it\n      * @When I name it :name in :language\n      * @When I rename it to :name in :language\n+     * @When I should be able to name it :name in :language\n      */\n     public function iRenameItToIn(?string $name = null, ?string $language = null): void\n     {\n@@ -747,6 +748,7 @@ public function theOptionFieldShouldBeDisabled()\n \n     /**\n      * @When /^I choose main (taxon \"[^\"]+\")$/\n+     * @Then /^I should be able to choose main (taxon \"[^\"]+\")$/\n      */\n     public function iChooseMainTaxon(TaxonInterface $taxon)\n     {\n@@ -820,6 +822,7 @@ public function iAttachImageWithType($path, $type = null)\n     /**\n      * @When I associate as :productAssociationType the :productName product\n      * @When I associate as :productAssociationType the :firstProductName and :secondProductName products\n+     * @Then I should be able to associate as :productAssociationType the :productName product\n      */\n     public function iAssociateProductsAsProductAssociation(\n         ProductAssociationTypeInterface $productAssociationType,"
        },
        {
          "filename": "src/Sylius/Behat/Context/Ui/Admin/ManagingTaxonsContext.php",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -136,6 +136,7 @@ public function iDescribeItAs($description, $language)\n     /**\n      * @Given /^I set its (parent taxon to \"[^\"]+\")$/\n      * @Given /^I change its (parent taxon to \"[^\"]+\")$/\n+     * @Then /^I should be able to change its (parent taxon to \"[^\"]+\")$/\n      */\n     public function iChangeItsParentTaxonTo(TaxonInterface $taxon)\n     {"
        },
        {
          "filename": "src/Sylius/Bundle/AdminBundle/Resources/private/js/sylius-lazy-choice-tree.js",
          "status": "modified",
          "additions": 3,
          "deletions": 2,
          "patch": "@@ -10,6 +10,7 @@\n import 'semantic-ui-css/components/api';\n import 'semantic-ui-css/components/checkbox';\n import $ from 'jquery';\n+import { sanitizeInput } from \"sylius/ui/sylius-sanitizer\";\n \n const createRootContainer = function createRootContainer() {\n   return $('<div class=\"ui list\"></div>');\n@@ -81,7 +82,7 @@ $.fn.extend({\n           onSuccess(response) {\n             response.forEach((leafNode) => {\n               leafContainerElement.append((\n-                createLeafFunc(leafNode.name, leafNode.code, leafNode.hasChildren, multiple, leafNode.level)\n+                createLeafFunc(sanitizeInput(leafNode.name), sanitizeInput(leafNode.code), leafNode.hasChildren, multiple, leafNode.level)\n               ));\n             });\n             content.append(leafContainerElement);\n@@ -169,7 +170,7 @@ $.fn.extend({\n         const rootContainer = createRootContainer();\n         response.forEach((rootNode) => {\n           rootContainer.append((\n-            createLeaf(rootNode.name, rootNode.code, rootNode.hasChildren, multiple, rootNode.level)\n+            createLeaf(sanitizeInput(rootNode.name), sanitizeInput(rootNode.code), rootNode.hasChildren, multiple, rootNode.level)\n           ));\n         });\n         tree.append(rootContainer);"
        },
        {
          "filename": "src/Sylius/Bundle/UiBundle/Resources/private/js/sylius-auto-complete.js",
          "status": "modified",
          "additions": 4,
          "deletions": 3,
          "patch": "@@ -9,6 +9,7 @@\n \n import 'semantic-ui-css/components/dropdown';\n import $ from 'jquery';\n+import { sanitizeInput } from \"./sylius-sanitizer\";\n \n $.fn.extend({\n   autoComplete() {\n@@ -37,8 +38,8 @@ $.fn.extend({\n           },\n           onResponse(response) {\n             let results = response.map(item => ({\n-              name: item[choiceName],\n-              value: item[choiceValue],\n+              name: sanitizeInput(item[choiceName]),\n+              value: sanitizeInput(item[choiceValue]),\n             }));\n \n             if (!element.hasClass('multiple')) {\n@@ -72,7 +73,7 @@ $.fn.extend({\n           onSuccess(response) {\n             response.forEach((item) => {\n               menuElement.append((\n-                $(`<div class=\"item\" data-value=\"${item[choiceValue]}\">${item[choiceName]}</div>`)\n+                $(`<div class=\"item\" data-value=\"${item[choiceValue]}\">${sanitizeInput(item[choiceName])}</div>`)\n               ));\n             });\n "
        },
        {
          "filename": "src/Sylius/Bundle/UiBundle/Resources/private/js/sylius-product-auto-complete.js",
          "status": "modified",
          "additions": 3,
          "deletions": 2,
          "patch": "@@ -9,6 +9,7 @@\n \n import 'semantic-ui-css/components/dropdown';\n import $ from 'jquery';\n+import { sanitizeInput } from \"./sylius-sanitizer\";\n \n $.fn.extend({\n   productAutoComplete() {\n@@ -38,8 +39,8 @@ $.fn.extend({\n           return {\n             success: true,\n             results: response._embedded.items.map(item => ({\n-              name: item.name,\n-              value: item.code,\n+              name: sanitizeInput(item.name),\n+              value: sanitizeInput(item.code),\n             })),\n           };\n         },"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 5,
        "max_directory_depth": 7
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "7e6da242b78ccc83264c7441aee20e915f8eebf2",
            "date": "2025-01-13T12:54:41Z",
            "author_login": "GSadee"
          },
          {
            "sha": "d6d6147cc676243d36cf8c17751a774e4c27cedc",
            "date": "2025-01-13T12:54:26Z",
            "author_login": "GSadee"
          },
          {
            "sha": "056e6e9e5ba3d328a0425ad003cfe7d9210c961b",
            "date": "2025-01-13T12:49:52Z",
            "author_login": "GSadee"
          },
          {
            "sha": "cbc97f9516dc2af4668cb955a6ccf73ff411bddf",
            "date": "2025-01-13T12:49:04Z",
            "author_login": "GSadee"
          },
          {
            "sha": "e1ccb8df1c151aa61248523c39836eeb65c34161",
            "date": "2025-01-13T12:46:39Z",
            "author_login": "GSadee"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 4.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:H/UI:R/S:C/C:L/I:L/A:N",
    "cwe_id": "CWE-79",
    "description": "Sylius is an open source eCommerce platform. Prior to 1.12.16 and 1.13.1, there is a possibility to execute javascript code in the Admin panel. In order to perform an XSS attack input a script into Name field in which of the resources: Taxons, Products, Product Options or Product Variants. The code will be executed while using an autocomplete field with one of the listed entities in the Admin Panel. Also for the taxons in the category tree on the product form.The issue is fixed in versions: 1.12.16, 1.13.1.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-05-14T15:38:41.397",
    "last_modified": "2024-11-21T09:18:28.893",
    "fix_date": "2024-05-10T07:32:50Z"
  },
  "references": [
    {
      "url": "https://github.com/Sylius/Sylius/commit/ba4b66da5af88cdb1bba6174de8bdf42f4853e12",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/Sylius/Sylius/security/advisories/GHSA-v2f9-rv6w-vw8r",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/Sylius/Sylius/commit/ba4b66da5af88cdb1bba6174de8bdf42f4853e12",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/Sylius/Sylius/security/advisories/GHSA-v2f9-rv6w-vw8r",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:20.895598",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "Sylius",
    "owner": "Sylius",
    "created_at": "2011-11-05T22:05:52Z",
    "updated_at": "2025-01-13T12:55:02Z",
    "pushed_at": "2025-01-14T12:45:05Z",
    "size": 295706,
    "stars": 8060,
    "forks": 2108,
    "open_issues": 230,
    "watchers": 8060,
    "has_security_policy": false,
    "default_branch": "2.0",
    "protected_branches": [
      "1.0",
      "1.1",
      "1.2",
      "1.3",
      "1.4",
      "1.5",
      "1.6",
      "1.7",
      "1.8",
      "1.9",
      "1.10",
      "1.11",
      "1.12",
      "1.13",
      "1.14",
      "2.0",
      "sylius-stack"
    ],
    "languages": {
      "PHP": 10594782,
      "Gherkin": 1522366,
      "Twig": 572243,
      "SCSS": 40870,
      "JavaScript": 36374,
      "Dockerfile": 4882,
      "Shell": 1935,
      "Makefile": 1440
    },
    "commit_activity": {
      "total_commits_last_year": 6049,
      "avg_commits_per_week": 116.32692307692308,
      "days_active_last_year": 294
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T15:20:08.770477"
  }
}