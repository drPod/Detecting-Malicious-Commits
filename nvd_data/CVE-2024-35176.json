{
  "cve_id": "CVE-2024-35176",
  "github_data": {
    "repository": "ruby/rexml",
    "fix_commit": "4325835f92f3f142ebd91a3fdba4e1f1ab7f1cfb",
    "related_commits": [
      "4325835f92f3f142ebd91a3fdba4e1f1ab7f1cfb",
      "4325835f92f3f142ebd91a3fdba4e1f1ab7f1cfb"
    ],
    "patch_url": "https://github.com/ruby/rexml/commit/4325835f92f3f142ebd91a3fdba4e1f1ab7f1cfb.patch",
    "fix_commit_details": {
      "sha": "4325835f92f3f142ebd91a3fdba4e1f1ab7f1cfb",
      "commit_date": "2024-05-16T02:26:51Z",
      "author": {
        "login": "nobu",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Read quoted attributes in chunks (#126)",
        "length": 39,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 61,
        "additions": 46,
        "deletions": 15
      },
      "files": [
        {
          "filename": "Gemfile",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -10,4 +10,5 @@ group :development do\n   gem \"bundler\"\n   gem \"rake\"\n   gem \"test-unit\"\n+  gem \"test-unit-ruby-core\"\n end"
        },
        {
          "filename": "lib/rexml/parsers/baseparser.rb",
          "status": "modified",
          "additions": 10,
          "deletions": 10,
          "patch": "@@ -628,17 +628,17 @@ def parse_attributes(prefixes, curr_ns)\n               message = \"Missing attribute equal: <#{name}>\"\n               raise REXML::ParseException.new(message, @source)\n             end\n-            unless match = @source.match(/(['\"])(.*?)\\1\\s*/um, true)\n-              if match = @source.match(/(['\"])/, true)\n-                message =\n-                  \"Missing attribute value end quote: <#{name}>: <#{match[1]}>\"\n-                raise REXML::ParseException.new(message, @source)\n-              else\n-                message = \"Missing attribute value start quote: <#{name}>\"\n-                raise REXML::ParseException.new(message, @source)\n-              end\n+            unless match = @source.match(/(['\"])/, true)\n+              message = \"Missing attribute value start quote: <#{name}>\"\n+              raise REXML::ParseException.new(message, @source)\n+            end\n+            quote = match[1]\n+            value = @source.read_until(quote)\n+            unless value.chomp!(quote)\n+              message = \"Missing attribute value end quote: <#{name}>: <#{quote}>\"\n+              raise REXML::ParseException.new(message, @source)\n             end\n-            value = match[2]\n+            @source.match(/\\s*/um, true)\n             if prefix == \"xmlns\"\n               if local_part == \"xml\"\n                 if value != \"http://www.w3.org/XML/1998/namespace\""
        },
        {
          "filename": "lib/rexml/source.rb",
          "status": "modified",
          "additions": 24,
          "deletions": 5,
          "patch": "@@ -65,7 +65,11 @@ def encoding=(enc)\n       encoding_updated\n     end\n \n-    def read\n+    def read(term = nil)\n+    end\n+\n+    def read_until(term)\n+      @scanner.scan_until(Regexp.union(term)) or @scanner.rest\n     end\n \n     def ensure_buffer\n@@ -158,16 +162,31 @@ def initialize(arg, block_size=500, encoding=nil)\n       end\n     end\n \n-    def read\n+    def read(term = nil)\n       begin\n-        @scanner << readline\n+        @scanner << readline(term)\n         true\n       rescue Exception, NameError\n         @source = nil\n         false\n       end\n     end\n \n+    def read_until(term)\n+      pattern = Regexp.union(term)\n+      data = []\n+      begin\n+        until str = @scanner.scan_until(pattern)\n+          @scanner << readline(term)\n+        end\n+      rescue EOFError\n+        @scanner.rest\n+      else\n+        read if @scanner.eos? and !@source.eof?\n+        str\n+      end\n+    end\n+\n     def ensure_buffer\n       read if @scanner.eos? && @source\n     end\n@@ -218,8 +237,8 @@ def current_line\n     end\n \n     private\n-    def readline\n-      str = @source.readline(@line_break)\n+    def readline(term = nil)\n+      str = @source.readline(term || @line_break)\n       if @pending_buffer\n         if str.nil?\n           str = @pending_buffer"
        },
        {
          "filename": "test/test_document.rb",
          "status": "modified",
          "additions": 11,
          "deletions": 0,
          "patch": "@@ -1,8 +1,12 @@\n # -*- coding: utf-8 -*-\n # frozen_string_literal: false\n \n+require 'core_assertions'\n+\n module REXMLTests\n   class TestDocument < Test::Unit::TestCase\n+    include Test::Unit::CoreAssertions\n+\n     def test_version_attributes_to_s\n       doc = REXML::Document.new(<<~eoxml)\n         <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n@@ -198,6 +202,13 @@ def test_xml_declaration_standalone\n       assert_equal('no', doc.stand_alone?, bug2539)\n     end\n \n+    def test_gt_linear_performance\n+      seq = [10000, 50000, 100000, 150000, 200000]\n+      assert_linear_performance(seq) do |n|\n+        REXML::Document.new('<test testing=\"' + \">\" * n + '\"></test>')\n+      end\n+    end\n+\n     class WriteTest < Test::Unit::TestCase\n       def setup\n         @document = REXML::Document.new(<<-EOX)"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 1,
        "test_files": 1,
        "unique_directories": 4,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "b70388c2638d90ebd2ae471bd85239d8469b8e62",
            "date": "2024-12-20T22:59:47Z",
            "author_login": "naitoh"
          },
          {
            "sha": "bb0bedd25dbb69b247b0894a6c357f8903a2b9a2",
            "date": "2024-12-19T02:18:52Z",
            "author_login": "naitoh"
          },
          {
            "sha": "a1d875b23340df6b33d3bbe6b17cca807eb0e3d2",
            "date": "2024-12-15T02:19:55Z",
            "author_login": "kou"
          },
          {
            "sha": "19d8ebfbcfb3816fdad050baa74da40d6f04ffac",
            "date": "2024-12-15T02:18:54Z",
            "author_login": "kou"
          },
          {
            "sha": "dfc775343b3b4aec4c046b9df17bbe571612a861",
            "date": "2024-12-15T02:14:48Z",
            "author_login": "kou"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
    "cwe_id": "CWE-400",
    "description": " REXML is an XML toolkit for Ruby. The REXML gem before 3.2.6 has a denial of service vulnerability when it parses an XML that has many `<`s in an attribute value. Those who need to parse untrusted XMLs may be impacted to this vulnerability. The REXML gem 3.2.7 or later include the patch to fix this vulnerability. As a workaround, don't parse untrusted XMLs.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-05-16T16:15:09.707",
    "last_modified": "2024-11-21T09:19:52.363",
    "fix_date": "2024-05-16T02:26:51Z"
  },
  "references": [
    {
      "url": "https://github.com/ruby/rexml/commit/4325835f92f3f142ebd91a3fdba4e1f1ab7f1cfb",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/ruby/rexml/security/advisories/GHSA-vg3r-rm7w-2xgh",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://www.ruby-lang.org/en/news/2024/05/16/dos-rexml-cve-2024-35176",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/ruby/rexml/commit/4325835f92f3f142ebd91a3fdba4e1f1ab7f1cfb",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/ruby/rexml/security/advisories/GHSA-vg3r-rm7w-2xgh",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://www.ruby-lang.org/en/news/2024/05/16/dos-rexml-cve-2024-35176",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:24.247577",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "rexml",
    "owner": "ruby",
    "created_at": "2018-05-31T03:11:12Z",
    "updated_at": "2024-12-20T22:59:51Z",
    "pushed_at": "2024-12-20T23:00:03Z",
    "size": 3978,
    "stars": 141,
    "forks": 70,
    "open_issues": 17,
    "watchers": 141,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Ruby": 677583,
      "XSLT": 13913,
      "Scilab": 745
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "bsd-2-clause"
    },
    "collected_at": "2025-01-14T16:29:57.965078"
  }
}