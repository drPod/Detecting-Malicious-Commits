{
  "cve_id": "CVE-2024-35184",
  "github_data": {
    "repository": "paperless-ngx/paperless-ngx",
    "fix_commit": "ed05b40ba461641b1b59b0a92f51f3f6a66ce180",
    "related_commits": [
      "ed05b40ba461641b1b59b0a92f51f3f6a66ce180",
      "ed05b40ba461641b1b59b0a92f51f3f6a66ce180"
    ],
    "patch_url": "https://github.com/paperless-ngx/paperless-ngx/commit/ed05b40ba461641b1b59b0a92f51f3f6a66ce180.patch",
    "fix_commit_details": {
      "sha": "ed05b40ba461641b1b59b0a92f51f3f6a66ce180",
      "commit_date": "2024-05-15T20:18:50Z",
      "author": {
        "login": "shamoon",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Security: disallow API remote-user auth if disabled (#6739)",
        "length": 59,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 44,
        "additions": 44,
        "deletions": 0
      },
      "files": [
        {
          "filename": "src/paperless/auth.py",
          "status": "modified",
          "additions": 11,
          "deletions": 0,
          "patch": "@@ -52,6 +52,17 @@ class HttpRemoteUserMiddleware(PersistentRemoteUserMiddleware):\n \n     header = settings.HTTP_REMOTE_USER_HEADER_NAME\n \n+    def process_request(self, request: HttpRequest) -> None:\n+        # If remote user auth is enabled only for the frontend, not the API,\n+        # then we need dont want to authenticate the user for API requests.\n+        if (\n+            \"/api/\" in request.path\n+            and \"paperless.auth.PaperlessRemoteUserAuthentication\"\n+            not in settings.REST_FRAMEWORK[\"DEFAULT_AUTHENTICATION_CLASSES\"]\n+        ):\n+            return\n+        return super().process_request(request)\n+\n \n class PaperlessRemoteUserAuthentication(authentication.RemoteUserAuthentication):\n     \"\"\""
        },
        {
          "filename": "src/paperless/tests/test_remote_user.py",
          "status": "modified",
          "additions": 33,
          "deletions": 0,
          "patch": "@@ -2,6 +2,7 @@\n from unittest import mock\n \n from django.contrib.auth.models import User\n+from django.test import override_settings\n from rest_framework import status\n from rest_framework.test import APITestCase\n \n@@ -88,6 +89,38 @@ def test_remote_user_api(self):\n \n             self.assertEqual(response.status_code, status.HTTP_200_OK)\n \n+    @override_settings(\n+        REST_FRAMEWORK={\n+            \"DEFAULT_AUTHENTICATION_CLASSES\": [\n+                \"rest_framework.authentication.BasicAuthentication\",\n+                \"rest_framework.authentication.TokenAuthentication\",\n+                \"rest_framework.authentication.SessionAuthentication\",\n+            ],\n+        },\n+    )\n+    def test_remote_user_api_disabled(self):\n+        \"\"\"\n+        GIVEN:\n+            - Configured user\n+            - Remote user auth enabled for frontend but disabled for the API\n+            - Note that REST_FRAMEWORK['DEFAULT_AUTHENTICATION_CLASSES'] is set in settings.py in production\n+        WHEN:\n+            - API call is made to get documents\n+        THEN:\n+            - Call fails\n+        \"\"\"\n+        response = self.client.get(\n+            \"/api/documents/\",\n+            headers={\n+                \"Remote-User\": self.user.username,\n+            },\n+        )\n+\n+        self.assertIn(\n+            response.status_code,\n+            [status.HTTP_401_UNAUTHORIZED, status.HTTP_403_FORBIDDEN],\n+        )\n+\n     def test_remote_user_header_setting(self):\n         \"\"\"\n         GIVEN:"
        }
      ],
      "file_patterns": {
        "security_files": 1,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "ab87aedfc75cb5072e31ce43253224d727e97771",
            "date": "2025-01-14T13:44:40Z",
            "author_login": "shamoon"
          },
          {
            "sha": "18e3ad8b220f7893b65cd9781e266c9529f9fa7f",
            "date": "2025-01-14T13:35:45Z",
            "author_login": "shamoon"
          },
          {
            "sha": "c342eafa8d13ad6471989101add3f629e9c82b24",
            "date": "2025-01-14T02:05:47Z",
            "author_login": "shamoon"
          },
          {
            "sha": "290c44f5d529f8ab7f3e16af34c23aba4e5e2c93",
            "date": "2025-01-14T02:04:22Z",
            "author_login": "github-actions[bot]"
          },
          {
            "sha": "02015ec40412099b0d02c9a0b2eedb9bc781a16d",
            "date": "2025-01-14T01:16:52Z",
            "author_login": "shamoon"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:U/C:L/I:L/A:L",
    "cwe_id": "CWE-287",
    "description": "Paperless-ngx is a document management system that transforms physical documents into a searchable online archive. Starting in version 2.5.0 and prior to version 2.8.6, remote user authentication allows API access even if API access is explicitly disabled. Version 2.8.6 contains a patchc for the issue.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-05-15T22:15:08.867",
    "last_modified": "2024-11-21T09:19:53.333",
    "fix_date": "2024-05-15T20:18:50Z"
  },
  "references": [
    {
      "url": "https://github.com/paperless-ngx/paperless-ngx/commit/ed05b40ba461641b1b59b0a92f51f3f6a66ce180",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/paperless-ngx/paperless-ngx/pull/6739",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/paperless-ngx/paperless-ngx/releases/tag/v2.8.6",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/paperless-ngx/paperless-ngx/security/advisories/GHSA-72w4-hxqq-c256",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/paperless-ngx/paperless-ngx/commit/ed05b40ba461641b1b59b0a92f51f3f6a66ce180",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/paperless-ngx/paperless-ngx/pull/6739",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/paperless-ngx/paperless-ngx/releases/tag/v2.8.6",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/paperless-ngx/paperless-ngx/security/advisories/GHSA-72w4-hxqq-c256",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:24.238862",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "paperless-ngx",
    "owner": "paperless-ngx",
    "created_at": "2022-02-12T21:56:52Z",
    "updated_at": "2025-01-14T17:17:41Z",
    "pushed_at": "2025-01-14T15:41:35Z",
    "size": 203310,
    "stars": 23813,
    "forks": 1363,
    "open_issues": 10,
    "watchers": 23813,
    "has_security_policy": false,
    "default_branch": "dev",
    "protected_branches": [
      "archive/v1",
      "beta",
      "dev",
      "main",
      "sunset-rtd"
    ],
    "languages": {
      "Python": 2312279,
      "TypeScript": 1551468,
      "HTML": 407354,
      "SCSS": 53968,
      "Shell": 23817,
      "Dockerfile": 17527,
      "CSS": 12988,
      "JavaScript": 923
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-3.0"
    },
    "collected_at": "2025-01-14T17:20:16.764653"
  }
}