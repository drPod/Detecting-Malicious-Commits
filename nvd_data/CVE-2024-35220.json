{
  "cve_id": "CVE-2024-35220",
  "github_data": {
    "repository": "fastify/session",
    "fix_commit": "0495ce5b534c4550f25228821db8098293439f2f",
    "related_commits": [
      "0495ce5b534c4550f25228821db8098293439f2f",
      "0495ce5b534c4550f25228821db8098293439f2f"
    ],
    "patch_url": "https://github.com/fastify/session/commit/0495ce5b534c4550f25228821db8098293439f2f.patch",
    "fix_commit_details": {
      "sha": "0495ce5b534c4550f25228821db8098293439f2f",
      "commit_date": "2024-05-21T16:24:15Z",
      "author": {
        "login": "ShogunPanda",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Merge pull request from GHSA-pj27-2xvp-4qxg",
        "length": 148,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 72,
        "additions": 71,
        "deletions": 1
      },
      "files": [
        {
          "filename": "lib/cookie.js",
          "status": "modified",
          "additions": 5,
          "deletions": 0,
          "patch": "@@ -11,6 +11,10 @@ module.exports = class Cookie {\n     this.partitioned = cookie.partitioned\n     this._expires = null\n \n+    if(cookie.expires) {\n+      this.originalExpires = new Date(cookie.expires)\n+    }\n+        \n     if (originalMaxAge) {\n       this.maxAge = originalMaxAge\n     } else if (cookie.expires) {\n@@ -56,6 +60,7 @@ module.exports = class Cookie {\n     return {\n       expires: this._expires,\n       originalMaxAge: this.originalMaxAge,\n+      originalExpires: this.originalExpires,\n       sameSite: this.sameSite,\n       secure: this.secure,\n       path: this.path,"
        },
        {
          "filename": "lib/fastifySession.js",
          "status": "modified",
          "additions": 3,
          "deletions": 1,
          "patch": "@@ -92,7 +92,9 @@ function fastifySession (fastify, options, next) {\n         decryptedSessionId\n       )\n \n-      if (restoredSession.cookie.expires && restoredSession.cookie.expires.getTime() <= Date.now()) {\n+      const expiration = restoredSession.cookie.originalExpires || restoredSession.cookie.expires\n+\n+      if (expiration && expiration.getTime() <= Date.now()) {\n         restoredSession.destroy(err => {\n           if (err) {\n             done(err)"
        },
        {
          "filename": "test/expiration.test.js",
          "status": "added",
          "additions": 63,
          "deletions": 0,
          "patch": "@@ -0,0 +1,63 @@\n+\"use strict\";\n+\n+const test = require(\"tap\").test;\n+const { buildFastify, DEFAULT_SECRET } = require(\"./util\");\n+const { setTimeout } = require(\"node:timers/promises\");\n+\n+test(\"sessions should be deleted if expired\", async (t) => {\n+  t.plan(5);\n+\n+  const sessions = {};\n+  const options = {\n+    secret: DEFAULT_SECRET,\n+    store: {\n+      get(id, cb) {\n+        t.pass(\"session was restored\");\n+        cb(null, sessions[id]);\n+      },\n+      set(id, session, cb) {\n+        sessions[id] = session;\n+        cb();\n+      },\n+      destroy(id, cb) {\n+        t.pass(\"expired session is destroyed\");\n+        cb();\n+      },\n+    },\n+    cookie: { maxAge: 1000, secure: false },\n+  };\n+\n+  const fastify = await buildFastify((request, reply) => {\n+    reply.send(200);\n+  }, options);\n+  t.teardown(() => {\n+    fastify.close();\n+  });\n+\n+  let response;\n+  response = await fastify.inject({\n+    url: \"/\",\n+  });\n+\n+  const initialSession = response.headers[\"set-cookie\"]\n+    .split(\" \")[0]\n+    .replace(\";\", \"\");\n+  t.ok(initialSession.startsWith(\"sessionId=\"));\n+\n+  // Wait for the cookie to expire\n+  await setTimeout(2000);\n+\n+  response = await fastify.inject({\n+    url: \"/\",\n+    headers: {\n+      Cookie: initialSession,\n+    },\n+  });\n+\n+  const endingSession = response.headers[\"set-cookie\"]\n+    .split(\" \")[0]\n+    .replace(\";\", \"\");\n+  t.ok(endingSession.startsWith(\"sessionId=\"));\n+\n+  t.not(initialSession, endingSession);\n+});"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "ae4adeff1d3df84a7ea9768460a5a5548faafbdb",
            "date": "2025-01-11T09:22:33Z",
            "author_login": "Fdawgs"
          },
          {
            "sha": "4fbbd33419b74d07951d33b109e874c8931f8740",
            "date": "2025-01-09T16:21:56Z",
            "author_login": "mcollina"
          },
          {
            "sha": "07f1611ec2cbd2fe8552c22605e39980e9cf3a09",
            "date": "2025-01-09T16:00:48Z",
            "author_login": "chrisdickinson"
          },
          {
            "sha": "d0d3bd50884741426e2b472ca1e81cffc057cc8b",
            "date": "2025-01-07T17:55:58Z",
            "author_login": "Fdawgs"
          },
          {
            "sha": "606c3d19724f42421f9b9c7202c1058c66e45427",
            "date": "2025-01-07T17:55:31Z",
            "author_login": "Fdawgs"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.4,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:H/I:N/A:N",
    "cwe_id": "CWE-613",
    "description": "@fastify/session is a session plugin for fastify. Requires the @fastify/cookie plugin. When restoring the cookie from the session store, the `expires` field is overriden if the `maxAge` field was set.\nThis means a cookie is never correctly detected as expired and thus expired sessions are not destroyed. This vulnerability has been patched 10.8.0.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-05-21T21:15:08.117",
    "last_modified": "2024-11-21T09:19:57.883",
    "fix_date": "2024-05-21T16:24:15Z"
  },
  "references": [
    {
      "url": "https://github.com/fastify/session/commit/0495ce5b534c4550f25228821db8098293439f2f",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/fastify/session/issues/251",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/fastify/session/security/advisories/GHSA-pj27-2xvp-4qxg",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/fastify/session/commit/0495ce5b534c4550f25228821db8098293439f2f",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/fastify/session/issues/251",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/fastify/session/security/advisories/GHSA-pj27-2xvp-4qxg",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:24.273285",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "session",
    "owner": "fastify",
    "created_at": "2021-07-29T09:29:49Z",
    "updated_at": "2025-01-11T09:22:37Z",
    "pushed_at": "2025-01-11T09:22:36Z",
    "size": 471,
    "stars": 110,
    "forks": 50,
    "open_issues": 11,
    "watchers": 110,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "JavaScript": 115065,
      "TypeScript": 5386
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T15:57:59.568680"
  }
}