{
  "cve_id": "CVE-2024-35225",
  "github_data": {
    "repository": "jupyterhub/jupyter-server-proxy",
    "fix_commit": "7abc9dc5bbb0b4b440548a5375261b8b8192fc22",
    "related_commits": [
      "7abc9dc5bbb0b4b440548a5375261b8b8192fc22",
      "ff78128087e73fb9d0909e1366f8bf051e8ea878",
      "7abc9dc5bbb0b4b440548a5375261b8b8192fc22",
      "ff78128087e73fb9d0909e1366f8bf051e8ea878"
    ],
    "patch_url": "https://github.com/jupyterhub/jupyter-server-proxy/commit/7abc9dc5bbb0b4b440548a5375261b8b8192fc22.patch",
    "fix_commit_details": {
      "sha": "7abc9dc5bbb0b4b440548a5375261b8b8192fc22",
      "commit_date": "2024-06-11T15:32:35Z",
      "author": {
        "login": "manics",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Merge pull request from GHSA-fvcq-4x64-hqxr",
        "length": 87,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 34,
        "additions": 21,
        "deletions": 13
      },
      "files": [
        {
          "filename": "docs/source/changelog.md",
          "status": "modified",
          "additions": 4,
          "deletions": 1,
          "patch": "@@ -2,7 +2,10 @@\n \n ## 4.2\n \n-### v4.2.0 - 2024-06-DD\n+### v4.2.0 - 2024-06-11\n+\n+This release includes an important security patch for\n+[CVE-2024-35225 ](https://github.com/jupyterhub/jupyter-server-proxy/security/advisories/GHSA-fvcq-4x64-hqxr).\n \n ([full changelog](https://github.com/jupyterhub/jupyter-server-proxy/compare/v4.1.2...v4.2.0))\n "
        },
        {
          "filename": "jupyter_server_proxy/handlers.py",
          "status": "modified",
          "additions": 6,
          "deletions": 12,
          "patch": "@@ -323,14 +323,11 @@ async def proxy(self, host, port, proxied_path):\n         \"\"\"\n \n         if not self._check_host_allowlist(host):\n-            self.set_status(403)\n-            self.write(\n-                \"Host '{host}' is not allowed. \"\n-                \"See https://jupyter-server-proxy.readthedocs.io/en/latest/arbitrary-ports-hosts.html for info.\".format(\n-                    host=host\n-                )\n+            raise web.HTTPError(\n+                403,\n+                f\"Host '{host}' is not allowed. \"\n+                \"See https://jupyter-server-proxy.readthedocs.io/en/latest/arbitrary-ports-hosts.html for info.\",\n             )\n-            return\n \n         # Remove hop-by-hop headers that don't necessarily apply to the request we are making\n         # to the backend. See https://github.com/jupyterhub/jupyter-server-proxy/pull/328\n@@ -391,9 +388,7 @@ async def proxy(self, host, port, proxied_path):\n             # Ref: https://www.tornadoweb.org/en/stable/httpclient.html#tornado.httpclient.AsyncHTTPClient.fetch\n             if err.code == 599:\n                 self._record_activity()\n-                self.set_status(599)\n-                self.write(str(err))\n-                return\n+                raise web.HTTPError(599, str(err))\n             else:\n                 raise\n \n@@ -402,8 +397,7 @@ async def proxy(self, host, port, proxied_path):\n \n         # For all non http errors...\n         if response.error and type(response.error) is not httpclient.HTTPError:\n-            self.set_status(500)\n-            self.write(str(response.error))\n+            raise web.HTTPError(500, str(response.error))\n         else:\n             # Represent the original response as a RewritableResponse object.\n             original_response = RewritableResponse(orig_response=response)"
        },
        {
          "filename": "tests/test_proxies.py",
          "status": "modified",
          "additions": 11,
          "deletions": 0,
          "patch": "@@ -255,6 +255,17 @@ def test_server_proxy_host_absolute(a_server_port_and_token: Tuple[int, str]) ->\n     assert \"X-Proxycontextpath\" not in s\n \n \n+@pytest.mark.parametrize(\"absolute\", [\"\", \"/absolute\"])\n+def test_server_proxy_host_invalid(\n+    a_server_port_and_token: Tuple[int, str], absolute: str\n+) -> None:\n+    PORT, TOKEN = a_server_port_and_token\n+    r = request_get(PORT, f\"/proxy{absolute}/<invalid>:54321/\", TOKEN)\n+    assert r.code == 403\n+    s = r.read().decode(\"ascii\")\n+    assert \"Host &#39;&lt;invalid&gt;&#39; is not allowed.\" in s\n+\n+\n def test_server_proxy_port_non_service_rewrite_response(\n     a_server_port_and_token: Tuple[int, str]\n ) -> None:"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 3,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "76a98c900605e31a9209e0897d3010d2c6057960",
            "date": "2024-12-04T18:47:43Z",
            "author_login": "ryanlovett"
          },
          {
            "sha": "c985e332b7d97b32e02295018f23b701547e2ebc",
            "date": "2024-11-06T08:31:58Z",
            "author_login": "minrk"
          },
          {
            "sha": "060624421e17bb74355ac7d29661f0ea90b69eb9",
            "date": "2024-11-04T23:16:10Z",
            "author_login": "pre-commit-ci[bot]"
          },
          {
            "sha": "7a491b657204a3e648e5acca96f981500fa03114",
            "date": "2024-11-04T23:15:38Z",
            "author_login": "pre-commit-ci[bot]"
          },
          {
            "sha": "fef3695e682c0b7604e00c87d290ea2a30ceaa53",
            "date": "2024-10-27T17:24:30Z",
            "author_login": "manics"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.6,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H",
    "cwe_id": "CWE-79",
    "description": "Jupyter Server Proxy allows users to run arbitrary external processes alongside their notebook server and provide authenticated web access to them. Versions of 3.x prior to 3.2.4 and 4.x prior to 4.2.0 have a reflected cross-site scripting (XSS) issue. The `/proxy` endpoint accepts a `host` path segment in the format `/proxy/<host>`. When this endpoint is called with an invalid `host` value, `jupyter-server-proxy` replies with a response that includes the value of `host`, without sanitization [2]. A third-party actor can leverage this by sending a phishing link with an invalid `host` value containing custom JavaScript to a user. When the user clicks this phishing link, the browser renders the response of `GET /proxy/<host>`, which runs the custom JavaScript contained in `host` set by the actor. As any arbitrary JavaScript can be run after the user clicks on a phishing link, this issue permits extensive access to the user's JupyterLab instance for an actor. Patches are included in versions 4.2.0 and 3.2.4. As a workaround, server operators who are unable to upgrade can disable the `jupyter-server-proxy` extension.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-06-11T22:15:09.520",
    "last_modified": "2024-11-21T09:19:58.493",
    "fix_date": "2024-06-11T15:32:35Z"
  },
  "references": [
    {
      "url": "https://github.com/jupyterhub/jupyter-server-proxy/blob/62a290f08750f7ae55a0c29ca339c9a39a7b2a7b/jupyter_server_proxy/handlers.py#L328",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/jupyterhub/jupyter-server-proxy/commit/7abc9dc5bbb0b4b440548a5375261b8b8192fc22",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/jupyterhub/jupyter-server-proxy/commit/ff78128087e73fb9d0909e1366f8bf051e8ea878",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/jupyterhub/jupyter-server-proxy/security/advisories/GHSA-fvcq-4x64-hqxr",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/jupyterhub/jupyter-server-proxy/blob/62a290f08750f7ae55a0c29ca339c9a39a7b2a7b/jupyter_server_proxy/handlers.py#L328",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/jupyterhub/jupyter-server-proxy/commit/7abc9dc5bbb0b4b440548a5375261b8b8192fc22",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/jupyterhub/jupyter-server-proxy/commit/ff78128087e73fb9d0909e1366f8bf051e8ea878",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/jupyterhub/jupyter-server-proxy/security/advisories/GHSA-fvcq-4x64-hqxr",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:26.365335",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "jupyter-server-proxy",
    "owner": "jupyterhub",
    "created_at": "2016-10-18T22:02:06Z",
    "updated_at": "2025-01-10T22:21:01Z",
    "pushed_at": "2025-01-07T01:50:45Z",
    "size": 1487,
    "stars": 354,
    "forks": 147,
    "open_issues": 84,
    "watchers": 354,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main"
    ],
    "languages": {
      "Python": 109087,
      "TypeScript": 12359,
      "RobotFramework": 4992,
      "JavaScript": 1609,
      "HTML": 109
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "bsd-3-clause"
    },
    "collected_at": "2025-01-14T17:44:14.285481"
  }
}