{
  "cve_id": "CVE-2024-3568",
  "github_data": {
    "repository": "huggingface/transformers",
    "fix_commit": "693667b8ac8138b83f8adb6522ddaf42fa07c125",
    "related_commits": [
      "693667b8ac8138b83f8adb6522ddaf42fa07c125",
      "693667b8ac8138b83f8adb6522ddaf42fa07c125"
    ],
    "patch_url": "https://github.com/huggingface/transformers/commit/693667b8ac8138b83f8adb6522ddaf42fa07c125.patch",
    "fix_commit_details": {
      "sha": "693667b8ac8138b83f8adb6522ddaf42fa07c125",
      "commit_date": "2024-02-08T14:17:33Z",
      "author": {
        "login": "Rocketknight1",
        "type": "User",
        "stats": {
          "total_commits": 401,
          "average_weekly_commits": 1.2338461538461538,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 150
        }
      },
      "commit_message": {
        "title": "Remove dead TF loading code (#28926)",
        "length": 54,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 50,
        "additions": 0,
        "deletions": 50
      },
      "files": [
        {
          "filename": "src/transformers/modeling_tf_utils.py",
          "status": "modified",
          "additions": 0,
          "deletions": 50,
          "patch": "@@ -32,7 +32,6 @@\n import h5py\n import numpy as np\n import tensorflow as tf\n-from huggingface_hub import Repository, list_repo_files\n from packaging.version import parse\n \n from . import DataCollatorWithPadding, DefaultDataCollator\n@@ -1356,55 +1355,6 @@ def _save_checkpoint(self, checkpoint_dir, epoch):\n         with open(extra_data_path, \"wb\") as f:\n             pickle.dump(extra_data, f)\n \n-    def load_repo_checkpoint(self, repo_path_or_name):\n-        \"\"\"\n-        Loads a saved checkpoint (model weights and optimizer state) from a repo. Returns the current epoch count when\n-        the checkpoint was made.\n-\n-        Args:\n-            repo_path_or_name (`str`):\n-                Can either be a repository name for your {object} in the Hub or a path to a local folder (in which case\n-                the repository will have the name of that local folder).\n-\n-        Returns:\n-            `dict`: A dictionary of extra metadata from the checkpoint, most commonly an \"epoch\" count.\n-        \"\"\"\n-        if getattr(self, \"optimizer\", None) is None:\n-            raise RuntimeError(\n-                \"Checkpoint loading failed as no optimizer is attached to the model. \"\n-                \"This is most likely caused by the model not being compiled.\"\n-            )\n-        if os.path.isdir(repo_path_or_name):\n-            local_dir = repo_path_or_name\n-        else:\n-            # If this isn't a local path, check that the remote repo exists and has a checkpoint in it\n-            repo_files = list_repo_files(repo_path_or_name)\n-            for file in (\"checkpoint/weights.h5\", \"checkpoint/extra_data.pickle\"):\n-                if file not in repo_files:\n-                    raise FileNotFoundError(f\"Repo {repo_path_or_name} does not contain checkpoint file {file}!\")\n-            repo = Repository(repo_path_or_name.split(\"/\")[-1], clone_from=repo_path_or_name)\n-            local_dir = repo.local_dir\n-\n-        # Now make sure the repo actually has a checkpoint in it.\n-        checkpoint_dir = os.path.join(local_dir, \"checkpoint\")\n-        weights_file = os.path.join(checkpoint_dir, \"weights.h5\")\n-        if not os.path.isfile(weights_file):\n-            raise FileNotFoundError(f\"Could not find checkpoint file weights.h5 in repo {repo_path_or_name}!\")\n-        extra_data_file = os.path.join(checkpoint_dir, \"extra_data.pickle\")\n-        if not os.path.isfile(extra_data_file):\n-            raise FileNotFoundError(f\"Could not find checkpoint file extra_data.pickle in repo {repo_path_or_name}!\")\n-\n-        # Assuming the repo is real and we got a checkpoint, load the weights and the optimizer state into the model.\n-        # The optimizer state includes the iteration count, so learning rate schedules should resume as normal too.\n-        self.load_weights(weights_file)\n-        with open(extra_data_file, \"rb\") as f:\n-            extra_data = pickle.load(f)\n-        self.optimizer.set_weights(extra_data[\"optimizer_state\"])\n-\n-        # Finally, return the epoch number from the checkpoint. This isn't a property of the model, so we can't\n-        # set it directly, but the user can pass it to fit().\n-        return {\"epoch\": extra_data[\"epoch\"]}\n-\n     def prepare_tf_dataset(\n         self,\n         dataset: \"datasets.Dataset\",  # noqa:F821"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "b0cdbd911941bdd596ac753fd33849ef83b1a841",
            "date": "2025-01-14T16:05:08Z",
            "author_login": "egojoseph"
          },
          {
            "sha": "a11041ffad285b13d578127cc304b90c2f12ce1f",
            "date": "2025-01-14T10:47:05Z",
            "author_login": "MekkCyber"
          },
          {
            "sha": "df2a812e95bfb7482de66cd0e1ea1f557cde1c79",
            "date": "2025-01-14T10:46:55Z",
            "author_login": "MekkCyber"
          },
          {
            "sha": "050636518a8b19edb36eec76c9b7676571a115a5",
            "date": "2025-01-14T10:37:37Z",
            "author_login": "MekkCyber"
          },
          {
            "sha": "715fdd6459b37336ba79f90ffdd6f9adb8ee22a5",
            "date": "2025-01-14T10:33:48Z",
            "author_login": "martin0258"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-502",
    "description": "The huggingface/transformers library is vulnerable to arbitrary code execution through deserialization of untrusted data within the `load_repo_checkpoint()` function of the `TFPreTrainedModel()` class. Attackers can execute arbitrary code and commands by crafting a malicious serialized payload, exploiting the use of `pickle.load()` on data from potentially untrusted sources. This vulnerability allows for remote code execution (RCE) by deceiving victims into loading a seemingly harmless checkpoint during a normal training process, thereby enabling attackers to execute arbitrary code on the targeted machine.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2024-04-10T17:15:58.160",
    "last_modified": "2024-11-21T09:29:53.770",
    "fix_date": "2024-02-08T14:17:33Z"
  },
  "references": [
    {
      "url": "https://github.com/huggingface/transformers/commit/693667b8ac8138b83f8adb6522ddaf42fa07c125",
      "source": "security@huntr.dev",
      "tags": []
    },
    {
      "url": "https://huntr.com/bounties/b3c36992-5264-4d7f-9906-a996efafba8f",
      "source": "security@huntr.dev",
      "tags": []
    },
    {
      "url": "https://github.com/huggingface/transformers/commit/693667b8ac8138b83f8adb6522ddaf42fa07c125",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://huntr.com/bounties/b3c36992-5264-4d7f-9906-a996efafba8f",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:04.466999",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "transformers",
    "owner": "huggingface",
    "created_at": "2018-10-29T13:56:00Z",
    "updated_at": "2025-01-14T14:50:24Z",
    "pushed_at": "2025-01-14T15:22:48Z",
    "size": 269350,
    "stars": 137574,
    "forks": 27567,
    "open_issues": 1523,
    "watchers": 137574,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "Python": 62974709,
      "Cuda": 327808,
      "Dockerfile": 36828,
      "Shell": 30374,
      "C++": 25815,
      "C": 7703,
      "Makefile": 4201,
      "Cython": 3635,
      "Jsonnet": 937
    },
    "commit_activity": {
      "total_commits_last_year": 3739,
      "avg_commits_per_week": 71.90384615384616,
      "days_active_last_year": 290
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T15:35:02.372075"
  }
}