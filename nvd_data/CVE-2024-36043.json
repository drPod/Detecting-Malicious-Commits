{
  "cve_id": "CVE-2024-36043",
  "github_data": {
    "repository": "surveyjs/survey-library",
    "fix_commit": "b25fbf0efd4486dc55f836240bebc2305803b96d",
    "related_commits": [
      "b25fbf0efd4486dc55f836240bebc2305803b96d",
      "b25fbf0efd4486dc55f836240bebc2305803b96d"
    ],
    "patch_url": "https://github.com/surveyjs/survey-library/commit/b25fbf0efd4486dc55f836240bebc2305803b96d.patch",
    "fix_commit_details": {
      "sha": "b25fbf0efd4486dc55f836240bebc2305803b96d",
      "commit_date": "2024-05-13T16:27:40Z",
      "author": {
        "login": "novikov82",
        "type": "User",
        "stats": {
          "total_commits": 568,
          "average_weekly_commits": 1.1521298174442192,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 134
        }
      },
      "commit_message": {
        "title": "Image with contentMode: \"youtube\" allows external script execution",
        "length": 120,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 44,
        "additions": 38,
        "deletions": 6
      },
      "files": [
        {
          "filename": "src/question_image.ts",
          "status": "modified",
          "additions": 8,
          "deletions": 6,
          "patch": "@@ -5,16 +5,17 @@ import { LocalizableString } from \"./localizablestring\";\n import { CssClassBuilder } from \"./utils/cssClassBuilder\";\n import { getRenderedStyleSize, getRenderedSize } from \"./utils/utils\";\n \n-const youtubeTags = [\"youtube.com\", \"youtu.be\"];\n+const youtubeDomains = [\"www.youtube.com\", \"m.youtube.com\", \"youtube.com\", \"youtu.be\"];\n const videoSuffics = [\".mp4\", \".mov\", \".wmv\", \".flv\", \".avi\", \".mkv\"];\n const youtubeUrl = \"https://www.youtube.com/\";\n const youtubeEmbed = \"embed\";\n \n function isUrlYoutubeVideo(url: string): boolean {\n   if (!url) return false;\n   url = url.toLowerCase();\n-  for (let i = 0; i < youtubeTags.length; i++) {\n-    if (url.indexOf(youtubeTags[i]) !== -1) return true;\n+  url = url.replace(/^https?:\\/\\//, \"\");\n+  for (let i = 0; i < youtubeDomains.length; i++) {\n+    if (url.indexOf(youtubeDomains[i] + \"/\") === 0) return true;\n   }\n   return false;\n }\n@@ -31,7 +32,7 @@ export class QuestionImageModel extends QuestionNonValue {\n     super(name);\n     const locImageLink = this.createLocalizableString(\"imageLink\", this, false);\n     locImageLink.onGetTextCallback = (text: string): string => {\n-      return getCorrectImageLink(text);\n+      return getCorrectImageLink(text, this.contentMode == \"youtube\");\n     };\n     this.createLocalizableString(\"altText\", this, false);\n     this.registerPropertyChangedHandlers([\"contentMode\", \"imageLink\"], () => this.calculateRenderedMode());\n@@ -203,8 +204,9 @@ export class QuestionImageModel extends QuestionNonValue {\n   }\n }\n \n-function getCorrectImageLink(val: string): string {\n-  if(!val || !isUrlYoutubeVideo(val)) return val;\n+function getCorrectImageLink(val: string, isYouTube: boolean): string {\n+  if (!val || !isUrlYoutubeVideo(val)) return isYouTube ? \"\" : val;\n+  //if(!val || !isUrlYoutubeVideo(val)) return val;\n   let res = val.toLocaleLowerCase();\n   if(res.indexOf(youtubeEmbed) > -1) return val;\n   let id = \"\";"
        },
        {
          "filename": "tests/question_imagetests.ts",
          "status": "modified",
          "additions": 30,
          "deletions": 0,
          "patch": "@@ -33,6 +33,18 @@ QUnit.test(\"Check youtube video rendered mode\", function (assert) {\n   const question = new QuestionImageModel(\"q1\");\n   question.imageLink = \"https://www.youtube.com/embed/tgbNymZ7vqY\";\n   assert.equal(question.renderedMode, \"youtube\");\n+  question.imageLink = \"https://youtube.com/embed/tgbNymZ7vqY\";\n+  assert.equal(question.renderedMode, \"youtube\");\n+  question.imageLink = \"m.youtube.com/embed/tgbNymZ7vqY\";\n+  assert.equal(question.renderedMode, \"youtube\");\n+  question.imageLink = \"youtube.com/embed/tgbNymZ7vqY\";\n+  assert.equal(question.renderedMode, \"youtube\");\n+  question.imageLink = \"youtu.be/tgbNymZ7vqY\";\n+  assert.equal(question.renderedMode, \"youtube\");\n+  question.imageLink = \"youtu.bee/tgbNymZ7vqY\";\n+  assert.equal(question.renderedMode, \"image\");\n+  question.imageLink = \"javascript:(alert('youtu.be'))\";\n+  assert.equal(question.renderedMode, \"image\");\n   question.imageLink = \"abcd\";\n   assert.equal(question.renderedMode, \"image\");\n   question.imageLink = \"https://youtu.be/tgbNymZ7vqY\";\n@@ -47,6 +59,24 @@ QUnit.test(\"Check NOT youtube video rendered mode\", function (assert) {\n   question.imageLink = \"videoUrl.avi\";\n   assert.equal(question.renderedMode, \"video\");\n });\n+QUnit.test(\"Check youtube video imagelink\", function (assert) {\n+  const question = new QuestionImageModel(\"q1\");\n+  question.contentMode = \"youtube\";\n+  question.imageLink = \"https://www.youtube.com/embed/tgbNymZ7vqY\";\n+  assert.equal(question.locImageLink.renderedHtml, \"https://www.youtube.com/embed/tgbNymZ7vqY\");\n+  question.imageLink = \"javascript:alert('a')\";\n+  assert.equal(question.locImageLink.renderedHtml, \"\");\n+  question.imageLink = \"https://youtu.be/tgbNymZ7vqY\";\n+  assert.equal(question.locImageLink.renderedHtml, \"https://www.youtube.com/embed/tgbNymZ7vqY\");\n+  question.imageLink = \"javascript:alert('youtube.com')\";\n+  assert.equal(question.locImageLink.renderedHtml, \"\");\n+  question.imageLink = \"youtube.com.org\";\n+  assert.equal(question.locImageLink.renderedHtml, \"\");\n+\n+  question.contentMode = \"image\";\n+  question.imageLink = \"videoUrl.mov\";\n+  assert.equal(question.locImageLink.renderedHtml, \"videoUrl.mov\");\n+});\n \n QUnit.test(\"Image adaptive mode\", function (assert) {\n   const json = {"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "8aa903ae89c6ec81e5b34011c045e83a24c8ad5c",
            "date": "2025-01-14T18:51:56Z",
            "author_login": "dk981234"
          },
          {
            "sha": "86dc0416b36422955f9998e4464c3416943e730a",
            "date": "2025-01-14T12:09:01Z",
            "author_login": "dk981234"
          },
          {
            "sha": "fc3e8a12034663b1e97f2901225e6bf53efdbf4d",
            "date": "2025-01-14T13:45:47Z",
            "author_login": "dk981234"
          },
          {
            "sha": "1bb6d469449b0c515fd1b341a3e10c36bb6f355a",
            "date": "2025-01-14T09:35:24Z",
            "author_login": "tsv2013"
          },
          {
            "sha": "25ded7a9b8f63ad1448b764030e3c8b7d7251da6",
            "date": "2025-01-14T09:22:01Z",
            "author_login": "andrewtelnov"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.1,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
    "cwe_id": "CWE-79",
    "description": "question_image.ts in SurveyJS Form Library before 1.10.4 allows contentMode=youtube XSS via the imageLink property.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-05-18T20:15:15.903",
    "last_modified": "2024-11-25T18:15:12.213",
    "fix_date": "2024-05-13T16:27:40Z"
  },
  "references": [
    {
      "url": "https://github.com/surveyjs/survey-library/commit/b25fbf0efd4486dc55f836240bebc2305803b96d",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://github.com/surveyjs/survey-library/issues/8286",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://github.com/surveyjs/survey-library/commit/b25fbf0efd4486dc55f836240bebc2305803b96d",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/surveyjs/survey-library/issues/8286",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:24.255023",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "survey-library",
    "owner": "surveyjs",
    "created_at": "2015-08-14T08:53:22Z",
    "updated_at": "2025-01-14T15:54:00Z",
    "pushed_at": "2025-01-14T18:58:52Z",
    "size": 173969,
    "stars": 4283,
    "forks": 832,
    "open_issues": 543,
    "watchers": 4283,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "custom/ms"
    ],
    "languages": {
      "TypeScript": 8591908,
      "HTML": 539970,
      "JavaScript": 534879,
      "SCSS": 259711,
      "Vue": 181173,
      "PEG.js": 4399,
      "Shell": 65
    },
    "commit_activity": {
      "total_commits_last_year": 1520,
      "avg_commits_per_week": 29.23076923076923,
      "days_active_last_year": 266
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T21:28:58.846909"
  }
}