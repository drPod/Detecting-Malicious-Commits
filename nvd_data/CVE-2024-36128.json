{
  "cve_id": "CVE-2024-36128",
  "github_data": {
    "repository": "directus/directus",
    "fix_commit": "7d2a1392f43613094de700062aba168a9400dd3b",
    "related_commits": [
      "7d2a1392f43613094de700062aba168a9400dd3b",
      "7d2a1392f43613094de700062aba168a9400dd3b"
    ],
    "patch_url": "https://github.com/directus/directus/commit/7d2a1392f43613094de700062aba168a9400dd3b.patch",
    "fix_commit_details": {
      "sha": "7d2a1392f43613094de700062aba168a9400dd3b",
      "commit_date": "2024-05-26T13:13:17Z",
      "author": {
        "login": "Zehir",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Fix #22572 Invalid query for random string (#22573)",
        "length": 547,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 23,
        "additions": 15,
        "deletions": 8
      },
      "files": [
        {
          "filename": ".changeset/large-pans-dance.md",
          "status": "added",
          "additions": 5,
          "deletions": 0,
          "patch": "@@ -0,0 +1,5 @@\n+---\n+\"@directus/api\": patch\n+---\n+\n+Fixed an issue where calling `/random/string` with an invalid length param could prevent creation of valid sessions until next restart"
        },
        {
          "filename": "api/src/controllers/utils.ts",
          "status": "modified",
          "additions": 7,
          "deletions": 5,
          "patch": "@@ -14,18 +14,20 @@ import { sanitizeQuery } from '../utils/sanitize-query.js';\n \n const router = Router();\n \n+const randomStringSchema = Joi.object<{ length: number }>({\n+\tlength: Joi.number().integer().min(1).max(500).default(32),\n+});\n+\n router.get(\n \t'/random/string',\n \tasyncHandler(async (req, res) => {\n \t\tconst { nanoid } = await import('nanoid');\n \n-\t\tif (req.query && req.query['length'] && Number(req.query['length']) > 500) {\n-\t\t\tthrow new InvalidQueryError({ reason: `\"length\" can't be more than 500 characters` });\n-\t\t}\n+\t\tconst { error, value } = randomStringSchema.validate(req.query, { allowUnknown: true });\n \n-\t\tconst string = nanoid(req.query?.['length'] ? Number(req.query['length']) : 32);\n+\t\tif (error) throw new InvalidQueryError({ reason: error.message });\n \n-\t\treturn res.json({ data: string });\n+\t\treturn res.json({ data: nanoid(value.length) });\n \t}),\n );\n "
        },
        {
          "filename": "api/src/services/graphql/index.ts",
          "status": "modified",
          "additions": 3,
          "deletions": 3,
          "patch": "@@ -2536,11 +2536,11 @@ export class GraphQLService {\n \t\t\t\tresolve: async (_, args) => {\n \t\t\t\t\tconst { nanoid } = await import('nanoid');\n \n-\t\t\t\t\tif (args['length'] && Number(args['length']) > 500) {\n-\t\t\t\t\t\tthrow new InvalidPayloadError({ reason: `\"length\" can't be more than 500 characters` });\n+\t\t\t\t\tif (args['length'] !== undefined && (args['length'] < 1 || args['length'] > 500)) {\n+\t\t\t\t\t\tthrow new InvalidPayloadError({ reason: `\"length\" must be between 1 and 500` });\n \t\t\t\t\t}\n \n-\t\t\t\t\treturn nanoid(args['length'] ? Number(args['length']) : 32);\n+\t\t\t\t\treturn nanoid(args['length'] ? args['length'] : 32);\n \t\t\t\t},\n \t\t\t},\n \t\t\tutils_hash_generate: {"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 3,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "28f7dc1c87793e5404c11a7d771760d772171108",
            "date": "2025-01-14T16:53:02Z",
            "author_login": "SP12893678"
          },
          {
            "sha": "3d6f6b5a84cddcfff8bc77fd17b66622732f6847",
            "date": "2025-01-14T14:24:03Z",
            "author_login": "ComfortablyCoding"
          },
          {
            "sha": "95687907fe6abdc2102fece5c9a0c4f637a48cda",
            "date": "2025-01-13T18:35:02Z",
            "author_login": "Dominic-Marcelino"
          },
          {
            "sha": "f6e54ecfc937f519d8cdf44cf10d110c5bbb14d1",
            "date": "2025-01-13T15:24:41Z",
            "author_login": "joselcvarela"
          },
          {
            "sha": "c2b35c42341ec304a83d7175360141e654a50912",
            "date": "2025-01-13T14:33:43Z",
            "author_login": "connorwinston"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-754",
    "description": "Directus is a real-time API and App dashboard for managing SQL database content. Prior to 10.11.2, providing a non-numeric length value to the random string generation utility will create a memory issue breaking the capability to generate random strings platform wide. This creates a denial of service situation where logged in sessions can no longer be refreshed as sessions depend on the capability to generate a random session ID. This vulnerability is fixed in 10.11.2.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-06-03T15:15:09.547",
    "last_modified": "2025-01-03T16:24:06.250",
    "fix_date": "2024-05-26T13:13:17Z"
  },
  "references": [
    {
      "url": "https://github.com/directus/directus/commit/7d2a1392f43613094de700062aba168a9400dd3b",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/directus/directus/security/advisories/GHSA-632p-p495-25m5",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/directus/directus/commit/7d2a1392f43613094de700062aba168a9400dd3b",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/directus/directus/security/advisories/GHSA-632p-p495-25m5",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:26.334226",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "directus",
    "owner": "directus",
    "created_at": "2012-12-12T01:35:36Z",
    "updated_at": "2025-01-14T12:22:36Z",
    "pushed_at": "2025-01-14T01:57:44Z",
    "size": 402534,
    "stars": 28706,
    "forks": 4004,
    "open_issues": 560,
    "watchers": 28706,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "TypeScript": 5077921,
      "Vue": 1872125,
      "SCSS": 55791,
      "Liquid": 28677,
      "CSS": 28575,
      "JavaScript": 26426,
      "Dockerfile": 1905,
      "HTML": 1189
    },
    "commit_activity": {
      "total_commits_last_year": 1775,
      "avg_commits_per_week": 34.13461538461539,
      "days_active_last_year": 258
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T14:01:10.212039"
  }
}