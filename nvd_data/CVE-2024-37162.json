{
  "cve_id": "CVE-2024-37162",
  "github_data": {
    "repository": "IdoPesok/zsa",
    "fix_commit": "86b86b282bde6780963f62406cc8bc65f2c86f3a",
    "related_commits": [
      "86b86b282bde6780963f62406cc8bc65f2c86f3a",
      "86b86b282bde6780963f62406cc8bc65f2c86f3a"
    ],
    "patch_url": "https://github.com/IdoPesok/zsa/commit/86b86b282bde6780963f62406cc8bc65f2c86f3a.patch",
    "fix_commit_details": {
      "sha": "86b86b282bde6780963f62406cc8bc65f2c86f3a",
      "commit_date": "2024-06-06T20:38:07Z",
      "author": {
        "login": "IdoPesok",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "remove stack from errors",
        "length": 24,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 46,
        "additions": 39,
        "deletions": 7
      },
      "files": [
        {
          "filename": "examples/showcase/app/revalidate/component.tsx",
          "status": "added",
          "additions": 17,
          "deletions": 0,
          "patch": "@@ -0,0 +1,17 @@\n+\"use client\"\n+\n+import IncrementExample from \"@/content/docs/examples/introduction/increment-example\"\n+import { useState } from \"react\"\n+\n+export default function RevalidateComponent() {\n+  const [open, setOpen] = useState(false)\n+  return (\n+    <div>\n+      {open ? (\n+        <IncrementExample />\n+      ) : (\n+        <button onClick={() => setOpen(true)}>Open</button>\n+      )}\n+    </div>\n+  )\n+}"
        },
        {
          "filename": "examples/showcase/app/revalidate/page.tsx",
          "status": "added",
          "additions": 15,
          "deletions": 0,
          "patch": "@@ -0,0 +1,15 @@\n+import RevalidateComponent from \"./component\"\n+\n+export default async function RevalidatePage() {\n+  // sleep for 2 seconds\n+  await new Promise((resolve) => setTimeout(resolve, 1000))\n+  const randomNumber = Math.floor(Math.random() * 10000)\n+\n+  return (\n+    <div>\n+      <h1>Revalidate Page</h1>\n+      <p>Random number: {randomNumber}</p>\n+      <RevalidateComponent />\n+    </div>\n+  )\n+}"
        },
        {
          "filename": "examples/showcase/content/docs/examples/introduction/actions.ts",
          "status": "modified",
          "additions": 5,
          "deletions": 1,
          "patch": "@@ -1,5 +1,6 @@\n \"use server\"\n \n+import { revalidatePath } from \"next/cache\"\n import z from \"zod\"\n import { createServerAction } from \"zsa\"\n \n@@ -11,7 +12,10 @@ export const incrementNumberAction = createServerAction()\n   )\n   .handler(async ({ input }) => {\n     await new Promise((resolve) => setTimeout(resolve, 500))\n-    return input.number + 1\n+\n+    revalidatePath(\"/revalidate\", \"page\")\n+\n+    return input.number + 2\n   })\n \n export const plainAction = createServerAction().handler(async () => {"
        },
        {
          "filename": "examples/showcase/content/docs/examples/introduction/increment-example.tsx",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -3,6 +3,7 @@\n import { Button } from \"@/components/ui/button\"\n import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\n import { useState } from \"react\"\n+import { toast } from \"sonner\"\n import { useServerAction } from \"zsa-react\"\n import { incrementNumberAction } from \"./actions\"\n \n@@ -31,6 +32,7 @@ export default function IncrementExample() {\n               return\n             }\n \n+            toast(\"got data\" + data)\n             setCounter(data)\n           }}\n         >"
        },
        {
          "filename": "packages/zsa/src/errors.ts",
          "status": "modified",
          "additions": 0,
          "deletions": 2,
          "patch": "@@ -57,7 +57,6 @@ export type TZSAError<TInputSchema extends z.ZodType> = Error &\n     | {\n         code: Exclude<keyof typeof ERROR_CODES, \"INPUT_PARSE_ERROR\">\n         message?: string\n-        stack: string\n         data: string\n         name: string\n         fieldErrors?: undefined\n@@ -66,7 +65,6 @@ export type TZSAError<TInputSchema extends z.ZodType> = Error &\n       }\n     | {\n         message?: string\n-        stack: string\n         code: \"INPUT_PARSE_ERROR\"\n         data: string\n         name: string"
        },
        {
          "filename": "packages/zsa/src/zod-safe-function.ts",
          "status": "modified",
          "additions": 0,
          "deletions": 1,
          "patch": "@@ -512,7 +512,6 @@ export class ZodSafeFunction<\n       {\n         data: stringifyIfNeeded(customError.data),\n         name: customError.name,\n-        stack: JSON.stringify(customError.stack),\n         message: stringifyIfNeeded(customError.message),\n         code: customError.code,\n         fieldErrors: flattenedErrors?.fieldErrors,"
        },
        {
          "filename": "tests/jest/__tests__/openapi.test.tsx",
          "status": "modified",
          "additions": 0,
          "deletions": 3,
          "patch": "@@ -165,7 +165,6 @@ describe(\"openapi\", () => {\n       const json = await response.json()\n       expect(json.code).toBe(\"INPUT_PARSE_ERROR\")\n       expect(json.message).toBeDefined()\n-      expect(json.stack).not.toBeDefined()\n     })\n \n     it(\"should multiply two numbers [POST]\", async () => {\n@@ -387,7 +386,6 @@ describe(\"openapi\", () => {\n       const json = await response.json()\n       expect(json.code).toBe(\"INPUT_PARSE_ERROR\")\n       expect(json.message).toBeDefined()\n-      expect(json.stack).toBeDefined()\n       expect(json.name).toBeDefined()\n     })\n \n@@ -419,7 +417,6 @@ describe(\"openapi\", () => {\n       const json = await response.json()\n       expect(json.code).toBe(\"INPUT_PARSE_ERROR\")\n       expect(json.message).toBeDefined()\n-      expect(json.stack).not.toBeDefined()\n     })\n   })\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 4,
        "max_directory_depth": 6
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "4f435a074d524b0a40f2301d3b2f2dffb42feaeb",
            "date": "2024-09-28T01:39:27Z",
            "author_login": "IdoPesok"
          },
          {
            "sha": "4e74095141e4d0ee67e8cd76512c3414e207c4ed",
            "date": "2024-09-28T01:38:50Z",
            "author_login": "github-actions[bot]"
          },
          {
            "sha": "efe974e005df862ed2ead2858718801eb0867d6d",
            "date": "2024-09-28T01:37:51Z",
            "author_login": "IdoPesok"
          },
          {
            "sha": "6fc40074051386dbdbf77cc783e16fbde5b31f77",
            "date": "2024-09-28T01:31:12Z",
            "author_login": "EmiN364"
          },
          {
            "sha": "0227e26d9f4bdab42aafb753efbe4e1b132aa60b",
            "date": "2024-09-28T01:19:43Z",
            "author_login": "EmiN364"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 4.0,
    "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N",
    "cwe_id": "CWE-209",
    "description": "zsa is a library for building typesafe server actions in Next.js. All users are impacted. The zsa application transfers the parse error stack from the server to the client in production build mode. This can potentially reveal sensitive information about the server environment, such as the machine username and directory paths. An attacker could exploit this vulnerability to gain unauthorized access to sensitive server information. This information could be used to plan further attacks or gain a deeper understanding of the server infrastructure. This has been patched on `0.3.3`.",
    "attack_vector": "LOCAL",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-06-07T15:15:50.617",
    "last_modified": "2024-11-21T09:23:20.180",
    "fix_date": "2024-06-06T20:38:07Z"
  },
  "references": [
    {
      "url": "https://github.com/IdoPesok/zsa/commit/86b86b282bde6780963f62406cc8bc65f2c86f3a",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/IdoPesok/zsa/security/advisories/GHSA-wjmj-h3xc-hxp8",
      "source": "security-advisories@github.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/IdoPesok/zsa/commit/86b86b282bde6780963f62406cc8bc65f2c86f3a",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/IdoPesok/zsa/security/advisories/GHSA-wjmj-h3xc-hxp8",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:26.354680",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "zsa",
    "owner": "IdoPesok",
    "created_at": "2024-05-01T01:32:09Z",
    "updated_at": "2025-01-14T02:27:47Z",
    "pushed_at": "2024-09-28T01:41:27Z",
    "size": 2109,
    "stars": 879,
    "forks": 29,
    "open_issues": 17,
    "watchers": 879,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main"
    ],
    "languages": {
      "TypeScript": 266302,
      "JavaScript": 3913,
      "CSS": 971
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T22:12:05.891643"
  }
}