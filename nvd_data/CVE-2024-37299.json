{
  "cve_id": "CVE-2024-37299",
  "github_data": {
    "repository": "discourse/discourse",
    "fix_commit": "188cb58daa833839c54c266ce22db150a3f3a210",
    "related_commits": [
      "188cb58daa833839c54c266ce22db150a3f3a210",
      "76f06f6b1491db6bd09a4017d2c5591431b3b16e",
      "188cb58daa833839c54c266ce22db150a3f3a210",
      "76f06f6b1491db6bd09a4017d2c5591431b3b16e"
    ],
    "patch_url": "https://github.com/discourse/discourse/commit/188cb58daa833839c54c266ce22db150a3f3a210.patch",
    "fix_commit_details": {
      "sha": "188cb58daa833839c54c266ce22db150a3f3a210",
      "commit_date": "2024-07-30T06:19:01Z",
      "author": {
        "login": "nattsw",
        "type": "User",
        "stats": {
          "total_commits": 136,
          "average_weekly_commits": 0.19624819624819625,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 76
        }
      },
      "commit_message": {
        "title": "SECURITY: Fixes for main (#28137)",
        "length": 503,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 83,
        "additions": 75,
        "deletions": 8
      },
      "files": [
        {
          "filename": "app/assets/javascripts/discourse-markdown-it/src/options.js",
          "status": "modified",
          "additions": 4,
          "deletions": 2,
          "patch": "@@ -65,8 +65,10 @@ export default function buildOptions(state) {\n       ? siteSettings.allowed_href_schemes.split(\"|\")\n       : null,\n     allowedIframes: siteSettings.allowed_iframes\n-      ? siteSettings.allowed_iframes.split(\"|\")\n-      : [],\n+      ? siteSettings.allowed_iframes\n+          .split(\"|\")\n+          .filter((str) => (str.match(/\\//g) || []).length >= 3)\n+      : [], // Only allow urls with at least 3 slashes. Ex: 'https://example.com/'.\n     markdownIt: true,\n     previewing,\n     disableEmojis,"
        },
        {
          "filename": "app/assets/javascripts/discourse/tests/unit/lib/pretty-text-test.js",
          "status": "modified",
          "additions": 12,
          "deletions": 0,
          "patch": "@@ -70,6 +70,18 @@ module(\"Unit | Utility | pretty-text\", function (hooks) {\n         .features.emoji,\n       \"emoji disabled\"\n     );\n+    assert.deepEqual(\n+      build({ siteSettings: { allowed_iframes: \"https://example.com/\" } })\n+        .options.discourse.allowedIframes,\n+      [\"https://example.com/\"],\n+      \"it doesn't filter out valid urls\"\n+    );\n+    assert.deepEqual(\n+      build({ siteSettings: { allowed_iframes: \"https://example.com\" } })\n+        .options.discourse.allowedIframes,\n+      [],\n+      \"it filters out invalid urls. Requires 3 slashes.\"\n+    );\n   });\n \n   test(\"basic cooking\", function (assert) {"
        },
        {
          "filename": "app/models/tag_group.rb",
          "status": "modified",
          "additions": 2,
          "deletions": 1,
          "patch": "@@ -1,6 +1,7 @@\n # frozen_string_literal: true\n \n class TagGroup < ActiveRecord::Base\n+  validates :name, length: { maximum: 100 }\n   validates_uniqueness_of :name, case_sensitive: false\n \n   has_many :tag_group_memberships, dependent: :destroy\n@@ -118,7 +119,7 @@ def self.visible(guardian)\n # Table name: tag_groups\n #\n #  id            :integer          not null, primary key\n-#  name          :string           not null\n+#  name          :string(100)      not null\n #  created_at    :datetime         not null\n #  updated_at    :datetime         not null\n #  parent_tag_id :integer"
        },
        {
          "filename": "config/locales/client.en.yml",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -4610,7 +4610,7 @@ en:\n         everyone_can_use: \"Tags can be used by everyone\"\n         usable_only_by_groups: \"Tags are visible to everyone, but only the following groups can use them\"\n         visible_only_to_groups: \"Tags are visible only to the following groups\"\n-        cannot_save: \"Cannot save tag group. Make sure that there is at least one tag present, tag group name is not empty, and a group is selected for tags permission.\"\n+        cannot_save: \"Cannot save tag group. Make sure that there is at least one tag present, tag group name is not empty and less than 100 characters, and a group is selected for tags permission.\"\n         tags_placeholder: \"Search or create tags\"\n         parent_tag_placeholder: \"Optional\"\n         select_groups_placeholder: \"Select groups\u2026\""
        },
        {
          "filename": "config/site_settings.yml",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -2016,7 +2016,7 @@ security:\n     allow_any: false\n     choices: \"['*'] + Onebox::Engine.all_iframe_origins\"\n   allowed_iframes:\n-    default: \"https://www.google.com/maps/embed?|https://www.openstreetmap.org/export/embed.html?|https://calendar.google.com/calendar/embed?|https://codepen.io/|https://www.instagram.com|https://open.spotify.com\"\n+    default: \"https://www.google.com/maps/embed?|https://www.openstreetmap.org/export/embed.html?|https://calendar.google.com/calendar/embed?|https://codepen.io/|https://www.instagram.com/|https://open.spotify.com/\"\n     type: list\n     list_type: simple\n     client: true"
        },
        {
          "filename": "db/migrate/20240610150449_limit_tag_group_name_length.rb",
          "status": "added",
          "additions": 13,
          "deletions": 0,
          "patch": "@@ -0,0 +1,13 @@\n+# frozen_string_literal: true\n+\n+class LimitTagGroupNameLength < ActiveRecord::Migration[7.0]\n+  def change\n+    DB.exec <<~SQL\n+      UPDATE tag_groups \n+      SET name = LEFT(name, 100)\n+      WHERE LENGTH(name) > 100\n+    SQL\n+\n+    change_column :tag_groups, :name, :string, limit: 100\n+  end\n+end"
        },
        {
          "filename": "lib/onebox/sanitize_config.rb",
          "status": "modified",
          "additions": 7,
          "deletions": 0,
          "patch": "@@ -79,6 +79,13 @@ module SanitizeConfig\n                     iframe.remove_attribute(\"src\")\n                   end\n                 end,\n+                lambda do |env|\n+                  next if env[:node_name] != \"svg\"\n+                  env[:node].traverse do |node|\n+                    next if node.element? && %w[svg path use].include?(node.name)\n+                    node.remove\n+                  end\n+                end,\n               ],\n           protocols: {\n             \"embed\" => {"
        },
        {
          "filename": "spec/lib/onebox/preview_spec.rb",
          "status": "modified",
          "additions": 32,
          "deletions": 0,
          "patch": "@@ -118,4 +118,36 @@\n       expect(result).to include ' src=\"https://thirdparty.example.com\"'\n     end\n   end\n+\n+  describe \"svg sanitization\" do\n+    it \"does not allow unexpected elements inside svg\" do\n+      preview = described_class.new(preview_url)\n+      preview.stubs(:engine_html).returns <<~HTML.strip\n+        <svg><style>/*Text*/</style></svg>\n+      HTML\n+\n+      result = preview.to_s\n+      expect(result).to eq(\"<svg></svg>\")\n+    end\n+\n+    it \"does not allow text inside svg\" do\n+      preview = described_class.new(preview_url)\n+      preview.stubs(:engine_html).returns <<~HTML.strip\n+        <svg>Hello world</svg>\n+      HTML\n+\n+      result = preview.to_s\n+      expect(result).to eq(\"<svg></svg>\")\n+    end\n+\n+    it \"allows simple svg\" do\n+      simple_svg =\n+        '<svg height=\"210\" width=\"400\"><path d=\"M150 5 L75 200 L225 200 Z\" style=\"fill:none;stroke:green;stroke-width:3\"></path></svg>'\n+      preview = described_class.new(preview_url)\n+      preview.stubs(:engine_html).returns simple_svg\n+\n+      result = preview.to_s\n+      expect(result).to eq(simple_svg)\n+    end\n+  end\n end"
        },
        {
          "filename": "spec/lib/pretty_text_spec.rb",
          "status": "modified",
          "additions": 3,
          "deletions": 3,
          "patch": "@@ -2529,17 +2529,17 @@ def expect_cooked_match(raw, expected_cooked)\n   end\n \n   it \"can properly allowlist iframes\" do\n-    SiteSetting.allowed_iframes = \"https://bob.com/a|http://silly.com?EMBED=\"\n+    SiteSetting.allowed_iframes = \"https://bob.com/a|http://silly.com/?EMBED=\"\n     raw = <<~HTML\n       <iframe src='https://www.google.com/maps/Embed?testing'></iframe>\n       <iframe src='https://bob.com/a?testing'></iframe>\n-      <iframe src='HTTP://SILLY.COM?EMBED=111'></iframe>\n+      <iframe src='HTTP://SILLY.COM/?EMBED=111'></iframe>\n     HTML\n \n     # we require explicit HTTPS here\n     html = <<~HTML\n       <iframe src=\"https://bob.com/a?testing\"></iframe>\n-      <iframe src=\"HTTP://SILLY.COM?EMBED=111\"></iframe>\n+      <iframe src=\"HTTP://SILLY.COM/?EMBED=111\"></iframe>\n     HTML\n \n     cooked = PrettyText.cook(raw).strip"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 3,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 9,
        "max_directory_depth": 7
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "496a739788d58a7f1c6bd59643d062ae37e982a0",
            "date": "2025-01-14T15:19:49Z",
            "author_login": "discourse-translator-bot"
          },
          {
            "sha": "a89086f7996f95024827df61fb0d86a516b269f6",
            "date": "2025-01-14T15:19:19Z",
            "author_login": "markvanlan"
          },
          {
            "sha": "473e37e7b3dcb254548a04695fb5e5f56a6de33b",
            "date": "2025-01-14T14:32:50Z",
            "author_login": "CvX"
          },
          {
            "sha": "eb64db828e116edbacdf10266f8102ed7028a2f2",
            "date": "2025-01-14T13:28:46Z",
            "author_login": "renato"
          },
          {
            "sha": "7330cfa76a6e6ab7bf90702fb1db5e1a37a2eca1",
            "date": "2025-01-14T13:28:16Z",
            "author_login": "awesomerobot"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 4.9,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-400",
    "description": "Discourse is an open source discussion platform. Prior to 3.2.5 and 3.3.0.beta5, crafting requests to submit very long tag group names can reduce the availability of a Discourse instance. This vulnerability is fixed in 3.2.5 and 3.3.0.beta5.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-07-30T15:15:11.857",
    "last_modified": "2024-11-21T09:23:33.790",
    "fix_date": "2024-07-30T06:19:01Z"
  },
  "references": [
    {
      "url": "https://github.com/discourse/discourse/commit/188cb58daa833839c54c266ce22db150a3f3a210",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/discourse/discourse/commit/76f06f6b1491db6bd09a4017d2c5591431b3b16e",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/discourse/discourse/security/advisories/GHSA-4j6h-9pjp-5476",
      "source": "security-advisories@github.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/discourse/discourse/commit/188cb58daa833839c54c266ce22db150a3f3a210",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/discourse/discourse/commit/76f06f6b1491db6bd09a4017d2c5591431b3b16e",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/discourse/discourse/security/advisories/GHSA-4j6h-9pjp-5476",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:34.503060",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "discourse",
    "owner": "discourse",
    "created_at": "2013-01-12T00:25:55Z",
    "updated_at": "2025-01-14T12:47:11Z",
    "pushed_at": "2025-01-14T12:47:07Z",
    "size": 692535,
    "stars": 42892,
    "forks": 8390,
    "open_issues": 67,
    "watchers": 42892,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "Ruby": 20275963,
      "JavaScript": 9399743,
      "HTML": 1461704,
      "Handlebars": 1070089,
      "SCSS": 988476,
      "Mustache": 32177,
      "Shell": 12314,
      "CSS": 2558
    },
    "commit_activity": {
      "total_commits_last_year": 5032,
      "avg_commits_per_week": 96.76923076923077,
      "days_active_last_year": 300
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-2.0"
    },
    "collected_at": "2025-01-14T13:00:05.486140"
  }
}