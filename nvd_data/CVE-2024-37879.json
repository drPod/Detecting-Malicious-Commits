{
  "cve_id": "CVE-2024-37879",
  "github_data": {
    "repository": "usvn/usvn",
    "fix_commit": "6b4678954fca9635154743b95ff9c8947cf5f46f",
    "related_commits": [
      "6b4678954fca9635154743b95ff9c8947cf5f46f"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "6b4678954fca9635154743b95ff9c8947cf5f46f",
      "commit_date": "2024-06-02T20:27:52Z",
      "author": {
        "login": "jeffbencteux",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Fix user input sanitization in INI config",
        "length": 99,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 52,
        "additions": 26,
        "deletions": 26
      },
      "files": [
        {
          "filename": "src/library/USVN/Config.php",
          "status": "modified",
          "additions": 26,
          "deletions": 26,
          "patch": "@@ -30,7 +30,7 @@ static public function setLanguage($language)\n \t{\n \t\tif (in_array($language, USVN_Translation::listTranslation())) {\n \t\t\t$config = new USVN_Config_Ini(USVN_CONFIG_FILE, USVN_CONFIG_SECTION);\n-\t\t\t$config->translation->locale = $language;\n+\t\t\t$config->translation->locale = filter_var($language, FILTER_SANITIZE_STRING);\n \t\t\t$config->save();\n \t\t} \n \t\telse {\n@@ -49,7 +49,7 @@ static public function setTimeZone($timezone)\n \t\t$availableTimezones = Zend_Locale_Data::getList(\"en\", \"WindowsToTimezone\");\n \t\tif (array_key_exists($timezone, $availableTimezones)) {\n \t\t\t$config = new USVN_Config_Ini(USVN_CONFIG_FILE, USVN_CONFIG_SECTION);\n-\t\t\t$config->timezone = $timezone;\n+\t\t\t$config->timezone = filter_var($timezone, FILTER_SANITIZE_FULL_SPECIAL_CHARS);\n \t\t\t$config->save();\n \t\t}\n \t\telse {\n@@ -67,7 +67,7 @@ static public function setTemplate($template)\n \t{\n \t\tif (in_array($template, USVN_Template::listTemplate())) {\n \t\t\t$config = new USVN_Config_Ini(USVN_CONFIG_FILE, USVN_CONFIG_SECTION);\n-\t\t\t$config->template->name = $template;\n+\t\t\t$config->template->name = filter_var($template, FILTER_SANITIZE_STRING);\n \t\t\t$config->save();\n \t\t}\n \t\telse {\n@@ -83,7 +83,7 @@ static public function setTemplate($template)\n \tstatic public function setCheckForUpdate($check)\n \t{\n \t\t$config = new USVN_Config_Ini(USVN_CONFIG_FILE, USVN_CONFIG_SECTION);\n-\t\t$config->update = array(\"checkforupdate\" => $check, \"lastcheckforupdate\" => 0);\n+\t\t$config->update = array(\"checkforupdate\" => filter_var($check, FILTER_SANITIZE_STRING), \"lastcheckforupdate\" => 0);\n \t\t$config->save();\n \t}\n \n@@ -96,9 +96,9 @@ static public function setCheckForUpdate($check)\n \tstatic public function setSiteDatas($datas)\n \t{\n \t\t$config = new USVN_Config_Ini(USVN_CONFIG_FILE, USVN_CONFIG_SECTION);\n-\t\t$config->site->title = $datas['title'];\n-\t\t$config->site->ico = $datas['ico'];\n-\t\t$config->site->logo = $datas['logo'];\n+\t\t$config->site->title = filter_var($datas['title'], FILTER_SANITIZE_STRING);\n+\t\t$config->site->ico = filter_var($datas['ico'], FILTER_SANITIZE_FULL_SPECIAL_CHARS);\n+\t\t$config->site->logo = filter_var($datas['logo'], FILTER_SANITIZE_FULL_SPECIAL_CHARS);\n \t\t$config->save();\n \t}\n \n@@ -119,37 +119,37 @@ static public function setLDAPConfig($ldap_options)\n \t\t{\n \t\t\t$config->ldap->options = array();\n \t\t}\n-\t\t$config->ldap->createGroupForUserInDB = $ldap_options['createGroupForUserInDB'];\n-\t\t$config->ldap->createUserInDBOnLogin = $ldap_options['createUserInDBOnLogin'];\n-\t\tif (strlen($ldap_options['host'])) $config->ldap->options->host = $ldap_options['host'];\n-\t\tif (strlen($ldap_options['port'])) $config->ldap->options->port = $ldap_options['port'];\n-\t\tif (strlen($ldap_options['username'])) $config->ldap->options->username = $ldap_options['username'];\n-\t\tif (strlen($ldap_options['password'])) $config->ldap->options->password = $ldap_options['password'];\n-\t\tif (strlen($ldap_options['useStartTls'])) $config->ldap->options->useStartTls = $ldap_options['useStartTls'];\n-\t\tif (strlen($ldap_options['useSsl'])) $config->ldap->options->useSsl = $ldap_options['useSsl'];\n-\t\tif (strlen($ldap_options['bindDnFormat'])) $config->ldap->options->bindDnFormat = $ldap_options['bindDnFormat'];\n-\t\tif (strlen($ldap_options['bindRequiresDn'])) $config->ldap->options->bindRequiresDn = $ldap_options['bindRequiresDn'];\n-\t\tif (strlen($ldap_options['baseDn'])) $config->ldap->options->baseDn = $ldap_options['baseDn'];\n-\t\tif (strlen($ldap_options['accountCanonicalForm'])) $config->ldap->options->accountCanonicalForm = $ldap_options['accountCanonicalForm'];\n-\t\tif (strlen($ldap_options['accountDomainName'])) $config->ldap->options->accountDomainName = $ldap_options['accountDomainName'];\n-\t\tif (strlen($ldap_options['accountDomainNameShort'])) $config->ldap->options->accountDomainNameShort = $ldap_options['accountDomainNameShort'];\n-\t\tif (strlen($ldap_options['accountFilterFormat'])) $config->ldap->options->accountFilterFormat = $ldap_options['accountFilterFormat'];\n-\t\tif (strlen($ldap_options['allowEmptyPassword'])) $config->ldap->options->allowEmptyPassword = $ldap_options['allowEmptyPassword'];\n-\t\tif (strlen($ldap_options['optReferrals'])) $config->ldap->options->optReferrals = $ldap_options['optReferrals'];\n+\t\t$config->ldap->createGroupForUserInDB = filter_var($ldap_options['createGroupForUserInDB'], FILTER_SANITIZE_NUMBER_INT);\n+\t\t$config->ldap->createUserInDBOnLogin = filter_var($ldap_options['createUserInDBOnLogin'], FILTER_SANITIZE_NUMBER_INT);\n+\t\tif (strlen($ldap_options['host'])) $config->ldap->options->host = filter_var($ldap_options['host'], FILTER_SANITIZE_FULL_SPECIAL_CHARS);\n+\t\tif (strlen($ldap_options['port'])) $config->ldap->options->port = filter_var($ldap_options['port'], FILTER_SANITIZE_NUMBER_INT);\n+\t\tif (strlen($ldap_options['username'])) $config->ldap->options->username = filter_var($ldap_options['username'], FILTER_SANITIZE_FULL_SPECIAL_CHARS);\n+\t\tif (strlen($ldap_options['password'])) $config->ldap->options->password = filter_var($ldap_options['password'], FILTER_SANITIZE_FULL_SPECIAL_CHARS);\n+\t\tif (strlen($ldap_options['useStartTls'])) $config->ldap->options->useStartTls = filter_var($ldap_options['useStartTls'], FILTER_SANITIZE_NUMBER_INT);\n+\t\tif (strlen($ldap_options['useSsl'])) $config->ldap->options->useSsl = filter_var($ldap_options['useSsl'], FILTER_SANITIZE_NUMBER_INT);\n+\t\tif (strlen($ldap_options['bindDnFormat'])) $config->ldap->options->bindDnFormat = filter_var($ldap_options['bindDnFormat'], FILTER_SANITIZE_FULL_SPECIAL_CHARS);\n+\t\tif (strlen($ldap_options['bindRequiresDn'])) $config->ldap->options->bindRequiresDn = filter_var($ldap_options['bindRequiresDn'], FILTER_SANITIZE_NUMBER_INT);\n+\t\tif (strlen($ldap_options['baseDn'])) $config->ldap->options->baseDn = filter_var($ldap_options['baseDn'], FILTER_SANITIZE_FULL_SPECIAL_CHARS);\n+\t\tif (strlen($ldap_options['accountCanonicalForm'])) $config->ldap->options->accountCanonicalForm = filter_var($ldap_options['accountCanonicalForm'], FILTER_SANITIZE_FULL_SPECIAL_CHARS);\n+\t\tif (strlen($ldap_options['accountDomainName'])) $config->ldap->options->accountDomainName = filter_var($ldap_options['accountDomainName'], FILTER_SANITIZE_FULL_SPECIAL_CHARS);\n+\t\tif (strlen($ldap_options['accountDomainNameShort'])) $config->ldap->options->accountDomainNameShort = filter_var($ldap_options['accountDomainNameShort'], FILTER_SANITIZE_FULL_SPECIAL_CHARS);\n+\t\tif (strlen($ldap_options['accountFilterFormat'])) $config->ldap->options->accountFilterFormat = filter_var($ldap_options['accountFilterFormat'], FILTER_SANITIZE_FULL_SPECIAL_CHARS);\n+\t\tif (strlen($ldap_options['allowEmptyPassword'])) $config->ldap->options->allowEmptyPassword = filter_var($ldap_options['allowEmptyPassword'], FILTER_SANITIZE_NUMBER_INT);\n+\t\tif (strlen($ldap_options['optReferrals'])) $config->ldap->options->optReferrals = filter_var($ldap_options['optReferrals'], FILTER_SANITIZE_FULL_SPECIAL_CHARS);\n \t\t$config->save();\n \t}\n \n \tstatic public function setAuthAdapter($adapterMethod)\n \t{\n \t\t$config = new USVN_Config_Ini(USVN_CONFIG_FILE, USVN_CONFIG_SECTION);\n-\t\t$config->authAdapterMethod = $adapterMethod;\n+\t\t$config->authAdapterMethod = filter_var($adapterMethod, FILTER_SANITIZE_STRING);\n \t\t$config->save();\n \t}\n \n \tstatic public function setDefaultUser($defaultUser)\n \t{\n \t\t$config = new USVN_Config_Ini(USVN_CONFIG_FILE, USVN_CONFIG_SECTION);\n-\t\t$config->alwaysUseDatabaseForLogin = $defaultUser;\n+\t\t$config->alwaysUseDatabaseForLogin = filter_var($defaultUser, FILTER_SANITIZE_STRING);\n \t\t$config->save();\n \t}\n }"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 1,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "0711d038c17b0d39c4326be2944342a5f19fe3e2",
            "date": "2024-06-09T16:40:56Z",
            "author_login": "julien-duponchelle"
          },
          {
            "sha": "f2145613c565d0bce4746b337ffb2695e856fc82",
            "date": "2024-06-09T16:39:41Z",
            "author_login": "julien-duponchelle"
          },
          {
            "sha": "4440292761cb5315f6ea8f79c633a89dd5bcfa7a",
            "date": "2024-06-09T16:32:02Z",
            "author_login": "julien-duponchelle"
          },
          {
            "sha": "6b4678954fca9635154743b95ff9c8947cf5f46f",
            "date": "2024-06-02T20:27:52Z",
            "author_login": "jeffbencteux"
          },
          {
            "sha": "ba835f6c92e4b61c37651244885f323cb44321dc",
            "date": "2023-08-20T09:52:02Z",
            "author_login": "julien-duponchelle"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 4.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:H/UI:R/S:C/C:L/I:L/A:N",
    "cwe_id": "CWE-79",
    "description": "Improper input validation in /admin/config/save in User-friendly SVN (USVN) before v1.0.12 and below allows administrators to execute arbitrary code via the fields \"siteTitle\", \"siteIco\" and \"siteLogo\".",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-09-20T17:15:14.970",
    "last_modified": "2024-11-01T21:35:02.967",
    "fix_date": "2024-06-02T20:27:52Z"
  },
  "references": [
    {
      "url": "https://github.com/usvn/usvn/commit/6b4678954fca9635154743b95ff9c8947cf5f46f",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://github.com/usvn/usvn/releases/tag/1.0.12",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://www.usvn.info/2024/06/09/usvn-1.0.12",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://www.usvn.info/news.html",
      "source": "cve@mitre.org",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:09:00.141756",
    "processing_status": "enhanced"
  }
}