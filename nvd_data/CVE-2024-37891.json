{
  "cve_id": "CVE-2024-37891",
  "github_data": {
    "repository": "urllib3/urllib3",
    "fix_commit": "accff72ecc2f6cf5a76d9570198a93ac7c90270e",
    "related_commits": [
      "accff72ecc2f6cf5a76d9570198a93ac7c90270e",
      "accff72ecc2f6cf5a76d9570198a93ac7c90270e"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "accff72ecc2f6cf5a76d9570198a93ac7c90270e",
      "commit_date": "2024-06-17T07:09:06Z",
      "author": {
        "login": "pquentin",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Merge pull request from GHSA-34jh-p97f-mpxf",
        "length": 165,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 42,
        "additions": 37,
        "deletions": 5
      },
      "files": [
        {
          "filename": "CHANGES.rst",
          "status": "modified",
          "additions": 5,
          "deletions": 0,
          "patch": "@@ -1,3 +1,8 @@\n+2.2.2 (2024-06-17)\n+==================\n+\n+- Added the ``Proxy-Authorization`` header to the list of headers to strip from requests when redirecting to a different host. As before, different headers can be set via ``Retry.remove_headers_on_redirect``.\n+\n 2.2.1 (2024-02-16)\n ==================\n "
        },
        {
          "filename": "src/urllib3/util/retry.py",
          "status": "modified",
          "additions": 3,
          "deletions": 1,
          "patch": "@@ -189,7 +189,9 @@ class Retry:\n     RETRY_AFTER_STATUS_CODES = frozenset([413, 429, 503])\n \n     #: Default headers to be used for ``remove_headers_on_redirect``\n-    DEFAULT_REMOVE_HEADERS_ON_REDIRECT = frozenset([\"Cookie\", \"Authorization\"])\n+    DEFAULT_REMOVE_HEADERS_ON_REDIRECT = frozenset(\n+        [\"Cookie\", \"Authorization\", \"Proxy-Authorization\"]\n+    )\n \n     #: Default maximum backoff time.\n     DEFAULT_BACKOFF_MAX = 120"
        },
        {
          "filename": "test/test_retry.py",
          "status": "modified",
          "additions": 5,
          "deletions": 1,
          "patch": "@@ -334,7 +334,11 @@ def test_retry_method_not_allowed(self) -> None:\n     def test_retry_default_remove_headers_on_redirect(self) -> None:\n         retry = Retry()\n \n-        assert retry.remove_headers_on_redirect == {\"authorization\", \"cookie\"}\n+        assert retry.remove_headers_on_redirect == {\n+            \"authorization\",\n+            \"proxy-authorization\",\n+            \"cookie\",\n+        }\n \n     def test_retry_set_remove_headers_on_redirect(self) -> None:\n         retry = Retry(remove_headers_on_redirect=[\"X-API-Secret\"])"
        },
        {
          "filename": "test/with_dummyserver/test_poolmanager.py",
          "status": "modified",
          "additions": 24,
          "deletions": 3,
          "patch": "@@ -144,21 +144,30 @@ def test_redirect_cross_host_remove_headers(self) -> None:\n                 \"GET\",\n                 f\"{self.base_url}/redirect\",\n                 fields={\"target\": f\"{self.base_url_alt}/headers\"},\n-                headers={\"Authorization\": \"foo\", \"Cookie\": \"foo=bar\"},\n+                headers={\n+                    \"Authorization\": \"foo\",\n+                    \"Proxy-Authorization\": \"bar\",\n+                    \"Cookie\": \"foo=bar\",\n+                },\n             )\n \n             assert r.status == 200\n \n             data = r.json()\n \n             assert \"Authorization\" not in data\n+            assert \"Proxy-Authorization\" not in data\n             assert \"Cookie\" not in data\n \n             r = http.request(\n                 \"GET\",\n                 f\"{self.base_url}/redirect\",\n                 fields={\"target\": f\"{self.base_url_alt}/headers\"},\n-                headers={\"authorization\": \"foo\", \"cookie\": \"foo=bar\"},\n+                headers={\n+                    \"authorization\": \"foo\",\n+                    \"proxy-authorization\": \"baz\",\n+                    \"cookie\": \"foo=bar\",\n+                },\n             )\n \n             assert r.status == 200\n@@ -167,6 +176,8 @@ def test_redirect_cross_host_remove_headers(self) -> None:\n \n             assert \"authorization\" not in data\n             assert \"Authorization\" not in data\n+            assert \"proxy-authorization\" not in data\n+            assert \"Proxy-Authorization\" not in data\n             assert \"cookie\" not in data\n             assert \"Cookie\" not in data\n \n@@ -176,7 +187,11 @@ def test_redirect_cross_host_no_remove_headers(self) -> None:\n                 \"GET\",\n                 f\"{self.base_url}/redirect\",\n                 fields={\"target\": f\"{self.base_url_alt}/headers\"},\n-                headers={\"Authorization\": \"foo\", \"Cookie\": \"foo=bar\"},\n+                headers={\n+                    \"Authorization\": \"foo\",\n+                    \"Proxy-Authorization\": \"bar\",\n+                    \"Cookie\": \"foo=bar\",\n+                },\n                 retries=Retry(remove_headers_on_redirect=[]),\n             )\n \n@@ -185,6 +200,7 @@ def test_redirect_cross_host_no_remove_headers(self) -> None:\n             data = r.json()\n \n             assert data[\"Authorization\"] == \"foo\"\n+            assert data[\"Proxy-Authorization\"] == \"bar\"\n             assert data[\"Cookie\"] == \"foo=bar\"\n \n     def test_redirect_cross_host_set_removed_headers(self) -> None:\n@@ -196,6 +212,7 @@ def test_redirect_cross_host_set_removed_headers(self) -> None:\n                 headers={\n                     \"X-API-Secret\": \"foo\",\n                     \"Authorization\": \"bar\",\n+                    \"Proxy-Authorization\": \"baz\",\n                     \"Cookie\": \"foo=bar\",\n                 },\n                 retries=Retry(remove_headers_on_redirect=[\"X-API-Secret\"]),\n@@ -207,11 +224,13 @@ def test_redirect_cross_host_set_removed_headers(self) -> None:\n \n             assert \"X-API-Secret\" not in data\n             assert data[\"Authorization\"] == \"bar\"\n+            assert data[\"Proxy-Authorization\"] == \"baz\"\n             assert data[\"Cookie\"] == \"foo=bar\"\n \n             headers = {\n                 \"x-api-secret\": \"foo\",\n                 \"authorization\": \"bar\",\n+                \"proxy-authorization\": \"baz\",\n                 \"cookie\": \"foo=bar\",\n             }\n             r = http.request(\n@@ -229,12 +248,14 @@ def test_redirect_cross_host_set_removed_headers(self) -> None:\n             assert \"x-api-secret\" not in data\n             assert \"X-API-Secret\" not in data\n             assert data[\"Authorization\"] == \"bar\"\n+            assert data[\"Proxy-Authorization\"] == \"baz\"\n             assert data[\"Cookie\"] == \"foo=bar\"\n \n             # Ensure the header argument itself is not modified in-place.\n             assert headers == {\n                 \"x-api-secret\": \"foo\",\n                 \"authorization\": \"bar\",\n+                \"proxy-authorization\": \"baz\",\n                 \"cookie\": \"foo=bar\",\n             }\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 2,
        "unique_directories": 4,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "37565dc3addfa92ac89b0a3ae7b0134e4f3d6c72",
            "date": "2025-01-17T16:02:57Z",
            "author_login": "illia-v"
          },
          {
            "sha": "bd8355c8c255d2e135c7ca01986a02bb76c578af",
            "date": "2025-01-17T16:02:47Z",
            "author_login": "illia-v"
          },
          {
            "sha": "d86e15d05a5c1b1d6152cecda98b894d3578cbde",
            "date": "2025-01-17T13:53:33Z",
            "author_login": "illia-v"
          },
          {
            "sha": "f5f876c985faa063c5ff40cb97f20fc021be6a98",
            "date": "2025-01-13T09:34:59Z",
            "author_login": "graingert"
          },
          {
            "sha": "c82d8e506abff905e366ea72ef62c65eed584b17",
            "date": "2025-01-10T10:32:20Z",
            "author_login": "s-t-e-v-e-n-k"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 4.4,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:H/I:N/A:N",
    "cwe_id": "CWE-669",
    "description": " urllib3 is a user-friendly HTTP client library for Python. When using urllib3's proxy support with `ProxyManager`, the `Proxy-Authorization` header is only sent to the configured proxy, as expected. However, when sending HTTP requests *without* using urllib3's proxy support, it's possible to accidentally configure the `Proxy-Authorization` header even though it won't have any effect as the request is not using a forwarding proxy or a tunneling proxy. In those cases, urllib3 doesn't treat the `Proxy-Authorization` HTTP header as one carrying authentication material and thus doesn't strip the header on cross-origin redirects. Because this is a highly unlikely scenario, we believe the severity of this vulnerability is low for almost all users. Out of an abundance of caution urllib3 will automatically strip the `Proxy-Authorization` header during cross-origin redirects to avoid the small chance that users are doing this on accident. Users should use urllib3's proxy support or disable automatic redirects to achieve safe processing of the `Proxy-Authorization` header, but we still decided to strip the header by default in order to further protect users who aren't using the correct approach. We believe the number of usages affected by this advisory is low. It requires all of the following to be true to be exploited: 1. Setting the `Proxy-Authorization` header without using urllib3's built-in proxy support. 2. Not disabling HTTP redirects. 3. Either not using an HTTPS origin server or for the proxy or target origin to redirect to a malicious origin. Users are advised to update to either version 1.26.19 or version 2.2.2. Users unable to upgrade may use the `Proxy-Authorization` header with urllib3's `ProxyManager`, disable HTTP redirects using `redirects=False` when sending requests, or not user the `Proxy-Authorization` header as mitigations.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2024-06-17T20:15:13.450",
    "last_modified": "2024-11-21T09:24:28.953",
    "fix_date": "2024-06-17T07:09:06Z"
  },
  "references": [
    {
      "url": "https://github.com/urllib3/urllib3/commit/accff72ecc2f6cf5a76d9570198a93ac7c90270e",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/urllib3/urllib3/security/advisories/GHSA-34jh-p97f-mpxf",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/urllib3/urllib3/commit/accff72ecc2f6cf5a76d9570198a93ac7c90270e",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/urllib3/urllib3/security/advisories/GHSA-34jh-p97f-mpxf",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://security.netapp.com/advisory/ntap-20240822-0003/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://www.vicarius.io/vsociety/posts/proxy-authorization-header-handling-vulnerability-in-urllib3-cve-2024-37891",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:28.837114",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "urllib3",
    "owner": "urllib3",
    "created_at": "2011-09-18T18:08:28Z",
    "updated_at": "2025-01-26T01:29:25Z",
    "pushed_at": "2025-01-20T04:56:39Z",
    "size": 7533,
    "stars": 3831,
    "forks": 1170,
    "open_issues": 135,
    "watchers": 3831,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "1.24-series",
      "1.25-series",
      "1.26.x",
      "2.0.x",
      "main",
      "misleading-error-truncated-response",
      "release",
      "sethmlarson-patch-1",
      "v2"
    ],
    "languages": {
      "Python": 1106696,
      "HTML": 8787,
      "JavaScript": 3655,
      "Shell": 183,
      "Gherkin": 66
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-26T07:51:15.959976"
  }
}