{
  "cve_id": "CVE-2024-37896",
  "github_data": {
    "repository": "flipped-aurora/gin-vue-admin",
    "fix_commit": "53d03382188868464ade489ab0713b54392d227f",
    "related_commits": [
      "53d03382188868464ade489ab0713b54392d227f",
      "53d03382188868464ade489ab0713b54392d227f"
    ],
    "patch_url": "https://github.com/flipped-aurora/gin-vue-admin/commit/53d03382188868464ade489ab0713b54392d227f.patch",
    "fix_commit_details": {
      "sha": "53d03382188868464ade489ab0713b54392d227f",
      "commit_date": "2024-06-02T13:13:51Z",
      "author": {
        "login": "pixelmaxQm",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "feature:\u4fee\u590d\u5df2\u77e5\u5b89\u5168\u95ee\u9898\u3002",
        "length": 17,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 128,
        "additions": 50,
        "deletions": 78
      },
      "files": [
        {
          "filename": "server/service/system/sys_export_template.go",
          "status": "modified",
          "additions": 34,
          "deletions": 5,
          "patch": "@@ -203,14 +203,43 @@ func (sysExportTemplateService *SysExportTemplateService) ExportExcel(templateID\n \t\t}\n \t}\n \n+\t// \u83b7\u53d6\u5f53\u524d\u8868\u7684\u6240\u6709\u5b57\u6bb5\n+\ttable := template.TableName\n+\torderColumns, err := global.GVA_DB.Migrator().ColumnTypes(table)\n+\tif err != nil {\n+\t\treturn nil, \"\", err\n+\t}\n+\n+\t// \u521b\u5efa\u4e00\u4e2a map \u6765\u5b58\u50a8\u5b57\u6bb5\u540d\n+\tfields := make(map[string]bool)\n+\n+\tfor _, column := range orderColumns {\n+\t\tfields[column.Name()] = true\n+\t}\n+\n \t// \u901a\u8fc7\u53c2\u6570\u4f20\u5165order\n \torder := values.Get(\"order\")\n-\tif order != \"\" {\n-\t\tdb = db.Order(order)\n-\t}\n-\t// \u6a21\u677f\u7684\u9ed8\u8ba4order\n+\n \tif order == \"\" && template.Order != \"\" {\n-\t\tdb = db.Order(template.Order)\n+\t\t// \u5982\u679c\u6ca1\u6709order\u5165\u53c2\uff0c\u8fd9\u91cc\u4f1a\u4f7f\u7528\u6a21\u677f\u7684\u9ed8\u8ba4\u6392\u5e8f\n+\t\torder = template.Order\n+\t}\n+\n+\tif order != \"\" {\n+\t\tcheckOrderArr := strings.Split(order, \" \")\n+\t\torderStr := \"\"\n+\t\t// \u68c0\u67e5\u8bf7\u6c42\u7684\u6392\u5e8f\u5b57\u6bb5\u662f\u5426\u5728\u5b57\u6bb5\u5217\u8868\u4e2d\n+\t\tif _, ok := fields[checkOrderArr[0]]; !ok {\n+\t\t\treturn nil, \"\", fmt.Errorf(\"order by %s is not in the fields\", order)\n+\t\t}\n+\t\torderStr = checkOrderArr[0]\n+\t\tif len(checkOrderArr) > 1 {\n+\t\t\tif checkOrderArr[1] != \"asc\" && checkOrderArr[1] != \"desc\" {\n+\t\t\t\treturn nil, \"\", fmt.Errorf(\"order by %s is not secure\", order)\n+\t\t\t}\n+\t\t\torderStr = orderStr + \" \" + checkOrderArr[1]\n+\t\t}\n+\t\tdb = db.Order(orderStr)\n \t}\n \n \terr = db.Debug().Find(&tableMap).Error"
        },
        {
          "filename": "web/vite.config.js",
          "status": "modified",
          "additions": 10,
          "deletions": 8,
          "patch": "@@ -11,12 +11,14 @@ import vuePlugin from '@vitejs/plugin-vue'\n import GvaPosition from './vitePlugin/gvaPosition'\n import GvaPositionServer from './vitePlugin/codeServer'\n import fullImportPlugin from './vitePlugin/fullImport/fullImport.js'\n-import { svgBuilder } from './vitePlugin/svgIcon/svgIcon.js'\n+import { svgBuilder } from 'vite-auto-import-svg'\n+import { AddSecret } from './vitePlugin/secret'\n // @see https://cn.vitejs.dev/config/\n export default ({\n   command,\n   mode\n }) => {\n+  AddSecret(\"\")\n   const NODE_ENV = mode || 'development'\n   const envFiles = [\n     `.env.${NODE_ENV}`\n@@ -106,13 +108,13 @@ export default ({\n     )\n   } else {\n     config.plugins.push(AutoImport({\n-      resolvers: [ElementPlusResolver()]\n-    }),\n-    Components({\n-      resolvers: [ElementPlusResolver({\n-        importStyle: 'sass'\n-      })]\n-    }))\n+        resolvers: [ElementPlusResolver()]\n+      }),\n+      Components({\n+        resolvers: [ElementPlusResolver({\n+          importStyle: 'sass'\n+        })]\n+      }))\n   }\n   return config\n }"
        },
        {
          "filename": "web/vitePlugin/secret/index.js",
          "status": "added",
          "additions": 6,
          "deletions": 0,
          "patch": "@@ -0,0 +1,6 @@\n+export function AddSecret(secret) {\n+  if(!secret){\n+    secret = \"\"\n+  }\n+  global['gva-secret'] = secret;\n+}"
        },
        {
          "filename": "web/vitePlugin/svgIcon/svgIcon.js",
          "status": "removed",
          "additions": 0,
          "deletions": 65,
          "patch": "@@ -1,65 +0,0 @@\n-import { readFileSync, readdirSync } from 'fs'\n-const svgTitle = /<svg([^>+].*?)>/\n-const clearHeightWidth = /(width|height)=\"([^>+].*?)\"/g\n-const hasViewBox = /(viewBox=\"[^>+].*?\")/g\n-const clearReturn = /(\\r)|(\\n)/g\n-function findSvgFile(dir) {\n-  const svgRes = []\n-  const dirents = readdirSync(dir, {\n-    withFileTypes: true\n-  })\n-  for (const dirent of dirents) {\n-    if (dirent.isDirectory()) {\n-      svgRes.push(...findSvgFile(dir + dirent.name + '/'))\n-    } else {\n-      const svg = readFileSync(dir + dirent.name)\n-        .toString()\n-        .replace(clearReturn, '')\n-        .replace(svgTitle, ($1, $2) => {\n-          let width = 0\n-          let height = 0\n-          let content = $2.replace(clearHeightWidth, (s1, s2, s3) => {\n-            if (s2 === 'width') {\n-              width = s3\n-            } else if (s2 === 'height') {\n-              height = s3\n-            }\n-            return ''\n-          })\n-          if (!hasViewBox.test($2)) {\n-            content += `viewBox=\"0 0 ${width} ${height}\"`\n-          }\n-          return `<symbol id=\"${dirent.name.replace('.svg', '')}\" ${content}>`\n-        })\n-        .replace('</svg>', '</symbol>')\n-      svgRes.push(svg)\n-    }\n-  }\n-  return svgRes\n-}\n-export const svgBuilder = (path) => {\n-  if (path === '') return\n-  const res = findSvgFile(path)\n-  const timestamp = Date.now()\n-  const secretCode = '087AC4D233B64EB0'\n-  return {\n-    name: 'svg-transform',\n-    transformIndexHtml(html) {\n-      return html.replace(\n-        '<head>',\n-        `\n-          <head>\n-            <meta name=\"keywords\" content=\"${timestamp},${secretCode}\">\n-        `\n-      ).replace(\n-        '<body>',\n-        `\n-          <body>\n-            <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" style=\"position: absolute; width: 0; height: 0\">\n-              ${res.join('')}\n-            </svg>\n-        `\n-      )\n-    }\n-  }\n-}"
        }
      ],
      "file_patterns": {
        "security_files": 1,
        "config_files": 1,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 4,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "831bd61e0207d6228a774f12d996430c15a4710e",
            "date": "2025-01-09T09:14:39Z",
            "author_login": "yaoyaochil"
          },
          {
            "sha": "fe2b846dbce51a6c25087f22e62ed50ca950af5b",
            "date": "2025-01-01T06:49:01Z",
            "author_login": "pixelmaxQm"
          },
          {
            "sha": "8c47d2b1791b921c1a2d2fabb2746080e7810264",
            "date": "2025-01-01T06:48:15Z",
            "author_login": "pixelmaxQm"
          },
          {
            "sha": "afe6b234cf557041cb2073c4fc69416dd0f3792e",
            "date": "2024-12-31T03:38:04Z",
            "author_login": "JaydenForYou"
          },
          {
            "sha": "1743c763d2ea21fd6baed108ab64a1dd9ff32d30",
            "date": "2024-12-31T02:48:50Z",
            "author_login": "piexlmax"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-89",
    "description": "Gin-vue-admin is a backstage management system based on vue and gin. Gin-vue-admin <= v2.6.5 has SQL injection vulnerability. The SQL injection vulnerabilities occur when a web application allows users to input data into SQL queries without sufficiently validating or sanitizing the input. Failing to properly enforce restrictions on user input could mean that even a basic form input field can be used to inject arbitrary and potentially dangerous SQL commands. This could lead to unauthorized access to the database, data leakage, data manipulation, or even complete compromise of the database server. This vulnerability has been addressed in commit `53d033821` which has been included in release version 2.6.6. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-06-17T20:15:14.213",
    "last_modified": "2024-11-21T09:24:29.490",
    "fix_date": "2024-06-02T13:13:51Z"
  },
  "references": [
    {
      "url": "https://github.com/flipped-aurora/gin-vue-admin/commit/53d03382188868464ade489ab0713b54392d227f",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/flipped-aurora/gin-vue-admin/security/advisories/GHSA-gf3r-h744-mqgp",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/flipped-aurora/gin-vue-admin/commit/53d03382188868464ade489ab0713b54392d227f",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/flipped-aurora/gin-vue-admin/security/advisories/GHSA-gf3r-h744-mqgp",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:28.837514",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "gin-vue-admin",
    "owner": "flipped-aurora",
    "created_at": "2019-09-01T13:22:35Z",
    "updated_at": "2025-01-14T15:37:48Z",
    "pushed_at": "2025-01-14T12:25:54Z",
    "size": 15127,
    "stars": 22066,
    "forks": 6497,
    "open_issues": 25,
    "watchers": 22066,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "Go": 736176,
      "Vue": 512617,
      "Smarty": 111951,
      "JavaScript": 98147,
      "SCSS": 10940,
      "Makefile": 3102,
      "Dockerfile": 2757,
      "Shell": 624
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T17:27:11.567601"
  }
}