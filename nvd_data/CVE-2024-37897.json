{
  "cve_id": "CVE-2024-37897",
  "github_data": {
    "repository": "drakkan/sftpgo",
    "fix_commit": "1f8ac8bfe16100b0484d6c91e1e8361687324423",
    "related_commits": [
      "1f8ac8bfe16100b0484d6c91e1e8361687324423",
      "1f8ac8bfe16100b0484d6c91e1e8361687324423"
    ],
    "patch_url": "https://github.com/drakkan/sftpgo/commit/1f8ac8bfe16100b0484d6c91e1e8361687324423.patch",
    "fix_commit_details": {
      "sha": "1f8ac8bfe16100b0484d6c91e1e8361687324423",
      "commit_date": "2024-06-07T16:19:05Z",
      "author": {
        "login": "drakkan",
        "type": "User",
        "stats": {
          "total_commits": 1925,
          "average_weekly_commits": 6.684027777777778,
          "total_additions": 553756,
          "total_deletions": 339637,
          "weeks_active": 272
        }
      },
      "commit_message": {
        "title": "REST API: fix token invalidation after password change",
        "length": 110,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 74,
        "additions": 56,
        "deletions": 18
      },
      "files": [
        {
          "filename": "go.mod",
          "status": "modified",
          "additions": 5,
          "deletions": 5,
          "patch": "@@ -4,7 +4,7 @@ go 1.22.2\n \n require (\n \tcloud.google.com/go/storage v1.41.0\n-\tgithub.com/Azure/azure-sdk-for-go/sdk/azcore v1.11.1\n+\tgithub.com/Azure/azure-sdk-for-go/sdk/azcore v1.12.0\n \tgithub.com/Azure/azure-sdk-for-go/sdk/storage/azblob v1.3.2\n \tgithub.com/GehirnInc/crypt v0.0.0-20230320061759-8cc1b52080c5\n \tgithub.com/alexedwards/argon2id v1.0.0\n@@ -13,9 +13,9 @@ require (\n \tgithub.com/aws/aws-sdk-go-v2/config v1.27.17\n \tgithub.com/aws/aws-sdk-go-v2/credentials v1.17.17\n \tgithub.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.16.4\n-\tgithub.com/aws/aws-sdk-go-v2/feature/s3/manager v1.16.22\n+\tgithub.com/aws/aws-sdk-go-v2/feature/s3/manager v1.16.23\n \tgithub.com/aws/aws-sdk-go-v2/service/marketplacemetering v1.21.9\n-\tgithub.com/aws/aws-sdk-go-v2/service/s3 v1.54.4\n+\tgithub.com/aws/aws-sdk-go-v2/service/s3 v1.55.0\n \tgithub.com/aws/aws-sdk-go-v2/service/secretsmanager v1.29.2\n \tgithub.com/aws/aws-sdk-go-v2/service/sts v1.28.11\n \tgithub.com/bmatcuk/doublestar/v4 v4.6.1\n@@ -84,7 +84,7 @@ require (\n \tcloud.google.com/go/compute/metadata v0.3.0 // indirect\n \tcloud.google.com/go/iam v1.1.8 // indirect\n \tfilippo.io/edwards25519 v1.1.0 // indirect\n-\tgithub.com/Azure/azure-sdk-for-go/sdk/internal v1.8.0 // indirect\n+\tgithub.com/Azure/azure-sdk-for-go/sdk/internal v1.9.0 // indirect\n \tgithub.com/ajg/form v1.5.1 // indirect\n \tgithub.com/aws/aws-sdk-go-v2/aws/protocol/eventstream v1.6.2 // indirect\n \tgithub.com/aws/aws-sdk-go-v2/internal/configsources v1.3.8 // indirect\n@@ -126,7 +126,7 @@ require (\n \tgithub.com/hashicorp/yamux v0.1.1 // indirect\n \tgithub.com/inconshreveable/mousetrap v1.1.0 // indirect\n \tgithub.com/jackc/pgpassfile v1.0.0 // indirect\n-\tgithub.com/jackc/pgservicefile v0.0.0-20231201235250-de7065d80cb9 // indirect\n+\tgithub.com/jackc/pgservicefile v0.0.0-20240606120523-5a60cdf6a761 // indirect\n \tgithub.com/jackc/puddle/v2 v2.2.1 // indirect\n \tgithub.com/jmespath/go-jmespath v0.4.0 // indirect\n \tgithub.com/kr/fs v0.1.0 // indirect"
        },
        {
          "filename": "go.sum",
          "status": "modified",
          "additions": 10,
          "deletions": 10,
          "patch": "@@ -18,12 +18,12 @@ cloud.google.com/go/storage v1.41.0/go.mod h1:J1WCa/Z2FcgdEDuPUY8DxT5I+d9mFKsCep\n filippo.io/edwards25519 v1.1.0 h1:FNf4tywRC1HmFuKW5xopWpigGjJKiJSV0Cqo0cJWDaA=\n filippo.io/edwards25519 v1.1.0/go.mod h1:BxyFTGdWcka3PhytdK4V28tE5sGfRvvvRV7EaN4VDT4=\n github.com/Azure/azure-sdk-for-go v68.0.0+incompatible h1:fcYLmCpyNYRnvJbPerq7U0hS+6+I79yEDJBqVNcqUzU=\n-github.com/Azure/azure-sdk-for-go/sdk/azcore v1.11.1 h1:E+OJmp2tPvt1W+amx48v1eqbjDYsgN+RzP4q16yV5eM=\n-github.com/Azure/azure-sdk-for-go/sdk/azcore v1.11.1/go.mod h1:a6xsAQUZg+VsS3TJ05SRp524Hs4pZ/AeFSr5ENf0Yjo=\n+github.com/Azure/azure-sdk-for-go/sdk/azcore v1.12.0 h1:1nGuui+4POelzDwI7RG56yfQJHCnKvwfMoU7VsEp+Zg=\n+github.com/Azure/azure-sdk-for-go/sdk/azcore v1.12.0/go.mod h1:99EvauvlcJ1U06amZiksfYz/3aFGyIhWGHVyiZXtBAI=\n github.com/Azure/azure-sdk-for-go/sdk/azidentity v1.5.2 h1:FDif4R1+UUR+00q6wquyX90K7A8dN+R5E8GEadoP7sU=\n github.com/Azure/azure-sdk-for-go/sdk/azidentity v1.5.2/go.mod h1:aiYBYui4BJ/BJCAIKs92XiPyQfTaBWqvHujDwKb6CBU=\n-github.com/Azure/azure-sdk-for-go/sdk/internal v1.8.0 h1:jBQA3cKT4L2rWMpgE7Yt3Hwh2aUj8KXjIGLxjHeYNNo=\n-github.com/Azure/azure-sdk-for-go/sdk/internal v1.8.0/go.mod h1:4OG6tQ9EOP/MT0NMjDlRzWoVFxfu9rN9B2X+tlSVktg=\n+github.com/Azure/azure-sdk-for-go/sdk/internal v1.9.0 h1:H+U3Gk9zY56G3u872L82bk4thcsy2Gghb9ExT4Zvm1o=\n+github.com/Azure/azure-sdk-for-go/sdk/internal v1.9.0/go.mod h1:mgrmMSgaLp9hmax62XQTd0N4aAqSE5E0DulSpVYK7vc=\n github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/storage/armstorage v1.5.0 h1:AifHbc4mg0x9zW52WOpKbsHaDKuRhlI7TVl47thgQ70=\n github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/storage/armstorage v1.5.0/go.mod h1:T5RfihdXtBDxt1Ch2wobif3TvzTdumDy29kahv6AV9A=\n github.com/Azure/azure-sdk-for-go/sdk/storage/azblob v1.3.2 h1:YUUxeiOWgdAQE3pXt2H7QXzZs0q8UBjgRbl56qo8GYM=\n@@ -49,8 +49,8 @@ github.com/aws/aws-sdk-go-v2/credentials v1.17.17 h1:b3Dk9uxQByS9sc6r0sc2jmxsJKO\n github.com/aws/aws-sdk-go-v2/credentials v1.17.17/go.mod h1:e4khg9iY08LnFK/HXQDWMf9GDaiMari7jWPnXvKAuBU=\n github.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.16.4 h1:0cSfTYYL9qiRcdi4Dvz+8s3JUgNR2qvbgZkXcwPEEEk=\n github.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.16.4/go.mod h1:Wjn5O9eS7uSi7vlPKt/v0MLTncANn9EMmoDvnzJli6o=\n-github.com/aws/aws-sdk-go-v2/feature/s3/manager v1.16.22 h1:1CO+m67soQzw6hfkfSS0hQzS/o05bCswr+gQfBfQgLQ=\n-github.com/aws/aws-sdk-go-v2/feature/s3/manager v1.16.22/go.mod h1:XUetvjVEuGFl1ABsTZ/5tufz0WXT+MpR9qcMnEJm0dw=\n+github.com/aws/aws-sdk-go-v2/feature/s3/manager v1.16.23 h1:g6IHovcexw51hcP0hxsT7Mr3/PG76hZvoodm9tuKuUc=\n+github.com/aws/aws-sdk-go-v2/feature/s3/manager v1.16.23/go.mod h1:8KSZ0CibxgOaPk28CFL4DGBdGrscHJr8FuxB+jnJBaM=\n github.com/aws/aws-sdk-go-v2/internal/configsources v1.3.8 h1:RnLB7p6aaFMRfyQkD6ckxR7myCC9SABIqSz4czYUUbU=\n github.com/aws/aws-sdk-go-v2/internal/configsources v1.3.8/go.mod h1:XH7dQJd+56wEbP1I4e4Duo+QhSMxNArE8VP7NuUOTeM=\n github.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.6.8 h1:jzApk2f58L9yW9q1GEab3BMMFWUkkiZhyrRUtbwUbKU=\n@@ -69,8 +69,8 @@ github.com/aws/aws-sdk-go-v2/service/internal/s3shared v1.17.8 h1:iQNXVs1vtaq+y9\n github.com/aws/aws-sdk-go-v2/service/internal/s3shared v1.17.8/go.mod h1:yUQPRlWqGG0lfNsmjbRWKVwgilfBtZTOFSLEYALlAig=\n github.com/aws/aws-sdk-go-v2/service/marketplacemetering v1.21.9 h1:1Y6NAaK/9Wjxb4VAlUOMUQuTrOKNXfLrhaSzNdLKkwo=\n github.com/aws/aws-sdk-go-v2/service/marketplacemetering v1.21.9/go.mod h1:KpgKQ+ZF5kssRykR4yxANtddzYFatCqlv8yHddRHne4=\n-github.com/aws/aws-sdk-go-v2/service/s3 v1.54.4 h1:4p9SCdZBO0PdEXLTF2fcQuxOEkEiqPQpK824cP2VKRo=\n-github.com/aws/aws-sdk-go-v2/service/s3 v1.54.4/go.mod h1:oSkRFuHVWmUY4Ssk16ErGzBqvYEbvORJFzFXzWhTB2s=\n+github.com/aws/aws-sdk-go-v2/service/s3 v1.55.0 h1:6kq0Xql9qiwNGL/Go87ZqR4otg9jnKs71OfWCVbPxLM=\n+github.com/aws/aws-sdk-go-v2/service/s3 v1.55.0/go.mod h1:oSkRFuHVWmUY4Ssk16ErGzBqvYEbvORJFzFXzWhTB2s=\n github.com/aws/aws-sdk-go-v2/service/secretsmanager v1.29.2 h1:vnONgeMo5TuAtGjVNjieDyaI6tzMDNm0TuBgkKzqkX4=\n github.com/aws/aws-sdk-go-v2/service/secretsmanager v1.29.2/go.mod h1:OR529kEc7Ty9nsqvMuDBBHq5AZVih/MYd5/G9TcL5bQ=\n github.com/aws/aws-sdk-go-v2/service/sso v1.20.10 h1:ItKVmFwbyb/ZnCWf+nu3XBVmUirpO9eGEQd7urnBA0s=\n@@ -231,8 +231,8 @@ github.com/inconshreveable/mousetrap v1.1.0 h1:wN+x4NVGpMsO7ErUn/mUI3vEoE6Jt13X2\n github.com/inconshreveable/mousetrap v1.1.0/go.mod h1:vpF70FUmC8bwa3OWnCshd2FqLfsEA9PFc4w1p2J65bw=\n github.com/jackc/pgpassfile v1.0.0 h1:/6Hmqy13Ss2zCq62VdNG8tM1wchn8zjSGOBJ6icpsIM=\n github.com/jackc/pgpassfile v1.0.0/go.mod h1:CEx0iS5ambNFdcRtxPj5JhEz+xB6uRky5eyVu/W2HEg=\n-github.com/jackc/pgservicefile v0.0.0-20231201235250-de7065d80cb9 h1:L0QtFUgDarD7Fpv9jeVMgy/+Ec0mtnmYuImjTz6dtDA=\n-github.com/jackc/pgservicefile v0.0.0-20231201235250-de7065d80cb9/go.mod h1:5TJZWKEWniPve33vlWYSoGYefn3gLQRzjfDlhSJ9ZKM=\n+github.com/jackc/pgservicefile v0.0.0-20240606120523-5a60cdf6a761 h1:iCEnooe7UlwOQYpKFhBabPMi4aNAfoODPEFNiAnClxo=\n+github.com/jackc/pgservicefile v0.0.0-20240606120523-5a60cdf6a761/go.mod h1:5TJZWKEWniPve33vlWYSoGYefn3gLQRzjfDlhSJ9ZKM=\n github.com/jackc/pgx/v5 v5.6.0 h1:SWJzexBzPL5jb0GEsrPMLIsi/3jOo7RHlzTjcAeDrPY=\n github.com/jackc/pgx/v5 v5.6.0/go.mod h1:DNZ/vlrUnhWCoFGxHAG8U2ljioxukquj7utPDgtQdTw=\n github.com/jackc/puddle/v2 v2.2.1 h1:RhxXJtFG022u4ibrCSMSiu5aOq1i77R3OHKNJj77OAk="
        },
        {
          "filename": "internal/httpd/api_admin.go",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -297,6 +297,7 @@ func changeAdminPassword(w http.ResponseWriter, r *http.Request) {\n \t\tsendAPIResponse(w, r, err, \"\", getRespStatus(err))\n \t\treturn\n \t}\n+\tinvalidateToken(r)\n \tsendAPIResponse(w, r, err, \"Password updated\", http.StatusOK)\n }\n "
        },
        {
          "filename": "internal/httpd/api_http_user.go",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -531,6 +531,7 @@ func changeUserPassword(w http.ResponseWriter, r *http.Request) {\n \t\tsendAPIResponse(w, r, err, \"\", getRespStatus(err))\n \t\treturn\n \t}\n+\tinvalidateToken(r)\n \tsendAPIResponse(w, r, err, \"Password updated\", http.StatusOK)\n }\n "
        },
        {
          "filename": "internal/httpd/httpd.go",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -664,6 +664,10 @@ func (b *Binding) showClientLoginURL() bool {\n \treturn true\n }\n \n+func (b *Binding) isMutualTLSEnabled() bool {\n+\treturn b.ClientAuthType == 1\n+}\n+\n type defenderStatus struct {\n \tIsActive bool `json:\"is_active\"`\n }"
        },
        {
          "filename": "internal/httpd/httpd_test.go",
          "status": "modified",
          "additions": 34,
          "deletions": 2,
          "patch": "@@ -11372,11 +11372,17 @@ func TestWebAPIChangeUserPwdMock(t *testing.T) {\n \tassert.NoError(t, err)\n \ttoken, err := getJWTAPIUserTokenFromTestServer(defaultUsername, defaultPassword)\n \tassert.NoError(t, err)\n-\t// invalid json\n-\treq, err := http.NewRequest(http.MethodPut, userPwdPath, bytes.NewBuffer([]byte(\"{\")))\n+\n+\treq, err := http.NewRequest(http.MethodGet, userProfilePath, nil)\n \tassert.NoError(t, err)\n \tsetBearerForReq(req, token)\n \trr := executeRequest(req)\n+\tcheckResponseCode(t, http.StatusOK, rr)\n+\t// invalid json\n+\treq, err = http.NewRequest(http.MethodPut, userPwdPath, bytes.NewBuffer([]byte(\"{\")))\n+\tassert.NoError(t, err)\n+\tsetBearerForReq(req, token)\n+\trr = executeRequest(req)\n \tcheckResponseCode(t, http.StatusBadRequest, rr)\n \n \tpwd := make(map[string]string)\n@@ -11399,6 +11405,13 @@ func TestWebAPIChangeUserPwdMock(t *testing.T) {\n \tsetBearerForReq(req, token)\n \trr = executeRequest(req)\n \tcheckResponseCode(t, http.StatusOK, rr)\n+\n+\treq, err = http.NewRequest(http.MethodGet, userProfilePath, nil)\n+\tassert.NoError(t, err)\n+\tsetBearerForReq(req, token)\n+\trr = executeRequest(req)\n+\tcheckResponseCode(t, http.StatusUnauthorized, rr)\n+\n \t_, err = getJWTAPIUserTokenFromTestServer(defaultUsername, defaultPassword)\n \tassert.Error(t, err)\n \ttoken, err = getJWTAPIUserTokenFromTestServer(defaultUsername, altAdminPassword)\n@@ -11548,6 +11561,12 @@ func TestChangeAdminPwdMock(t *testing.T) {\n \tsetBearerForReq(req, altToken)\n \trr = executeRequest(req)\n \tcheckResponseCode(t, http.StatusOK, rr)\n+\t// try using the old token\n+\treq, err = http.NewRequest(http.MethodGet, versionPath, nil)\n+\tassert.NoError(t, err)\n+\tsetBearerForReq(req, altToken)\n+\trr = executeRequest(req)\n+\tcheckResponseCode(t, http.StatusUnauthorized, rr)\n \n \t_, err = getJWTAPITokenFromTestServer(altAdminUsername, altAdminPassword)\n \tassert.Error(t, err)\n@@ -13599,6 +13618,13 @@ func TestWebClientChangePwd(t *testing.T) {\n \tcheckResponseCode(t, http.StatusFound, rr)\n \tassert.Equal(t, webClientLoginPath, rr.Header().Get(\"Location\"))\n \n+\treq, err = http.NewRequest(http.MethodGet, webClientPingPath, nil)\n+\tassert.NoError(t, err)\n+\treq.RemoteAddr = defaultRemoteAddr\n+\tsetJWTCookieForReq(req, webToken)\n+\trr = executeRequest(req)\n+\tcheckResponseCode(t, http.StatusFound, rr)\n+\n \t_, err = getJWTWebClientTokenFromTestServer(defaultUsername, defaultPassword)\n \tassert.Error(t, err)\n \t_, err = getJWTWebClientTokenFromTestServer(defaultUsername+\"1\", defaultPassword+\"1\")\n@@ -18850,6 +18876,12 @@ func TestWebAdminLoginMock(t *testing.T) {\n \tcookie := rr.Header().Get(\"Cookie\")\n \tassert.Empty(t, cookie)\n \n+\treq, _ = http.NewRequest(http.MethodGet, webStatusPath, nil)\n+\treq.RemoteAddr = defaultRemoteAddr\n+\tsetJWTCookieForReq(req, webToken)\n+\trr = executeRequest(req)\n+\tcheckResponseCode(t, http.StatusFound, rr)\n+\n \treq, _ = http.NewRequest(http.MethodGet, logoutPath, nil)\n \tsetBearerForReq(req, apiToken)\n \trr = executeRequest(req)"
        },
        {
          "filename": "internal/httpd/server.go",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -120,7 +120,7 @@ func (s *httpdServer) listenAndServe() error {\n \t\thttpServer.TLSConfig = config\n \t\tlogger.Debug(logSender, \"\", \"configured TLS cipher suites for binding %q: %v, certID: %v\",\n \t\t\ts.binding.GetAddress(), httpServer.TLSConfig.CipherSuites, certID)\n-\t\tif s.binding.ClientAuthType == 1 {\n+\t\tif s.binding.isMutualTLSEnabled() {\n \t\t\thttpServer.TLSConfig.ClientCAs = certMgr.GetRootCAs()\n \t\t\thttpServer.TLSConfig.ClientAuth = tls.RequireAndVerifyClientCert\n \t\t\thttpServer.TLSConfig.VerifyConnection = s.verifyTLSConnection"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "a759789454e470f6f9760939360488c8f8c26ad9",
            "date": "2025-01-11T10:48:07Z",
            "author_login": "drakkan"
          },
          {
            "sha": "da68cf3e9d43ee0d7b56e7044f1bbc553417cc8a",
            "date": "2025-01-11T10:42:57Z",
            "author_login": "drakkan"
          },
          {
            "sha": "5febcdca435c46797084b392cb3ca8e7fc674e47",
            "date": "2025-01-11T10:29:35Z",
            "author_login": "drakkan"
          },
          {
            "sha": "b2e99350492962df182dd695ff1896aae6dd824f",
            "date": "2025-01-11T10:24:35Z",
            "author_login": "drakkan"
          },
          {
            "sha": "1f4cb7077a147aa63cf9485d3e0a4f6aa0ed7caf",
            "date": "2025-01-06T08:25:41Z",
            "author_login": "drakkan"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.4,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:N",
    "cwe_id": "CWE-287",
    "description": "SFTPGo is a full-featured and highly configurable SFTP, HTTP/S, FTP/S and WebDAV server - S3, Google Cloud Storage, Azure Blob. SFTPGo WebAdmin and WebClient support password reset. This feature is disabled in the default configuration.\nIn SFTPGo versions prior to v2.6.1, if the feature is enabled, even users with access restrictions (e.g. expired) can reset their password and log in. Users are advised to upgrade to version 2.6.1. Users unable to upgrade may keep the password reset feature disabled or set a blank email address for users and admins with access restrictions so they cannot receive the email with the reset code and exploit the vulnerability.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-06-20T18:15:13.023",
    "last_modified": "2024-11-21T09:24:29.623",
    "fix_date": "2024-06-07T16:19:05Z"
  },
  "references": [
    {
      "url": "https://github.com/drakkan/sftpgo/commit/1f8ac8bfe16100b0484d6c91e1e8361687324423",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/drakkan/sftpgo/security/advisories/GHSA-hw5f-6wvv-xcrh",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/drakkan/sftpgo/commit/1f8ac8bfe16100b0484d6c91e1e8361687324423",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/drakkan/sftpgo/security/advisories/GHSA-hw5f-6wvv-xcrh",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:28.849847",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "sftpgo",
    "owner": "drakkan",
    "created_at": "2019-07-20T10:18:31Z",
    "updated_at": "2025-01-14T12:39:44Z",
    "pushed_at": "2025-01-13T05:15:22Z",
    "size": 36199,
    "stars": 9795,
    "forks": 761,
    "open_issues": 67,
    "watchers": 9795,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "Go": 5935794,
      "HTML": 998235,
      "Shell": 8480,
      "Inno Setup": 5460,
      "Dockerfile": 2719,
      "JavaScript": 2387,
      "PowerShell": 1982,
      "CSS": 202,
      "Makefile": 157
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "agpl-3.0"
    },
    "collected_at": "2025-01-14T16:10:35.564321"
  }
}