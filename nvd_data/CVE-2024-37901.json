{
  "cve_id": "CVE-2024-37901",
  "github_data": {
    "repository": "xwiki/xwiki-platform",
    "fix_commit": "0b135760514fef73db748986a3311f3edd4a553b",
    "related_commits": [
      "0b135760514fef73db748986a3311f3edd4a553b",
      "742cd4591642be4cdcaf68325f17540e0934e64e",
      "9ce3e0319869b6d8131fc4e0909736f7041566a4",
      "bbde8a4f564e3c28839440076334a9093e2b4834"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "0b135760514fef73db748986a3311f3edd4a553b",
      "commit_date": "2023-12-18T08:53:18Z",
      "author": {
        "login": "pjeanjean",
        "type": "User",
        "stats": {
          "total_commits": 36,
          "average_weekly_commits": 0.03765690376569038,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 23
        }
      },
      "commit_message": {
        "title": "XWIKI-21699: Add new API to help evaluate xobjects",
        "length": 167,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 736,
        "additions": 726,
        "deletions": 10
      },
      "files": [
        {
          "filename": "xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/api/Object.java",
          "status": "modified",
          "additions": 19,
          "deletions": 0,
          "patch": "@@ -19,7 +19,12 @@\n  */\n package com.xpn.xwiki.api;\n \n+import java.util.Map;\n+\n+import org.xwiki.evaluation.ObjectEvaluator;\n+import org.xwiki.evaluation.ObjectEvaluatorException;\n import org.xwiki.model.reference.ObjectPropertyReference;\n+import org.xwiki.stability.Unstable;\n \n import com.xpn.xwiki.XWikiContext;\n import com.xpn.xwiki.XWikiException;\n@@ -159,4 +164,18 @@ public ObjectPropertyReference getPropertyReference(String propertyName)\n     {\n         return new ObjectPropertyReference(propertyName, getReference());\n     }\n+\n+    /**\n+     * Evaluates the properties of an object using a matching implementation of {@link ObjectEvaluator}.\n+     *\n+     * @return a Map storing the evaluated properties\n+     * @since 14.10.21\n+     * @since 15.5.5\n+     * @since 15.10.2\n+     */\n+    @Unstable\n+    public Map<String, String> evaluate() throws ObjectEvaluatorException\n+    {\n+        return getBaseObject().evaluate();\n+    }\n }"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/objects/BaseObject.java",
          "status": "modified",
          "additions": 20,
          "deletions": 0,
          "patch": "@@ -22,15 +22,19 @@\n import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.List;\n+import java.util.Map;\n import java.util.UUID;\n \n import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.dom4j.Element;\n+import org.xwiki.evaluation.ObjectEvaluator;\n+import org.xwiki.evaluation.ObjectEvaluatorException;\n import org.xwiki.model.EntityType;\n import org.xwiki.model.reference.DocumentReference;\n import org.xwiki.model.reference.DocumentReferenceResolver;\n import org.xwiki.model.reference.EntityReference;\n import org.xwiki.model.reference.SpaceReference;\n+import org.xwiki.stability.Unstable;\n \n import com.xpn.xwiki.XWikiContext;\n import com.xpn.xwiki.XWikiException;\n@@ -435,4 +439,20 @@ protected void mergeField(PropertyInterface currentElement, ElementInterface pre\n \n         super.mergeField(currentElement, previousElement, newElement, configuration, context, mergeResult);\n     }\n+\n+    /**\n+     * Evaluates the properties of an object using a matching implementation of {@link ObjectEvaluator}.\n+     *\n+     * @return a Map storing the evaluated properties\n+     * @throws ObjectEvaluatorException if the evaluation fails\n+     * @since 14.10.21\n+     * @since 15.5.5\n+     * @since 15.10.2\n+     */\n+    @Unstable\n+    public Map<String, String> evaluate() throws ObjectEvaluatorException\n+    {\n+        ObjectEvaluator objectEvaluator = Utils.getComponent(ObjectEvaluator.class);\n+        return objectEvaluator.evaluate(this);\n+    }\n }"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-oldcore/src/main/java/org/xwiki/evaluation/ObjectEvaluator.java",
          "status": "added",
          "additions": 55,
          "deletions": 0,
          "patch": "@@ -0,0 +1,55 @@\n+/*\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU Lesser General Public License as\n+ * published by the Free Software Foundation; either version 2.1 of\n+ * the License, or (at your option) any later version.\n+ *\n+ * This software is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this software; if not, write to the Free\n+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n+ */\n+package org.xwiki.evaluation;\n+\n+import java.util.Map;\n+\n+import org.xwiki.component.annotation.Role;\n+import org.xwiki.evaluation.internal.DefaultObjectEvaluator;\n+import org.xwiki.stability.Unstable;\n+\n+import com.xpn.xwiki.objects.BaseObject;\n+\n+/**\n+ * Evaluates the properties of an object and returns a Map that stores the evaluation results, in which keys are the\n+ * field names of the properties, and values their evaluated content.\n+ * Implement an instance with a hint corresponding to the class name of the object you want to evaluate and use\n+ * {@link DefaultObjectEvaluator} that will proxy the calls to the right implementation.\n+ * This ensures that the properties being evaluated are only the ones referenced explicitly by the provided\n+ * implementation, in order to avoid accidental evaluation of properties that should only be used in specific contexts.\n+ *\n+ * @version $Id$\n+ * @since 14.10.21\n+ * @since 15.5.5\n+ * @since 15.10.2\n+ */\n+@Unstable\n+@Role\n+public interface ObjectEvaluator\n+{\n+    /**\n+     * Evaluates the properties of an object.\n+     *\n+     * @param object the object to evaluate\n+     * @return a Map storing the evaluated properties\n+     * @throws ObjectEvaluatorException if the evaluation fails\n+     */\n+    Map<String, String> evaluate(BaseObject object) throws ObjectEvaluatorException;\n+}"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-oldcore/src/main/java/org/xwiki/evaluation/ObjectEvaluatorException.java",
          "status": "added",
          "additions": 55,
          "deletions": 0,
          "patch": "@@ -0,0 +1,55 @@\n+/*\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU Lesser General Public License as\n+ * published by the Free Software Foundation; either version 2.1 of\n+ * the License, or (at your option) any later version.\n+ *\n+ * This software is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this software; if not, write to the Free\n+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n+ */\n+package org.xwiki.evaluation;\n+\n+import org.xwiki.stability.Unstable;\n+\n+/**\n+ * Exception raised during evaluation of XObjects properties.\n+ *\n+ * @version $Id$\n+ * @since 14.10.21\n+ * @since 15.5.5\n+ * @since 15.10.2\n+ */\n+@Unstable\n+public class ObjectEvaluatorException extends Exception\n+{\n+    /**\n+     * Creates an instance of ObjectEvaluatorException with a message and a cause.\n+     *\n+     * @param message the message detailing the issue\n+     * @param cause the cause of the exception\n+     */\n+    public ObjectEvaluatorException(String message, Throwable cause)\n+    {\n+        super(message, cause);\n+    }\n+\n+    /**\n+     * Creates an instance of ObjectEvaluatorException with a message.\n+     *\n+     * @param message the message detailing the issue\n+     */\n+    public ObjectEvaluatorException(String message)\n+    {\n+        this(message, null);\n+    }\n+}"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-oldcore/src/main/java/org/xwiki/evaluation/ObjectPropertyEvaluator.java",
          "status": "added",
          "additions": 52,
          "deletions": 0,
          "patch": "@@ -0,0 +1,52 @@\n+/*\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU Lesser General Public License as\n+ * published by the Free Software Foundation; either version 2.1 of\n+ * the License, or (at your option) any later version.\n+ *\n+ * This software is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this software; if not, write to the Free\n+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n+ */\n+package org.xwiki.evaluation;\n+\n+import java.util.Map;\n+\n+import org.xwiki.component.annotation.Role;\n+import org.xwiki.stability.Unstable;\n+\n+import com.xpn.xwiki.objects.BaseObject;\n+\n+/**\n+ * Evaluates the properties of an object and returns a Map that stores the evaluation results, in which keys are the\n+ * field names of the properties, and values their evaluated content.\n+ * Instances of this interface should be used as helpers by implementations of {@link ObjectEvaluator}.\n+ *\n+ * @version $Id$\n+ * @since 14.10.21\n+ * @since 15.5.5\n+ * @since 15.10.2\n+ */\n+@Unstable\n+@Role\n+public interface ObjectPropertyEvaluator\n+{\n+    /**\n+     * Evaluates the properties of an object.\n+     *\n+     * @param object the object to evaluate\n+     * @param properties the names of the properties to evaluate\n+     * @return a Map storing the evaluated properties\n+     * @throws ObjectEvaluatorException if the evaluation fails\n+     */\n+    Map<String, String> evaluateProperties(BaseObject object, String... properties) throws ObjectEvaluatorException;\n+}"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-oldcore/src/main/java/org/xwiki/evaluation/internal/DefaultObjectEvaluator.java",
          "status": "added",
          "additions": 82,
          "deletions": 0,
          "patch": "@@ -0,0 +1,82 @@\n+/*\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU Lesser General Public License as\n+ * published by the Free Software Foundation; either version 2.1 of\n+ * the License, or (at your option) any later version.\n+ *\n+ * This software is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this software; if not, write to the Free\n+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n+ */\n+package org.xwiki.evaluation.internal;\n+\n+import java.util.Collections;\n+import java.util.Map;\n+\n+import javax.inject.Inject;\n+import javax.inject.Named;\n+import javax.inject.Provider;\n+import javax.inject.Singleton;\n+\n+import org.xwiki.component.annotation.Component;\n+import org.xwiki.component.manager.ComponentLookupException;\n+import org.xwiki.component.manager.ComponentManager;\n+import org.xwiki.evaluation.ObjectEvaluator;\n+import org.xwiki.evaluation.ObjectEvaluatorException;\n+import org.xwiki.model.reference.EntityReferenceSerializer;\n+\n+import com.xpn.xwiki.objects.BaseObject;\n+\n+/**\n+ * Evaluator that proxies the actual evaluation to the right ObjectEvaluator implementation, based on the XClass of\n+ * the object.\n+ *\n+ * @version $Id$\n+ * @since 14.10.21\n+ * @since 15.5.5\n+ * @since 15.10.2\n+ */\n+@Component\n+@Singleton\n+public class DefaultObjectEvaluator implements ObjectEvaluator\n+{\n+    @Inject\n+    @Named(\"context\")\n+    private Provider<ComponentManager> contextComponentManagerProvider;\n+\n+    @Inject\n+    @Named(\"local\")\n+    private EntityReferenceSerializer<String> entityReferenceSerializer;\n+\n+    @Override\n+    public Map<String, String> evaluate(BaseObject object) throws ObjectEvaluatorException\n+    {\n+        if (object == null) {\n+            return Collections.emptyMap();\n+        }\n+\n+        String xClassName = this.entityReferenceSerializer.serialize(object.getXClassReference());\n+        ComponentManager componentManager = this.contextComponentManagerProvider.get();\n+        if (!componentManager.hasComponent(ObjectEvaluator.class, xClassName)) {\n+            throw new ObjectEvaluatorException(String.format(\"Could not find an instance of 'ObjectEvaluator' for \"\n+                + \"XObject of class '%s'.\", xClassName));\n+        }\n+\n+        try {\n+            ObjectEvaluator objectEvaluator = componentManager.getInstance(ObjectEvaluator.class, xClassName);\n+            return objectEvaluator.evaluate(object);\n+        } catch (ComponentLookupException e) {\n+            throw new ObjectEvaluatorException(String.format(\"Could not instantiate 'ObjectEvaluator' for XObject of \"\n+                + \"class '%s'.\", xClassName), e);\n+        }\n+    }\n+}"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-oldcore/src/main/java/org/xwiki/evaluation/internal/VelocityObjectPropertyEvaluator.java",
          "status": "added",
          "additions": 112,
          "deletions": 0,
          "patch": "@@ -0,0 +1,112 @@\n+/*\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU Lesser General Public License as\n+ * published by the Free Software Foundation; either version 2.1 of\n+ * the License, or (at your option) any later version.\n+ *\n+ * This software is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this software; if not, write to the Free\n+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n+ */\n+package org.xwiki.evaluation.internal;\n+\n+import java.io.StringWriter;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import javax.inject.Inject;\n+import javax.inject.Named;\n+import javax.inject.Singleton;\n+\n+import org.apache.velocity.VelocityContext;\n+import org.xwiki.component.annotation.Component;\n+import org.xwiki.evaluation.ObjectEvaluatorException;\n+import org.xwiki.evaluation.ObjectPropertyEvaluator;\n+import org.xwiki.model.document.DocumentAuthors;\n+import org.xwiki.model.reference.DocumentReference;\n+import org.xwiki.model.reference.EntityReferenceSerializer;\n+import org.xwiki.security.authorization.AuthorExecutor;\n+import org.xwiki.security.authorization.AuthorizationManager;\n+import org.xwiki.security.authorization.Right;\n+import org.xwiki.user.UserReferenceSerializer;\n+import org.xwiki.velocity.VelocityManager;\n+\n+import com.xpn.xwiki.objects.BaseObject;\n+\n+/**\n+ * ObjectPropertyEvaluator that supports the evaluation of Velocity properties.\n+ *\n+ * @version $Id$\n+ * @since 14.10.21\n+ * @since 15.5.5\n+ * @since 15.10.2\n+ */\n+@Component\n+@Singleton\n+@Named(\"velocity\")\n+public class VelocityObjectPropertyEvaluator implements ObjectPropertyEvaluator\n+{\n+    @Inject\n+    private AuthorizationManager authorizationManager;\n+\n+    @Inject\n+    private AuthorExecutor authorExecutor;\n+\n+    @Inject\n+    private VelocityManager velocityManager;\n+\n+    @Inject\n+    @Named(\"document\")\n+    private UserReferenceSerializer<DocumentReference> documentUserSerializer;\n+\n+    @Inject\n+    private EntityReferenceSerializer<String> entityReferenceSerializer;\n+\n+    /**\n+     * Evaluates Velocity properties of an object with an author executor.\n+     */\n+    @Override\n+    public Map<String, String> evaluateProperties(BaseObject object, String... properties)\n+        throws ObjectEvaluatorException\n+    {\n+        Map<String, String> evaluatedProperties = new HashMap<>();\n+        for (String property : properties) {\n+            evaluatedProperties.put(property, object.getStringValue(property));\n+        }\n+\n+        DocumentReference documentReference = object.getDocumentReference();\n+        DocumentAuthors documentAuthors = object.getOwnerDocument().getAuthors();\n+        DocumentReference authorReference =\n+            this.documentUserSerializer.serialize(documentAuthors.getEffectiveMetadataAuthor());\n+\n+        if (this.authorizationManager.hasAccess(Right.SCRIPT, authorReference, documentReference)) {\n+            try {\n+                this.authorExecutor.call(() -> {\n+                    VelocityContext context = this.velocityManager.getVelocityContext();\n+                    for (Map.Entry<String, String> propertyEntry : evaluatedProperties.entrySet()) {\n+                        StringWriter writer = new StringWriter();\n+                        String serializedPropertyReference = this.entityReferenceSerializer.serialize(\n+                            object.getField(propertyEntry.getKey()).getReference());\n+                        this.velocityManager.getVelocityEngine().evaluate(context, writer, serializedPropertyReference,\n+                            propertyEntry.getValue());\n+                        propertyEntry.setValue(writer.toString());\n+                    }\n+                    return null;\n+                }, authorReference, documentReference);\n+            } catch (Exception e) {\n+                throw new ObjectEvaluatorException(\"Failed to run Velocity engine.\", e);\n+            }\n+        }\n+\n+        return evaluatedProperties;\n+    }\n+}"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-oldcore/src/main/resources/META-INF/components.txt",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -276,3 +276,5 @@ org.xwiki.security.authservice.internal.AuthServiceManager\n org.xwiki.security.authservice.internal.StandardXWikiAuthServiceComponent\n org.xwiki.security.authservice.script.AuthServiceScriptService\n org.xwiki.model.validation.edit.XWikiDocumentLockEditConfirmationChecker\n+org.xwiki.evaluation.internal.DefaultObjectEvaluator\n+org.xwiki.evaluation.internal.VelocityObjectPropertyEvaluator"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-search/pom.xml",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -32,6 +32,7 @@\n   <packaging>pom</packaging>\n   <description>XWiki Platform - Search - Parent POM</description>\n   <modules>\n+    <module>xwiki-platform-search-api</module>\n     <module>xwiki-platform-search-solr</module>\n     <module>xwiki-platform-search-ui</module>\n   </modules>"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-search/xwiki-platform-search-api/pom.xml",
          "status": "added",
          "additions": 44,
          "deletions": 0,
          "patch": "@@ -0,0 +1,44 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU Lesser General Public License as\n+ * published by the Free Software Foundation; either version 2.1 of\n+ * the License, or (at your option) any later version.\n+ *\n+ * This software is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this software; if not, write to the Free\n+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+  <parent>\n+    <groupId>org.xwiki.platform</groupId>\n+    <artifactId>xwiki-platform-search</artifactId>\n+    <version>16.0-SNAPSHOT</version>\n+  </parent>\n+  <artifactId>xwiki-platform-search-api</artifactId>\n+  <name>XWiki Platform - Search - API</name>\n+  <packaging>jar</packaging>\n+  <description>XWiki Platform - Search - API</description>\n+  <dependencies>\n+    <dependency>\n+      <groupId>org.xwiki.platform</groupId>\n+      <artifactId>xwiki-platform-oldcore</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.xwiki.commons</groupId>\n+      <artifactId>xwiki-commons-component-api</artifactId>\n+      <version>${commons.version}</version>\n+    </dependency>\n+  </dependencies>\n+</project>"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-search/xwiki-platform-search-api/src/main/java/org/xwiki/search/internal/SearchSuggestSourceObjectEvaluator.java",
          "status": "added",
          "additions": 63,
          "deletions": 0,
          "patch": "@@ -0,0 +1,63 @@\n+/*\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU Lesser General Public License as\n+ * published by the Free Software Foundation; either version 2.1 of\n+ * the License, or (at your option) any later version.\n+ *\n+ * This software is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this software; if not, write to the Free\n+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n+ */\n+package org.xwiki.search.internal;\n+\n+import java.util.Map;\n+\n+import javax.inject.Inject;\n+import javax.inject.Named;\n+import javax.inject.Singleton;\n+\n+import org.xwiki.component.annotation.Component;\n+import org.xwiki.evaluation.ObjectEvaluator;\n+import org.xwiki.evaluation.ObjectEvaluatorException;\n+import org.xwiki.evaluation.ObjectPropertyEvaluator;\n+\n+import com.xpn.xwiki.objects.BaseObject;\n+\n+/**\n+ * Evaluator for objects of class {@code XWiki.SearchSuggestSourceClass}.\n+ * Returns a Map storing the evaluated content for \"name\" and \"icon\" properties.\n+ *\n+ * @version $Id$\n+ * @since 14.10.21\n+ * @since 15.5.5\n+ * @since 15.10.2\n+ */\n+@Component\n+@Singleton\n+@Named(SearchSuggestSourceObjectEvaluator.ROLE_HINT)\n+public class SearchSuggestSourceObjectEvaluator implements ObjectEvaluator\n+{\n+    /**\n+     * The role hint of this component.\n+     */\n+    public static final String ROLE_HINT = \"XWiki.SearchSuggestSourceClass\";\n+\n+    @Inject\n+    @Named(\"velocity\")\n+    private ObjectPropertyEvaluator velocityPropertyEvaluator;\n+\n+    @Override\n+    public Map<String, String> evaluate(BaseObject object) throws ObjectEvaluatorException\n+    {\n+        return this.velocityPropertyEvaluator.evaluateProperties(object, \"name\", \"icon\");\n+    }\n+}"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-search/xwiki-platform-search-api/src/main/resources/META-INF/components.txt",
          "status": "added",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -0,0 +1 @@\n+org.xwiki.search.internal.SearchSuggestSourceObjectEvaluator"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-search/xwiki-platform-search-ui/pom.xml",
          "status": "modified",
          "additions": 17,
          "deletions": 0,
          "patch": "@@ -41,6 +41,11 @@\n       <artifactId>xwiki-platform-uiextension-api</artifactId>\n       <version>${project.version}</version>\n     </dependency>\n+    <dependency>\n+      <groupId>org.xwiki.platform</groupId>\n+      <artifactId>xwiki-platform-search-api</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n     <!-- JavaScript dependencies (for search suggest source management) -->\n     <dependency>\n       <groupId>org.webjars</groupId>\n@@ -86,5 +91,17 @@\n       <version>${project.version}</version>\n       <scope>test</scope>\n     </dependency>\n+    <dependency>\n+      <groupId>org.xwiki.commons</groupId>\n+      <artifactId>xwiki-commons-tool-test-component</artifactId>\n+      <version>${commons.version}</version>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.xwiki.platform</groupId>\n+      <artifactId>xwiki-platform-oldcore</artifactId>\n+      <version>${project.version}</version>\n+      <scope>test</scope>\n+    </dependency>\n   </dependencies>\n </project>"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-search/xwiki-platform-search-ui/src/main/resources/XWiki/SearchSuggestConfigSheet.xml",
          "status": "modified",
          "additions": 12,
          "deletions": 8,
          "patch": "@@ -44,19 +44,20 @@\n #end\n \n #macro (displaySearchSuggestSource $source)\n+  #set ($evaluatedSource = $source.evaluate())\n   #set ($icon = $source.getProperty('icon').value)\n   #if ($icon.startsWith('icon:'))\n     #set ($icon = $xwiki.getSkinFile(\"icons/silk/${icon.substring(5)}.png\"))\n   #else\n     ## Evaluate the Velocity code for backward compatibility.\n-    #set ($icon = \"#evaluate($icon)\")\n+    #set ($icon = $evaluatedSource.icon)\n   #end\n   #set ($name = $source.getProperty('name').value)\n   #if ($services.localization.get($name))\n     #set ($name = $services.localization.render($name))\n   #else\n     ## Evaluate the Velocity code for backward compatibility.\n-    #set ($name = \"#evaluate($name)\")\n+    #set ($name =  $evaluatedSource.name)\n   #end\n   #set ($style = 'source-header')\n   #if (\"$source.getProperty('activated').value\" == '1')\n@@ -67,9 +68,9 @@\n   #end\n   &lt;li class=\"source\"&gt;\n     &lt;div class=\"$style\"&gt;\n-      &lt;img class=\"icon\" src=\"$!icon\" alt=\"\" /&gt;\n-      &lt;span class=\"limit\"&gt;$!source.getProperty('resultsNumber').value&lt;/span&gt;\n-      &lt;span class=\"name\"&gt;$!name&lt;/span&gt;\n+      &lt;img class=\"icon\" src=\"$escapetool.xml($!icon)\" alt=\"\" /&gt;\n+      &lt;span class=\"limit\"&gt;$escapetool.xml($!source.getProperty('resultsNumber').value)&lt;/span&gt;\n+      &lt;span class=\"name\"&gt;$escapetool.xml($!name)&lt;/span&gt;\n       #if ($editing)\n         &lt;div class=\"actions\"&gt;\n           &lt;a class=\"delete\" href=\"$doc.getURL('objectremove', $escapetool.url({\n@@ -137,8 +138,9 @@\n   &lt;ul class=\"nav nav-tabs searchEngines\" role=\"tablist\"&gt;\n   #foreach ($engine in $collectiontool.sort($sources.keySet()))\n     &lt;li#if ($engine == $searchEngine) class=\"active\"#end role=\"presentation\"&gt;\n-      &lt;a href=\"#${engine}SearchSuggestSources\" aria-controls=\"${engine}SearchSuggestSources\"\n-        role=\"tab\" data-toggle=\"tab\"&gt;$engine&lt;/a&gt;\n+      #set ($escapedEngine = $escapetool.xml($engine))\n+      &lt;a href=\"#${escapedEngine}SearchSuggestSources\" aria-controls=\"${escapedEngine}SearchSuggestSources\"\n+        role=\"tab\" data-toggle=\"tab\"&gt;$escapedEngine&lt;/a&gt;\n     &lt;/li&gt;\n   #end\n   &lt;/ul&gt;\n@@ -150,7 +152,9 @@\n     ## We can't use the UL element as tab panel because we break the HTML validation tests: \"Bad value 'tabpanel' for\n     ## attribute 'role' on element 'ul'\". I don't understand the reason as there's no constraint on\n     ## https://www.w3.org/TR/2010/WD-wai-aria-20100916/roles#tabpanel .\n-    &lt;div class=\"tab-pane#if ($engine == $searchEngine) active#end\" role=\"tabpanel\" id=\"${engine}SearchSuggestSources\"&gt;\n+    #set ($escapedEngine = $escapetool.xml($engine))\n+    &lt;div class=\"tab-pane#if ($engine == $searchEngine) active#end\" role=\"tabpanel\"\n+      id=\"${escapedEngine}SearchSuggestSources\"&gt;\n       &lt;ul class=\"searchSuggestSources\"&gt;\n       #foreach ($source in $sources.get($engine))\n         #displaySearchSuggestSource($source)"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-search/xwiki-platform-search-ui/src/test/java/org/xwiki/search/ui/SearchSuggestConfigSheetPageTest.java",
          "status": "added",
          "additions": 188,
          "deletions": 0,
          "patch": "@@ -0,0 +1,188 @@\n+/*\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU Lesser General Public License as\n+ * published by the Free Software Foundation; either version 2.1 of\n+ * the License, or (at your option) any later version.\n+ *\n+ * This software is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this software; if not, write to the Free\n+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n+ */\n+package org.xwiki.search.ui;\n+\n+import java.util.concurrent.Callable;\n+\n+import org.jsoup.nodes.Document;\n+import org.jsoup.nodes.Element;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.xwiki.evaluation.internal.DefaultObjectEvaluator;\n+import org.xwiki.evaluation.internal.VelocityObjectPropertyEvaluator;\n+import org.xwiki.model.reference.DocumentReference;\n+import org.xwiki.rendering.RenderingScriptServiceComponentList;\n+import org.xwiki.rendering.internal.configuration.DefaultRenderingConfigurationComponentList;\n+import org.xwiki.search.internal.SearchSuggestSourceObjectEvaluator;\n+import org.xwiki.security.authorization.AuthorExecutor;\n+import org.xwiki.security.authorization.AuthorizationManager;\n+import org.xwiki.security.authorization.Right;\n+import org.xwiki.test.annotation.ComponentList;\n+import org.xwiki.test.junit5.mockito.MockComponent;\n+import org.xwiki.test.page.HTML50ComponentList;\n+import org.xwiki.test.page.PageTest;\n+import org.xwiki.test.page.TestNoScriptMacro;\n+import org.xwiki.test.page.XWikiSyntax21ComponentList;\n+import org.xwiki.velocity.VelocityEngine;\n+import org.xwiki.velocity.VelocityManager;\n+\n+import com.xpn.xwiki.doc.XWikiDocument;\n+import com.xpn.xwiki.objects.BaseObject;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.ArgumentMatchers.eq;\n+import static org.mockito.Mockito.never;\n+import static org.mockito.Mockito.spy;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+@RenderingScriptServiceComponentList\n+@DefaultRenderingConfigurationComponentList\n+@HTML50ComponentList\n+@XWikiSyntax21ComponentList\n+@ComponentList({\n+    DefaultObjectEvaluator.class,\n+    VelocityObjectPropertyEvaluator.class,\n+    SearchSuggestSourceObjectEvaluator.class,\n+    TestNoScriptMacro.class,\n+})\n+public class SearchSuggestConfigSheetPageTest extends PageTest\n+{\n+    private static final String WIKI_NAME = \"xwiki\";\n+\n+    private static final DocumentReference SEARCH_SUGGEST_CONFIG_SHEET =\n+        new DocumentReference(WIKI_NAME, \"XWiki\", \"SearchSuggestConfigSheet\");\n+\n+    private static final DocumentReference SEARCH_SUGGEST_SOURCE_CLASS =\n+        new DocumentReference(WIKI_NAME, \"XWiki\", \"SearchSuggestSourceClass\");\n+\n+    private static final DocumentReference TEST_PAGE =\n+        new DocumentReference(WIKI_NAME, \"Test\", \"TestDocument\");\n+\n+    private static final DocumentReference AUTHOR_REFERENCE =\n+        new DocumentReference(WIKI_NAME, \"XWiki\", \"TestUser\");\n+\n+    @MockComponent\n+    private AuthorizationManager authorizationManager;\n+\n+    private AuthorExecutor authorExecutor;\n+\n+    private VelocityEngine velocityEngine;\n+\n+    private XWikiDocument testPageDocument;\n+\n+    private XWikiDocument searchSuggestConfigSheetDocument;\n+\n+    private String testString;\n+\n+    private String evaluatedTestString;\n+\n+    @BeforeEach\n+    void setUp() throws Exception\n+    {\n+        this.xwiki.initializeMandatoryDocuments(this.context);\n+        loadPage(SEARCH_SUGGEST_SOURCE_CLASS);\n+        loadPage(SEARCH_SUGGEST_CONFIG_SHEET);\n+\n+        this.testString = \"$doc.getDocumentReference().getName(){{/html}}{{noscript /}}\";\n+        this.evaluatedTestString = TEST_PAGE.getName() + \"{{/html}}{{noscript /}}\";\n+\n+        this.searchSuggestConfigSheetDocument = this.xwiki.getDocument(SEARCH_SUGGEST_CONFIG_SHEET, this.context);\n+\n+        this.testPageDocument = this.xwiki.getDocument(TEST_PAGE, this.context);\n+        this.testPageDocument.setTitle(\"Test Search Suggestions\");\n+        this.testPageDocument.setAuthorReference(AUTHOR_REFERENCE);\n+        BaseObject searchSuggestSourceObject =\n+            this.testPageDocument.newXObject(SEARCH_SUGGEST_SOURCE_CLASS, this.context);\n+        searchSuggestSourceObject.setStringValue(\"name\", this.testString);\n+        searchSuggestSourceObject.setStringValue(\"icon\", this.testString);\n+        searchSuggestSourceObject.setStringValue(\"resultsNumber\", this.testString);\n+        searchSuggestSourceObject.setStringValue(\"engine\", this.testString);\n+        this.xwiki.saveDocument(this.testPageDocument, this.context);\n+\n+        this.authorExecutor = this.componentManager.registerMockComponent(AuthorExecutor.class, true);\n+\n+        // Spy Velocity Engine.\n+        VelocityManager velocityManager = this.componentManager.getInstance(VelocityManager.class);\n+        this.velocityEngine = velocityManager.getVelocityEngine();\n+        this.velocityEngine = spy(this.velocityEngine);\n+        velocityManager = spy(velocityManager);\n+        this.componentManager.registerComponent(VelocityManager.class, velocityManager);\n+        when(velocityManager.getVelocityEngine()).thenReturn(this.velocityEngine);\n+\n+        when(this.authorExecutor.call(any(), any(), any())).thenAnswer(invocation -> {\n+            Callable<?> callable = invocation.getArgument(0);\n+            return callable.call();\n+        });\n+    }\n+\n+    @Test\n+    void displaySourceWithoutScriptRights() throws Exception\n+    {\n+        when(this.authorizationManager.hasAccess(Right.SCRIPT, AUTHOR_REFERENCE, TEST_PAGE)).thenReturn(false);\n+\n+        this.context.setDoc(this.testPageDocument);\n+        Document result = renderHTMLPage(this.searchSuggestConfigSheetDocument);\n+\n+        verify(this.authorizationManager).hasAccess(Right.SCRIPT, AUTHOR_REFERENCE, TEST_PAGE);\n+        verify(this.velocityEngine, never()).evaluate(any(), any(), any(), eq(this.testString));\n+\n+        Element presentationLink =\n+            result.getElementsByAttributeValue(\"role\", \"presentation\").get(0).getElementsByTag(\"a\").get(0);\n+        // Escaping tests only.\n+        assertEquals(\"#\" + this.testString + \"SearchSuggestSources\", presentationLink.attr(\"href\"));\n+        assertEquals(this.testString, presentationLink.text());\n+        assertEquals(this.testString + \"SearchSuggestSources\", presentationLink.attr(\"aria-controls\"));\n+        assertEquals(this.testString + \"SearchSuggestSources\", result.getElementsByClass(\"tab-pane\").get(0).attr(\"id\"));\n+        assertEquals(this.testString, result.getElementsByClass(\"limit\").text());\n+\n+        // These should not be evaluated.\n+        assertEquals(this.testString, result.getElementsByClass(\"icon\").get(0).attr(\"src\"));\n+        assertEquals(this.testString, result.getElementsByClass(\"name\").text());\n+    }\n+\n+    @Test\n+    void displaySourceWithScriptRights() throws Exception\n+    {\n+        when(this.authorizationManager.hasAccess(Right.SCRIPT, AUTHOR_REFERENCE, TEST_PAGE)).thenReturn(true);\n+\n+        this.context.setDoc(this.testPageDocument);\n+        Document result = renderHTMLPage(this.searchSuggestConfigSheetDocument);\n+\n+        verify(this.authorizationManager).hasAccess(Right.SCRIPT, AUTHOR_REFERENCE, TEST_PAGE);\n+        verify(this.authorExecutor).call(any(), eq(AUTHOR_REFERENCE), eq(TEST_PAGE));\n+        verify(this.velocityEngine, times(2)).evaluate(any(), any(), any(), eq(this.testString));\n+\n+        Element presentationLink =\n+            result.getElementsByAttributeValue(\"role\", \"presentation\").get(0).getElementsByTag(\"a\").get(0);\n+        // Escaping tests only.\n+        assertEquals(\"#\" + this.testString + \"SearchSuggestSources\", presentationLink.attr(\"href\"));\n+        assertEquals(this.testString, presentationLink.text());\n+        assertEquals(this.testString + \"SearchSuggestSources\", presentationLink.attr(\"aria-controls\"));\n+        assertEquals(this.testString + \"SearchSuggestSources\", result.getElementsByClass(\"tab-pane\").get(0).attr(\"id\"));\n+        assertEquals(this.testString, result.getElementsByClass(\"limit\").text());\n+\n+        // These should be evaluated.\n+        assertEquals(this.evaluatedTestString, result.getElementsByClass(\"icon\").get(0).attr(\"src\"));\n+        assertEquals(this.evaluatedTestString, result.getElementsByClass(\"name\").text());\n+    }\n+}"
        },
        {
          "filename": "xwiki-platform-core/xwiki-platform-web/xwiki-platform-web-war/src/main/webapp/resources/uicomponents/search/searchSuggest.js",
          "status": "modified",
          "additions": 3,
          "deletions": 2,
          "patch": "@@ -195,19 +195,20 @@ var XWiki = (function (XWiki) {\n         #end\n         #set ($discard = $xwiki.getDocument('XWiki.SearchCode').getRenderedContent())\n         #if ($engine == $searchEngine)\n+          #set ($evaluatedSource = $source.evaluate())\n           #set ($name = $source.getProperty('name').value)\n           #if ($services.localization.get($name))\n             #set ($name = $services.localization.render($name))\n           #else\n             ## Evaluate the Velocity code for backward compatibility.\n-            #set ($name = \"#evaluate($name)\")\n+            #set ($name =  $evaluatedSource.name)\n           #end\n           #set ($icon = $source.getProperty('icon').value)\n           #if ($icon.startsWith('icon:'))\n             #set ($icon = $xwiki.getSkinFile(\"icons/silk/${icon.substring(5)}.png\"))\n           #else\n             ## Evaluate the Velocity code for backward compatibility.\n-            #set ($icon = \"#evaluate($icon)\")\n+            #set ($icon = $evaluatedSource.icon)\n           #end\n           #set ($service = $source.getProperty('url').value)\n           #set ($parameters = {"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 2,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 13,
        "max_directory_depth": 10
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "20d352276c008c8ea2a1cf1ea9ceb84193098477",
            "date": "2025-01-25T19:15:09Z",
            "author_login": "mflorea"
          },
          {
            "sha": "e29b630b2d5a42b6f12ed3f0e4f59bd078f8a0f7",
            "date": "2025-01-24T07:34:53Z",
            "author_login": "mflorea"
          },
          {
            "sha": "023144daf732d04b085c2423ebd4552edd09ac5c",
            "date": "2025-01-24T15:44:30Z",
            "author_login": "Sereza7"
          },
          {
            "sha": "a46579427dc202957d623b8e69a6a894243c6690",
            "date": "2025-01-21T16:53:45Z",
            "author_login": "Sereza7"
          },
          {
            "sha": "3d661180a9075925c3d2d75816356925f32ae89d",
            "date": "2025-01-21T16:13:46Z",
            "author_login": "Sereza7"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.9,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H",
    "cwe_id": "CWE-95",
    "description": "XWiki Platform is a generic wiki platform offering runtime services for applications built on top of it. Any user with edit right on any page can perform arbitrary remote code execution by adding instances of `XWiki.SearchSuggestConfig` and `XWiki.SearchSuggestSourceClass` to their user profile or any other page. This compromises the confidentiality, integrity and availability of the whole XWiki installation. This vulnerability has been patched in XWiki 14.10.21, 15.5.5 and 15.10.2.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-07-31T16:15:03.683",
    "last_modified": "2024-09-06T20:54:20.857",
    "fix_date": "2023-12-18T08:53:18Z"
  },
  "references": [
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/0b135760514fef73db748986a3311f3edd4a553b",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/742cd4591642be4cdcaf68325f17540e0934e64e",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/9ce3e0319869b6d8131fc4e0909736f7041566a4",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/commit/bbde8a4f564e3c28839440076334a9093e2b4834",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-h63h-5c77-77p5",
      "source": "security-advisories@github.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://jira.xwiki.org/browse/XWIKI-21473",
      "source": "security-advisories@github.com",
      "tags": [
        "Issue Tracking",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:34.513281",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "xwiki-platform",
    "owner": "xwiki",
    "created_at": "2011-03-10T13:26:41Z",
    "updated_at": "2025-01-25T19:23:49Z",
    "pushed_at": "2025-01-25T19:23:45Z",
    "size": 563394,
    "stars": 1035,
    "forks": 555,
    "open_issues": 143,
    "watchers": 1035,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Java": 34352251,
      "JavaScript": 2404688,
      "HTML": 388086,
      "Less": 318876,
      "AspectJ": 280487,
      "Vue": 222987,
      "CSS": 115582,
      "XSLT": 109285,
      "Clean": 44054,
      "Shell": 32569,
      "Batchfile": 14604,
      "Python": 5046,
      "Groovy": 3012,
      "AMPL": 1296
    },
    "commit_activity": {
      "total_commits_last_year": 1743,
      "avg_commits_per_week": 33.51923076923077,
      "days_active_last_year": 261
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "lgpl-2.1"
    },
    "collected_at": "2025-01-26T07:34:26.816515"
  }
}