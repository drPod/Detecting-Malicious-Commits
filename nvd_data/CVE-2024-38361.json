{
  "cve_id": "CVE-2024-38361",
  "github_data": {
    "repository": "authzed/spicedb",
    "fix_commit": "ecef31d2b266fde17eb2c3415e2ec4ceff96fbeb",
    "related_commits": [
      "ecef31d2b266fde17eb2c3415e2ec4ceff96fbeb",
      "ecef31d2b266fde17eb2c3415e2ec4ceff96fbeb"
    ],
    "patch_url": "https://github.com/authzed/spicedb/commit/ecef31d2b266fde17eb2c3415e2ec4ceff96fbeb.patch",
    "fix_commit_details": {
      "sha": "ecef31d2b266fde17eb2c3415e2ec4ceff96fbeb",
      "commit_date": "2024-06-20T15:33:19Z",
      "author": {
        "login": "josephschorr",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Merge pull request from GHSA-grjv-gjgr-66g2",
        "length": 151,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 328,
        "additions": 327,
        "deletions": 1
      },
      "files": [
        {
          "filename": "internal/dispatch/graph/check_test.go",
          "status": "modified",
          "additions": 261,
          "deletions": 0,
          "patch": "@@ -298,6 +298,267 @@ func addFrame(trace *v1.CheckDebugTrace, foundFrames *mapz.Set[string]) {\n \t}\n }\n \n+func TestCheckPermissionOverSchema(t *testing.T) {\n+\ttestCases := []struct {\n+\t\tname                   string\n+\t\tschema                 string\n+\t\trelationships          []*core.RelationTuple\n+\t\tresource               *core.ObjectAndRelation\n+\t\tsubject                *core.ObjectAndRelation\n+\t\texpectedPermissionship v1.ResourceCheckResult_Membership\n+\t}{\n+\t\t{\n+\t\t\t\"basic union\",\n+\t\t\t`definition user {}\n+\t\t\n+\t\t \t definition document {\n+\t\t\t\trelation editor: user\n+\t\t\t\trelation viewer: user\n+\t\t\t\tpermission view = viewer + editor\n+  \t\t\t }`,\n+\t\t\t[]*core.RelationTuple{\n+\t\t\t\ttuple.MustParse(\"document:first#viewer@user:tom\"),\n+\t\t\t},\n+\t\t\tONR(\"document\", \"first\", \"view\"),\n+\t\t\tONR(\"user\", \"tom\", \"...\"),\n+\t\t\tv1.ResourceCheckResult_MEMBER,\n+\t\t},\n+\t\t{\n+\t\t\t\"basic intersection\",\n+\t\t\t`definition user {}\n+\t\t\n+\t\t \t definition document {\n+\t\t\t\trelation editor: user\n+\t\t\t\trelation viewer: user\n+\t\t\t\tpermission view = viewer & editor\n+  \t\t\t }`,\n+\t\t\t[]*core.RelationTuple{\n+\t\t\t\ttuple.MustParse(\"document:first#viewer@user:tom\"),\n+\t\t\t\ttuple.MustParse(\"document:first#editor@user:tom\"),\n+\t\t\t},\n+\t\t\tONR(\"document\", \"first\", \"view\"),\n+\t\t\tONR(\"user\", \"tom\", \"...\"),\n+\t\t\tv1.ResourceCheckResult_MEMBER,\n+\t\t},\n+\t\t{\n+\t\t\t\"basic exclusion\",\n+\t\t\t`definition user {}\n+\t\t\n+\t\t \t definition document {\n+\t\t\t\trelation editor: user\n+\t\t\t\trelation viewer: user\n+\t\t\t\tpermission view = viewer - editor\n+  \t\t\t }`,\n+\t\t\t[]*core.RelationTuple{\n+\t\t\t\ttuple.MustParse(\"document:first#viewer@user:tom\"),\n+\t\t\t},\n+\t\t\tONR(\"document\", \"first\", \"view\"),\n+\t\t\tONR(\"user\", \"tom\", \"...\"),\n+\t\t\tv1.ResourceCheckResult_MEMBER,\n+\t\t},\n+\t\t{\n+\t\t\t\"basic union, multiple branches\",\n+\t\t\t`definition user {}\n+\t\t\n+\t\t \t definition document {\n+\t\t\t\trelation editor: user\n+\t\t\t\trelation viewer: user\n+\t\t\t\tpermission view = viewer + editor\n+  \t\t\t }`,\n+\t\t\t[]*core.RelationTuple{\n+\t\t\t\ttuple.MustParse(\"document:first#viewer@user:tom\"),\n+\t\t\t\ttuple.MustParse(\"document:first#editor@user:tom\"),\n+\t\t\t},\n+\t\t\tONR(\"document\", \"first\", \"view\"),\n+\t\t\tONR(\"user\", \"tom\", \"...\"),\n+\t\t\tv1.ResourceCheckResult_MEMBER,\n+\t\t},\n+\t\t{\n+\t\t\t\"basic union no permission\",\n+\t\t\t`definition user {}\n+\t\t\n+\t\t \t definition document {\n+\t\t\t\trelation editor: user\n+\t\t\t\trelation viewer: user\n+\t\t\t\tpermission view = viewer + editor\n+  \t\t\t }`,\n+\t\t\t[]*core.RelationTuple{},\n+\t\t\tONR(\"document\", \"first\", \"view\"),\n+\t\t\tONR(\"user\", \"tom\", \"...\"),\n+\t\t\tv1.ResourceCheckResult_NOT_MEMBER,\n+\t\t},\n+\t\t{\n+\t\t\t\"basic intersection no permission\",\n+\t\t\t`definition user {}\n+\t\t\n+\t\t \t definition document {\n+\t\t\t\trelation editor: user\n+\t\t\t\trelation viewer: user\n+\t\t\t\tpermission view = viewer & editor\n+  \t\t\t }`,\n+\t\t\t[]*core.RelationTuple{\n+\t\t\t\ttuple.MustParse(\"document:first#viewer@user:tom\"),\n+\t\t\t},\n+\t\t\tONR(\"document\", \"first\", \"view\"),\n+\t\t\tONR(\"user\", \"tom\", \"...\"),\n+\t\t\tv1.ResourceCheckResult_NOT_MEMBER,\n+\t\t},\n+\t\t{\n+\t\t\t\"basic exclusion no permission\",\n+\t\t\t`definition user {}\n+\t\t\n+\t\t \t definition document {\n+\t\t\t\trelation banned: user\n+\t\t\t\trelation viewer: user\n+\t\t\t\tpermission view = viewer - banned\n+  \t\t\t }`,\n+\t\t\t[]*core.RelationTuple{\n+\t\t\t\ttuple.MustParse(\"document:first#viewer@user:tom\"),\n+\t\t\t\ttuple.MustParse(\"document:first#banned@user:tom\"),\n+\t\t\t},\n+\t\t\tONR(\"document\", \"first\", \"view\"),\n+\t\t\tONR(\"user\", \"tom\", \"...\"),\n+\t\t\tv1.ResourceCheckResult_NOT_MEMBER,\n+\t\t},\n+\t\t{\n+\t\t\t\"exclusion with multiple branches\",\n+\t\t\t`definition user {}\n+\t\t\n+\t\t\t definition group {\n+\t\t\t \trelation member: user\n+\t\t\t\trelation banned: user\n+\t\t\t \tpermission view = member - banned\n+\t\t\t }\n+\n+\t\t \t definition document {\n+\t\t\t\trelation group: group\n+\t\t\t\tpermission view = group->view\n+  \t\t\t }`,\n+\t\t\t[]*core.RelationTuple{\n+\t\t\t\ttuple.MustParse(\"document:first#group@group:first\"),\n+\t\t\t\ttuple.MustParse(\"document:first#group@group:second\"),\n+\t\t\t\ttuple.MustParse(\"group:first#member@user:tom\"),\n+\t\t\t\ttuple.MustParse(\"group:first#banned@user:tom\"),\n+\t\t\t\ttuple.MustParse(\"group:second#member@user:tom\"),\n+\t\t\t},\n+\t\t\tONR(\"document\", \"first\", \"view\"),\n+\t\t\tONR(\"user\", \"tom\", \"...\"),\n+\t\t\tv1.ResourceCheckResult_MEMBER,\n+\t\t},\n+\t\t{\n+\t\t\t\"intersection with multiple branches\",\n+\t\t\t`definition user {}\n+\t\t\n+\t\t\t definition group {\n+\t\t\t \trelation member: user\n+\t\t\t\trelation other: user\n+\t\t\t \tpermission view = member & other\n+\t\t\t }\n+\n+\t\t \t definition document {\n+\t\t\t\trelation group: group\n+\t\t\t\tpermission view = group->view\n+  \t\t\t }`,\n+\t\t\t[]*core.RelationTuple{\n+\t\t\t\ttuple.MustParse(\"document:first#group@group:first\"),\n+\t\t\t\ttuple.MustParse(\"document:first#group@group:second\"),\n+\t\t\t\ttuple.MustParse(\"group:first#member@user:tom\"),\n+\t\t\t\ttuple.MustParse(\"group:first#other@user:tom\"),\n+\t\t\t\ttuple.MustParse(\"group:second#member@user:tom\"),\n+\t\t\t},\n+\t\t\tONR(\"document\", \"first\", \"view\"),\n+\t\t\tONR(\"user\", \"tom\", \"...\"),\n+\t\t\tv1.ResourceCheckResult_MEMBER,\n+\t\t},\n+\t\t{\n+\t\t\t\"exclusion with multiple branches no permission\",\n+\t\t\t`definition user {}\n+\t\t\n+\t\t\t definition group {\n+\t\t\t \trelation member: user\n+\t\t\t\trelation banned: user\n+\t\t\t \tpermission view = member - banned\n+\t\t\t }\n+\n+\t\t \t definition document {\n+\t\t\t\trelation group: group\n+\t\t\t\tpermission view = group->view\n+  \t\t\t }`,\n+\t\t\t[]*core.RelationTuple{\n+\t\t\t\ttuple.MustParse(\"document:first#group@group:first\"),\n+\t\t\t\ttuple.MustParse(\"document:first#group@group:second\"),\n+\t\t\t\ttuple.MustParse(\"group:first#member@user:tom\"),\n+\t\t\t\ttuple.MustParse(\"group:first#banned@user:tom\"),\n+\t\t\t\ttuple.MustParse(\"group:second#member@user:tom\"),\n+\t\t\t\ttuple.MustParse(\"group:second#banned@user:tom\"),\n+\t\t\t},\n+\t\t\tONR(\"document\", \"first\", \"view\"),\n+\t\t\tONR(\"user\", \"tom\", \"...\"),\n+\t\t\tv1.ResourceCheckResult_NOT_MEMBER,\n+\t\t},\n+\t\t{\n+\t\t\t\"intersection with multiple branches no permission\",\n+\t\t\t`definition user {}\n+\t\t\n+\t\t\t definition group {\n+\t\t\t \trelation member: user\n+\t\t\t\trelation other: user\n+\t\t\t \tpermission view = member & other\n+\t\t\t }\n+\n+\t\t \t definition document {\n+\t\t\t\trelation group: group\n+\t\t\t\tpermission view = group->view\n+  \t\t\t }`,\n+\t\t\t[]*core.RelationTuple{\n+\t\t\t\ttuple.MustParse(\"document:first#group@group:first\"),\n+\t\t\t\ttuple.MustParse(\"document:first#group@group:second\"),\n+\t\t\t\ttuple.MustParse(\"group:first#member@user:tom\"),\n+\t\t\t\ttuple.MustParse(\"group:second#member@user:tom\"),\n+\t\t\t},\n+\t\t\tONR(\"document\", \"first\", \"view\"),\n+\t\t\tONR(\"user\", \"tom\", \"...\"),\n+\t\t\tv1.ResourceCheckResult_NOT_MEMBER,\n+\t\t},\n+\t}\n+\n+\tfor _, tc := range testCases {\n+\t\ttc := tc\n+\t\tt.Run(tc.name, func(t *testing.T) {\n+\t\t\trequire := require.New(t)\n+\n+\t\t\tdispatcher := NewLocalOnlyDispatcher(10)\n+\n+\t\t\tds, err := memdb.NewMemdbDatastore(0, 0, memdb.DisableGC)\n+\t\t\trequire.NoError(err)\n+\n+\t\t\tds, revision := testfixtures.DatastoreFromSchemaAndTestRelationships(ds, tc.schema, tc.relationships, require)\n+\n+\t\t\tctx := datastoremw.ContextWithHandle(context.Background())\n+\t\t\trequire.NoError(datastoremw.SetInContext(ctx, ds))\n+\n+\t\t\tresp, err := dispatcher.DispatchCheck(ctx, &v1.DispatchCheckRequest{\n+\t\t\t\tResourceRelation: RR(tc.resource.Namespace, tc.resource.Relation),\n+\t\t\t\tResourceIds:      []string{tc.resource.ObjectId},\n+\t\t\t\tSubject:          tc.subject,\n+\t\t\t\tMetadata: &v1.ResolverMeta{\n+\t\t\t\t\tAtRevision:     revision.String(),\n+\t\t\t\t\tDepthRemaining: 50,\n+\t\t\t\t},\n+\t\t\t\tResultsSetting: v1.DispatchCheckRequest_ALLOW_SINGLE_RESULT,\n+\t\t\t})\n+\t\t\trequire.NoError(err)\n+\n+\t\t\tmembership := v1.ResourceCheckResult_NOT_MEMBER\n+\t\t\tif r, ok := resp.ResultsByResourceId[tc.resource.ObjectId]; ok {\n+\t\t\t\tmembership = r.Membership\n+\t\t\t}\n+\n+\t\t\trequire.Equal(tc.expectedPermissionship, membership)\n+\t\t})\n+\t}\n+}\n+\n func TestCheckDebugging(t *testing.T) {\n \ttype expectedFrame struct {\n \t\tresourceType *core.RelationReference"
        },
        {
          "filename": "internal/graph/check.go",
          "status": "modified",
          "additions": 6,
          "deletions": 1,
          "patch": "@@ -771,7 +771,12 @@ func difference[T any](\n \tothersChan := make(chan CheckResult, len(children)-1)\n \n \tgo func() {\n-\t\tresult := handler(childCtx, crc, children[0])\n+\t\tresult := handler(childCtx, currentRequestContext{\n+\t\t\tparentReq:           crc.parentReq,\n+\t\t\tfilteredResourceIDs: crc.filteredResourceIDs,\n+\t\t\tresultsSetting:      v1.DispatchCheckRequest_REQUIRE_ALL_RESULTS,\n+\t\t\tmaxDispatchCount:    crc.maxDispatchCount,\n+\t\t}, children[0])\n \t\tbaseChan <- result\n \t}()\n "
        },
        {
          "filename": "internal/graph/membershipset_test.go",
          "status": "modified",
          "additions": 28,
          "deletions": 0,
          "patch": "@@ -705,6 +705,34 @@ func TestMembershipSetSubtract(t *testing.T) {\n \t\t\tfalse,\n \t\t\tfalse,\n \t\t},\n+\t\t{\n+\t\t\t\"non overlapping\",\n+\t\t\tmap[string]*core.CaveatExpression{\n+\t\t\t\t\"resource1\": nil,\n+\t\t\t\t\"resource2\": nil,\n+\t\t\t},\n+\t\t\tmap[string]*core.CaveatExpression{\n+\t\t\t\t\"resource2\": nil,\n+\t\t\t},\n+\t\t\tmap[string]*core.CaveatExpression{\n+\t\t\t\t\"resource1\": nil,\n+\t\t\t},\n+\t\t\ttrue,\n+\t\t\tfalse,\n+\t\t},\n+\t\t{\n+\t\t\t\"non overlapping reversed\",\n+\t\t\tmap[string]*core.CaveatExpression{\n+\t\t\t\t\"resource2\": nil,\n+\t\t\t},\n+\t\t\tmap[string]*core.CaveatExpression{\n+\t\t\t\t\"resource1\": nil,\n+\t\t\t\t\"resource2\": nil,\n+\t\t\t},\n+\t\t\tmap[string]*core.CaveatExpression{},\n+\t\t\tfalse,\n+\t\t\ttrue,\n+\t\t},\n \t}\n \n \tfor _, tc := range tcs {"
        },
        {
          "filename": "internal/services/integrationtesting/arrowovermultiexclusion.yaml",
          "status": "added",
          "additions": 32,
          "deletions": 0,
          "patch": "@@ -0,0 +1,32 @@\n+---\n+schema: |+\n+  definition user {}\n+\n+  definition group {\n+    relation direct_member: user\n+    relation excluded: user:*\n+    permission view = direct_member - excluded\n+  }\n+\n+  definition resource {\n+    relation group: group\n+    permission view = group->view\n+  }\n+\n+relationships: >-\n+  resource:one#group@group:group1\n+\n+  resource:one#group@group:group2\n+\n+  group:group1#direct_member@user:fred\n+\n+  group:group1#excluded@user:*\n+\n+  group:group2#direct_member@user:fred\n+assertions:\n+  assertTrue:\n+    - \"group:group1#direct_member@user:fred\"\n+    - \"group:group2#direct_member@user:fred\"\n+    - \"group:group2#view@user:fred\"\n+  assertFalse:\n+    - \"group:group1#view@user:fred\""
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 3,
        "unique_directories": 3,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "3bbf45766ed519c53ff802619a032e58e2af57a7",
            "date": "2025-01-13T22:44:38Z",
            "author_login": "josephschorr"
          },
          {
            "sha": "3e257e6c4207721f8ae421ec1424f96c0c60279b",
            "date": "2025-01-11T22:06:12Z",
            "author_login": "josephschorr"
          },
          {
            "sha": "fabeff191dec15fae327c896a9f40e095fde5e49",
            "date": "2025-01-10T22:22:57Z",
            "author_login": "josephschorr"
          },
          {
            "sha": "9401072bf043c3392d14e124ab73637dc699f449",
            "date": "2025-01-10T22:14:58Z",
            "author_login": "josephschorr"
          },
          {
            "sha": "6b2e961ed8e1304f28ea46762168bb20417c537c",
            "date": "2025-01-10T18:34:10Z",
            "author_login": "josephschorr"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 3.7,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N",
    "cwe_id": "CWE-281",
    "description": "Spicedb is an Open Source, Google Zanzibar-inspired permissions database to enable fine-grained authorization for customer applications. Use of an exclusion under an arrow that has multiple resources may resolve to `NO_PERMISSION` when permission is expected. If the resource exists under *multiple* folders and the user has access to view more than a single folder, SpiceDB may report the user does not have access due to a failure in the exclusion dispatcher to request that *all* the folders in which the user is a member be returned. Permission is returned as `NO_PERMISSION` when `PERMISSION` is expected on the `CheckPermission` API. This issue has been addressed in version 1.33.1. All users are advised to upgrade. There are no known workarounds for this issue.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2024-06-20T23:15:52.930",
    "last_modified": "2024-11-21T09:25:27.313",
    "fix_date": "2024-06-20T15:33:19Z"
  },
  "references": [
    {
      "url": "https://github.com/authzed/spicedb/commit/ecef31d2b266fde17eb2c3415e2ec4ceff96fbeb",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/authzed/spicedb/security/advisories/GHSA-grjv-gjgr-66g2",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/authzed/spicedb/commit/ecef31d2b266fde17eb2c3415e2ec4ceff96fbeb",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/authzed/spicedb/security/advisories/GHSA-grjv-gjgr-66g2",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:28.850841",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "spicedb",
    "owner": "authzed",
    "created_at": "2021-08-16T15:32:09Z",
    "updated_at": "2025-01-14T00:07:27Z",
    "pushed_at": "2025-01-13T22:53:04Z",
    "size": 19045,
    "stars": 5286,
    "forks": 286,
    "open_issues": 107,
    "watchers": 5286,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main"
    ],
    "languages": {
      "Go": 4522371,
      "JavaScript": 16612,
      "HTML": 3663,
      "Dockerfile": 1564
    },
    "commit_activity": {
      "total_commits_last_year": 625,
      "avg_commits_per_week": 12.01923076923077,
      "days_active_last_year": 208
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T12:56:47.808291"
  }
}