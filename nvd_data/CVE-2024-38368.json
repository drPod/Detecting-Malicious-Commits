{
  "cve_id": "CVE-2024-38368",
  "github_data": {
    "repository": "CocoaPods/trunk.cocoapods.org",
    "fix_commit": "71be5440906b6bdfbc0bcc7f8a9fec33367ea0f4",
    "related_commits": [
      "71be5440906b6bdfbc0bcc7f8a9fec33367ea0f4",
      "71be5440906b6bdfbc0bcc7f8a9fec33367ea0f4"
    ],
    "patch_url": "https://github.com/CocoaPods/trunk.cocoapods.org/commit/71be5440906b6bdfbc0bcc7f8a9fec33367ea0f4.patch",
    "fix_commit_details": {
      "sha": "71be5440906b6bdfbc0bcc7f8a9fec33367ea0f4",
      "commit_date": "2023-09-22T11:40:00Z",
      "author": {
        "login": "orta",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Drop the claims feature",
        "length": 23,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 180,
        "additions": 3,
        "deletions": 177
      },
      "files": [
        {
          "filename": "app/controllers/claims_controller.rb",
          "status": "modified",
          "additions": 1,
          "deletions": 56,
          "patch": "@@ -25,40 +25,7 @@ def shared_partial(*sources)\n       end\n \n       # --- Claims --------------------------------------------------------------------------------\n-\n-      get '/new' do\n-        @owner = Owner.new\n-        @pods = []\n-        slim :new\n-      end\n-\n-      post '/' do\n-        find_owner\n-        find_pods\n-        if @owner.valid? && valid_pods?\n-          change_ownership\n-          if all_pods_already_claimed?\n-            query = {\n-              :claimer_email => @owner.email,\n-              :pods => @already_claimed_pods,\n-            }\n-            redirect to(\"/disputes/new?#{query.to_query}\")\n-          else\n-            query = {\n-              :claimer_email => @owner.email,\n-              :successfully_claimed => @successfully_claimed_pods,\n-              :already_claimed => @already_claimed_pods,\n-            }\n-            redirect to(\"/thanks?#{query.to_query}\")\n-          end\n-        end\n-        prepare_errors\n-        slim :new\n-      end\n-\n-      get '/thanks' do\n-        slim :thanks\n-      end\n+      #  Deprecated\n \n       # --- Disputes ------------------------------------------------------------------------------\n \n@@ -111,10 +78,6 @@ def valid_pods?\n         !@pods.empty? && @invalid_pods.empty?\n       end\n \n-      def all_pods_already_claimed?\n-        @successfully_claimed_pods.empty? && !@already_claimed_pods.empty?\n-      end\n-\n       def prepare_errors\n         @errors = @owner.errors.full_messages.map { |message| \"Owner #{message}.\" }\n         if !@invalid_pods.empty?\n@@ -123,24 +86,6 @@ def prepare_errors\n           @errors << 'No Pods specified.'\n         end\n       end\n-\n-      def change_ownership\n-        @successfully_claimed_pods = []\n-        @already_claimed_pods = []\n-        DB.test_safe_transaction do\n-          @owner.save_changes(:raise_on_save_failure => true)\n-          unclaimed_owner = Owner.unclaimed\n-          @pods.each do |pod|\n-            if pod.owners == [unclaimed_owner]\n-              @owner.add_pod(pod)\n-              pod.remove_owner(unclaimed_owner)\n-              @successfully_claimed_pods << pod.name\n-            else\n-              @already_claimed_pods << pod.name\n-            end\n-          end\n-        end\n-      end\n     end\n   end\n end"
        },
        {
          "filename": "app/views/claims/thanks.slim",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -9,7 +9,7 @@ ruby:\n \n   p Once we have finished the transition period, you will be able to push new versions of #{params[:successfully_claimed].size == 1 ? 'these pods' : 'this pod'} directly from the command-line. For more details see the <a href = \"http://guides.cocoapods.org/making/getting-setup-with-trunk\">getting started with Trunk</a> guide.\n - else\n-  p All of your choosen Pods are already claimed.\n+  p All of your chosen Pods are already claimed.\n \n - unless params[:already_claimed] == [''] || params[:already_claimed] == nil\n   p The following #{params[:already_claimed].size == 1 ? 'pod has' : 'pods have'} already been claimed: #{params[:already_claimed].to_sentence}. If you disagree with this please <a href=\"#{url(\"/disputes/new?#{{ :claimer_email => params[:claimer_email], :pods => params[:already_claimed] }.to_query}\")}\">file a dispute</a>."
        },
        {
          "filename": "spec/functional/claims_controller_spec.rb",
          "status": "modified",
          "additions": 1,
          "deletions": 120,
          "patch": "@@ -1,126 +1,7 @@\n require File.expand_path('../spec_helper', __dir__)\n \n module Pod::TrunkApp\n-  describe ClaimsController, 'when claiming pods' do\n-    seed_unclaimed\n-\n-    it 'renders a new claim form' do\n-      get '/new'\n-      last_response.status.should == 200\n-      form = response_doc.css('form').first\n-      form['action'].should == '/claims'\n-      form['method'].should == 'POST'\n-    end\n-\n-    it 'does not create an owner if no pods are specified' do\n-      lambda do\n-        post '/', :owner => { :email => 'appie@example.com', :name => 'Appie Duran' }, :pods => []\n-      end.should.not.change { Owner.count }\n-      last_response.status.should == 200\n-      form = response_doc.css('form').first\n-      form.css('input[name=\"owner[email]\"]').first['value'].should == 'appie@example.com'\n-      form.css('input[name=\"owner[name]\"]').first['value'].should == 'Appie Duran'\n-    end\n-\n-    before do\n-      @pod = Owner.unclaimed.add_pod(:name => 'AFNetworking')\n-    end\n-\n-    it 'creates an owner and assigns it to the claimed pods' do\n-      lambda do\n-        post '/', :owner => { :email => 'appie@example.com', :name => 'Appie Duran' }, :pods => ['AFNetworking']\n-      end.should.change { Owner.count }\n-      owner = Owner.find_by_email('appie@example.com')\n-      owner.name.should == 'Appie Duran'\n-      @pod.reload.owners.should == [owner]\n-    end\n-\n-    it 'finds an existing owner and assigns it to the claimed pods' do\n-      owner = Owner.create(:email => 'appie@example.com', :name => 'Appie Duran')\n-      lambda do\n-        post '/', :owner => { :email => 'appie@example.com' }, :pods => ['AFNetworking']\n-      end.should.not.change { Owner.count }\n-      @pod.reload.owners.should == [owner]\n-    end\n-\n-    it \"finds an existing owner and doesn't update its name\" do\n-      owner = Owner.create(:email => 'appie@example.com', :name => 'Appie Duran')\n-      post '/', :owner => { :email => 'appie@example.com', :name => 'Appiepocalypse' }, :pods => ['AFNetworking']\n-      owner.reload.name.should == 'Appie Duran'\n-    end\n-\n-    it 'does not assign a pod that has already been claimed' do\n-      other_pod = Pod.create(:name => 'ObjectiveSugar')\n-      other_owner = Owner.create(:email => 'jenny@example.com', :name => 'Jenny Penny')\n-      other_owner.add_pod(other_pod)\n-      post '/', :owner => { :email => 'appie@example.com', :name => 'Appie Duran' },\n-                :pods => %w[AFNetworking ObjectiveSugar]\n-      owner = Owner.find_by_email('appie@example.com')\n-      @pod.reload.owners.should == [owner]\n-      other_pod.reload.owners.should == [other_owner]\n-      last_response.status.should == 302\n-      query = { :claimer_email => owner.email, :successfully_claimed => ['AFNetworking'],\n-                :already_claimed => ['ObjectiveSugar'] }\n-      last_response.location.should == \"https://example.org/thanks?#{query.to_query}\"\n-    end\n-\n-    it 'immediately redirects to the dispute page if all pods are claimed' do\n-      @pod.remove_owner(Owner.unclaimed)\n-      owner = Owner.create(:email => 'jenny@example.com', :name => 'Jenny Penny')\n-      owner.add_pod(@pod)\n-      lambda do\n-        post '/', :owner => { :email => 'appie@example.com', :name => 'Appie Duran' }, :pods => ['AFNetworking']\n-      end.should.change { Owner.count }\n-      last_response.status.should == 302\n-      uri = URI.parse(last_response.location)\n-      uri.path.should == '/disputes/new'\n-      query = { 'claimer_email' => 'appie@example.com', 'pods[]' => 'AFNetworking' }\n-      Rack::Utils.parse_query(uri.query).should == query\n-      Owner.find_by_email('appie@example.com').should.not.be.nil\n-    end\n-\n-    it 'rolls back in case of an error' do\n-      Pod.any_instance.stubs(:remove_owner).raises\n-      lambda do\n-        should.raise do\n-          post('/',\n-               :owner => {\n-                 :email => 'appie@example.com',\n-                 :name => 'Appie Duran',\n-               },\n-               :pods => ['AFNetworking'])\n-        end\n-      end.should.not.change { Owner.count }\n-      @pod.reload.owners.should == [Owner.unclaimed]\n-    end\n-\n-    it 'shows validation errors' do\n-      post('/',\n-           :owner => { :email => 'appie@example.com', :name => '' },\n-           :pods => %w[AFNetworking EYFNetworking JAYSONKit])\n-      last_response.status.should == 200\n-      @pod.reload.owners.should == [Owner.unclaimed]\n-      errors = response_doc.css('.errors li')\n-      errors.first.text.should == 'Owner name is not present.'\n-      errors.last.text.should == 'Unknown Pods EYFNetworking and JAYSONKit.'\n-    end\n-\n-    it 'shows a thanks page' do\n-      get('/thanks',\n-          :claimer_email => 'appie@example.com',\n-          :successfully_claimed => ['AFNetworking'],\n-          :already_claimed => ['JSONKit'])\n-      last_response.status.should == 200\n-      last_response.body.should.include 'AFNetworking'\n-      last_response.body.should.include 'JSONKit'\n-\n-      link = response_doc.css('article p a')[2]\n-      query = { :claimer_email => 'appie@example.com', :pods => ['JSONKit'] }\n-      link['href'].should == \"https://example.org/disputes/new?#{query.to_query}\"\n-    end\n-  end\n-\n-  describe ClaimsController, 'concerning disputes' do\n+    describe ClaimsController, 'concerning disputes' do\n     before do\n       @owner = Owner.create(:email => 'jenny@example.com', :name => 'Jenny Penny')\n       @pod = @owner.add_pod(:name => 'AFNetworking')"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 3,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "4a7d62682b8d52577158915ea2eb6c46483791fa",
            "date": "2024-11-18T21:05:18Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "cf8f26c9bd7e4bca7d305a55b6fcd4596d47c472",
            "date": "2024-11-06T03:29:49Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "4f7fed5fee67a312373d05633e5033079d86247b",
            "date": "2024-11-05T03:07:01Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "431513b8c0f8f7e8e3c0b91eff7abf6e7cfd6ddc",
            "date": "2024-11-04T03:24:36Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "e90d65c3f0b48367bddb0f27cca6ca38871b6ea7",
            "date": "2024-11-01T03:15:25Z",
            "author_login": "dependabot[bot]"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:N/I:H/A:L",
    "cwe_id": "CWE-668",
    "description": "trunk.cocoapods.org is the authentication server for the CoacoaPods dependency manager. A vulnerability affected older pods which migrated from the pre-2014 pull request workflow to trunk. If the pods had never been claimed then it was still possible to do so. It was also possible to have all owners removed from a pod, and that made the pod available for the same claiming system. This was patched server-side in commit 71be5440906b6bdfbc0bcc7f8a9fec33367ea0f4 in September 2023.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-07-01T21:15:04.250",
    "last_modified": "2024-11-21T09:25:28.737",
    "fix_date": "2023-09-22T11:40:00Z"
  },
  "references": [
    {
      "url": "https://blog.cocoapods.org/Claim-Your-Pods",
      "source": "security-advisories@github.com",
      "tags": [
        "Product"
      ]
    },
    {
      "url": "https://blog.cocoapods.org/CocoaPods-Trunk-RCEs-2023",
      "source": "security-advisories@github.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://evasec.webflow.io/blog/eva-discovered-supply-chain-vulnerabities-in-cocoapods#1-taking-unauthorized-ownership-over-orphaned-pods",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/CocoaPods/CocoaPods/security/advisories/GHSA-j483-qm5c-7hqx",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/CocoaPods/trunk.cocoapods.org/commit/71be5440906b6bdfbc0bcc7f8a9fec33367ea0f4",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://blog.cocoapods.org/Claim-Your-Pods",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Product"
      ]
    },
    {
      "url": "https://blog.cocoapods.org/CocoaPods-Trunk-RCEs-2023",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://evasec.webflow.io/blog/eva-discovered-supply-chain-vulnerabities-in-cocoapods#1-taking-unauthorized-ownership-over-orphaned-pods",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/CocoaPods/CocoaPods/security/advisories/GHSA-j483-qm5c-7hqx",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/CocoaPods/trunk.cocoapods.org/commit/71be5440906b6bdfbc0bcc7f8a9fec33367ea0f4",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:28.881472",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "trunk.cocoapods.org",
    "owner": "CocoaPods",
    "created_at": "2013-04-06T13:33:05Z",
    "updated_at": "2024-11-18T21:05:22Z",
    "pushed_at": "2025-01-13T03:35:27Z",
    "size": 1674,
    "stars": 40,
    "forks": 16,
    "open_issues": 81,
    "watchers": 40,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "Ruby": 235112,
      "HTML": 20879,
      "Slim": 9275,
      "CSS": 4050,
      "Procfile": 42
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T15:38:10.294026"
  }
}