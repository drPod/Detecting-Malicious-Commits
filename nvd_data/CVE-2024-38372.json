{
  "cve_id": "CVE-2024-38372",
  "github_data": {
    "repository": "nodejs/undici",
    "fix_commit": "f979ec3204ca489abf30e7d20e9fee9ea7711d36",
    "related_commits": [
      "f979ec3204ca489abf30e7d20e9fee9ea7711d36",
      "f979ec3204ca489abf30e7d20e9fee9ea7711d36"
    ],
    "patch_url": "https://github.com/nodejs/undici/commit/f979ec3204ca489abf30e7d20e9fee9ea7711d36.patch",
    "fix_commit_details": {
      "sha": "f979ec3204ca489abf30e7d20e9fee9ea7711d36",
      "commit_date": "2024-04-15T17:54:28Z",
      "author": {
        "login": "tsctx",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "perf: avoid unnecessary clone (#3117)",
        "length": 115,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 59,
        "additions": 46,
        "deletions": 13
      },
      "files": [
        {
          "filename": "benchmarks/fetch/body-arraybuffer.mjs",
          "status": "added",
          "additions": 24,
          "deletions": 0,
          "patch": "@@ -0,0 +1,24 @@\n+import { group, bench, run } from 'mitata'\n+import { Response } from '../../lib/web/fetch/response.js'\n+\n+const settings = {\n+  small: 2 << 8,\n+  middle: 2 << 12,\n+  long: 2 << 16\n+}\n+\n+for (const [name, length] of Object.entries(settings)) {\n+  const buffer = Buffer.allocUnsafe(length).map(() => (Math.random() * 100) | 0)\n+  group(`${name} (length ${length})`, () => {\n+    bench('Response#arrayBuffer', async () => {\n+      return await new Response(buffer).arrayBuffer()\n+    })\n+\n+    // for comparison\n+    bench('Response#text', async () => {\n+      return await new Response(buffer).text()\n+    })\n+  })\n+}\n+\n+await run()"
        },
        {
          "filename": "lib/web/fetch/body.js",
          "status": "modified",
          "additions": 11,
          "deletions": 9,
          "patch": "@@ -309,7 +309,7 @@ function bodyMixinMethods (instance) {\n         // Return a Blob whose contents are bytes and type attribute\n         // is mimeType.\n         return new Blob([bytes], { type: mimeType })\n-      }, instance)\n+      }, instance, false)\n     },\n \n     arrayBuffer () {\n@@ -318,20 +318,21 @@ function bodyMixinMethods (instance) {\n       // given a byte sequence bytes: return a new ArrayBuffer\n       // whose contents are bytes.\n       return consumeBody(this, (bytes) => {\n-        return new Uint8Array(bytes).buffer\n-      }, instance)\n+        // Note: arrayBuffer already cloned.\n+        return bytes.buffer\n+      }, instance, true)\n     },\n \n     text () {\n       // The text() method steps are to return the result of running\n       // consume body with this and UTF-8 decode.\n-      return consumeBody(this, utf8DecodeBytes, instance)\n+      return consumeBody(this, utf8DecodeBytes, instance, false)\n     },\n \n     json () {\n       // The json() method steps are to return the result of running\n       // consume body with this and parse JSON from bytes.\n-      return consumeBody(this, parseJSONFromBytes, instance)\n+      return consumeBody(this, parseJSONFromBytes, instance, false)\n     },\n \n     formData () {\n@@ -383,7 +384,7 @@ function bodyMixinMethods (instance) {\n         throw new TypeError(\n           'Content-Type was not one of \"multipart/form-data\" or \"application/x-www-form-urlencoded\".'\n         )\n-      }, instance)\n+      }, instance, false)\n     }\n   }\n \n@@ -399,8 +400,9 @@ function mixinBody (prototype) {\n  * @param {Response|Request} object\n  * @param {(value: unknown) => unknown} convertBytesToJSValue\n  * @param {Response|Request} instance\n+ * @param {boolean} [shouldClone]\n  */\n-async function consumeBody (object, convertBytesToJSValue, instance) {\n+async function consumeBody (object, convertBytesToJSValue, instance, shouldClone) {\n   webidl.brandCheck(object, instance)\n \n   // 1. If object is unusable, then return a promise rejected\n@@ -432,13 +434,13 @@ async function consumeBody (object, convertBytesToJSValue, instance) {\n   // 5. If object\u2019s body is null, then run successSteps with an\n   //    empty byte sequence.\n   if (object[kState].body == null) {\n-    successSteps(new Uint8Array())\n+    successSteps(Buffer.allocUnsafe(0))\n     return promise.promise\n   }\n \n   // 6. Otherwise, fully read object\u2019s body given successSteps,\n   //    errorSteps, and object\u2019s relevant global object.\n-  await fullyReadBody(object[kState].body, successSteps, errorSteps)\n+  await fullyReadBody(object[kState].body, successSteps, errorSteps, shouldClone)\n \n   // 7. Return promise.\n   return promise.promise"
        },
        {
          "filename": "lib/web/fetch/util.js",
          "status": "modified",
          "additions": 11,
          "deletions": 4,
          "patch": "@@ -1043,7 +1043,7 @@ function iteratorMixin (name, object, kInternalIterator, keyIndex = 0, valueInde\n /**\n  * @see https://fetch.spec.whatwg.org/#body-fully-read\n  */\n-async function fullyReadBody (body, processBody, processBodyError) {\n+async function fullyReadBody (body, processBody, processBodyError, shouldClone) {\n   // 1. If taskDestination is null, then set taskDestination to\n   //    the result of starting a new parallel queue.\n \n@@ -1069,8 +1069,7 @@ async function fullyReadBody (body, processBody, processBodyError) {\n \n   // 5. Read all bytes from reader, given successSteps and errorSteps.\n   try {\n-    const result = await readAllBytes(reader)\n-    successSteps(result)\n+    successSteps(await readAllBytes(reader, shouldClone))\n   } catch (e) {\n     errorSteps(e)\n   }\n@@ -1118,8 +1117,9 @@ function isomorphicEncode (input) {\n  * @see https://streams.spec.whatwg.org/#readablestreamdefaultreader-read-all-bytes\n  * @see https://streams.spec.whatwg.org/#read-loop\n  * @param {ReadableStreamDefaultReader} reader\n+ * @param {boolean} [shouldClone]\n  */\n-async function readAllBytes (reader) {\n+async function readAllBytes (reader, shouldClone) {\n   const bytes = []\n   let byteLength = 0\n \n@@ -1128,6 +1128,13 @@ async function readAllBytes (reader) {\n \n     if (done) {\n       // 1. Call successSteps with bytes.\n+      if (bytes.length === 1) {\n+        const { buffer, byteOffset, byteLength } = bytes[0]\n+        if (shouldClone === false) {\n+          return Buffer.from(buffer, byteOffset, byteLength)\n+        }\n+        return Buffer.from(buffer.slice(byteOffset, byteOffset + byteLength), 0, byteLength)\n+      }\n       return Buffer.concat(bytes, byteLength)\n     }\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "e3928edfc3c121e170ee6068f36e4c878ee09b14",
            "date": "2025-01-14T08:03:33Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "c4ee20f8d0f565f91621ad20088b44e39372fcd0",
            "date": "2025-01-14T07:55:21Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "fd01347b6e2dc2163033dc8db33a61c0d6157d80",
            "date": "2025-01-14T07:40:50Z",
            "author_login": "luddd3"
          },
          {
            "sha": "45eaed232577e9b66d2f0a596eb018c79e098541",
            "date": "2025-01-10T08:47:52Z",
            "author_login": "github-actions[bot]"
          },
          {
            "sha": "251da10da915b70bf576777ca0734bba8eb38f96",
            "date": "2025-01-09T15:02:48Z",
            "author_login": "github-actions[bot]"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 2.0,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:H/UI:R/S:U/C:L/I:N/A:N",
    "cwe_id": "CWE-201",
    "description": "Undici is an HTTP/1.1 client, written from scratch for Node.js. Depending on network and process conditions of a `fetch()` request, `response.arrayBuffer()` might include portion of memory from the Node.js process. This has been patched in v6.19.2.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2024-07-08T21:15:12.033",
    "last_modified": "2024-11-21T09:25:31.153",
    "fix_date": "2024-04-15T17:54:28Z"
  },
  "references": [
    {
      "url": "https://github.com/nodejs/undici/commit/f979ec3204ca489abf30e7d20e9fee9ea7711d36",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/nodejs/undici/issues/3328",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/nodejs/undici/issues/3337",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/nodejs/undici/pull/3338",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/nodejs/undici/security/advisories/GHSA-3g92-w8c5-73pq",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/nodejs/undici/commit/f979ec3204ca489abf30e7d20e9fee9ea7711d36",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/nodejs/undici/issues/3328",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/nodejs/undici/issues/3337",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/nodejs/undici/pull/3338",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/nodejs/undici/security/advisories/GHSA-3g92-w8c5-73pq",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://security.netapp.com/advisory/ntap-20240828-0009/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:31.419281",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "undici",
    "owner": "nodejs",
    "created_at": "2018-05-11T22:07:48Z",
    "updated_at": "2025-01-14T10:47:28Z",
    "pushed_at": "2025-01-14T08:03:41Z",
    "size": 11610,
    "stars": 6484,
    "forks": 572,
    "open_issues": 235,
    "watchers": 6484,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main"
    ],
    "languages": {
      "JavaScript": 2463022,
      "TypeScript": 82943,
      "Shell": 170
    },
    "commit_activity": {
      "total_commits_last_year": 793,
      "avg_commits_per_week": 15.25,
      "days_active_last_year": 256
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T14:08:47.167142"
  }
}