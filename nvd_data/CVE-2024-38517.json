{
  "cve_id": "CVE-2024-38517",
  "github_data": {
    "repository": "fmalita/rapidjson",
    "fix_commit": "8269bc2bc289e9d343bae51cdf6d23ef0950e001",
    "related_commits": [
      "8269bc2bc289e9d343bae51cdf6d23ef0950e001",
      "8269bc2bc289e9d343bae51cdf6d23ef0950e001"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "8269bc2bc289e9d343bae51cdf6d23ef0950e001",
      "commit_date": "2018-05-16T02:48:07Z",
      "author": {
        "login": "fmalita",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Prevent int underflow when parsing exponents",
        "length": 459,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 12,
        "additions": 11,
        "deletions": 1
      },
      "files": [
        {
          "filename": "include/rapidjson/reader.h",
          "status": "modified",
          "additions": 10,
          "deletions": 1,
          "patch": "@@ -1632,9 +1632,18 @@ class GenericReader {\n             if (RAPIDJSON_LIKELY(s.Peek() >= '0' && s.Peek() <= '9')) {\n                 exp = static_cast<int>(s.Take() - '0');\n                 if (expMinus) {\n+                    // (exp + expFrac) must not underflow int => we're detecting when -exp gets\n+                    // dangerously close to INT_MIN (a pessimistic next digit 9 would push it into\n+                    // underflow territory):\n+                    //\n+                    //        -(exp * 10 + 9) + expFrac >= INT_MIN\n+                    //   <=>  exp <= (expFrac - INT_MIN - 9) / 10\n+                    RAPIDJSON_ASSERT(expFrac <= 0);\n+                    int maxExp = (expFrac + 2147483639) / 10;\n+\n                     while (RAPIDJSON_LIKELY(s.Peek() >= '0' && s.Peek() <= '9')) {\n                         exp = exp * 10 + static_cast<int>(s.Take() - '0');\n-                        if (exp >= 214748364) {                         // Issue #313: prevent overflow exponent\n+                        if (RAPIDJSON_UNLIKELY(exp > maxExp)) {\n                             while (RAPIDJSON_UNLIKELY(s.Peek() >= '0' && s.Peek() <= '9'))  // Consume the rest of exponent\n                                 s.Take();\n                         }"
        },
        {
          "filename": "test/unittest/readertest.cpp",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -242,6 +242,7 @@ static void TestParseDouble() {\n     TEST_DOUBLE(fullPrecision, \"1e-214748363\", 0.0);                                  // Maximum supported negative exponent\n     TEST_DOUBLE(fullPrecision, \"1e-214748364\", 0.0);\n     TEST_DOUBLE(fullPrecision, \"1e-21474836311\", 0.0);\n+    TEST_DOUBLE(fullPrecision, \"1.00000000001e-2147483638\", 0.0);\n     TEST_DOUBLE(fullPrecision, \"0.017976931348623157e+310\", 1.7976931348623157e+308); // Max double in another form\n \n     // Since"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "a0910358467432b9b3dee5ad57fe05075fe49b8f",
            "date": "2018-05-04T02:11:59Z",
            "author_login": "miloyip"
          },
          {
            "sha": "d0a78bf56e57f9813224523700818ca385209ab6",
            "date": "2018-05-03T12:11:16Z",
            "author_login": "ksergey"
          },
          {
            "sha": "b32cd9421c5e3cbe183a99b6537ce11441e50656",
            "date": "2018-04-25T02:13:55Z",
            "author_login": "miloyip"
          },
          {
            "sha": "ed72564e31867a0f6ee669f59fd81a2d2b71c676",
            "date": "2018-04-25T02:13:19Z",
            "author_login": "miloyip"
          },
          {
            "sha": "73b8774ab16c6474c4759853059fdfdf7559b5c9",
            "date": "2018-04-24T21:55:47Z",
            "author_login": "steveire"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.8,
    "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-191",
    "description": "Tencent RapidJSON is vulnerable to privilege escalation due to an integer underflow in the `GenericReader::ParseNumber()` function of `include/rapidjson/reader.h` when parsing JSON text from a stream. An attacker needs to send the victim a crafted file which needs to be opened; this triggers the integer underflow vulnerability (when the file is parsed), leading to elevation of privilege.",
    "attack_vector": "LOCAL",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-07-09T19:15:12.470",
    "last_modified": "2024-11-21T09:26:08.690",
    "fix_date": "2018-05-16T02:48:07Z"
  },
  "references": [
    {
      "url": "https://github.com/Tencent/rapidjson/pull/1261/commits/8269bc2bc289e9d343bae51cdf6d23ef0950e001",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/fmalita/rapidjson/commit/8269bc2bc289e9d343bae51cdf6d23ef0950e001",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-38517",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/Tencent/rapidjson/pull/1261/commits/8269bc2bc289e9d343bae51cdf6d23ef0950e001",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/fmalita/rapidjson/commit/8269bc2bc289e9d343bae51cdf6d23ef0950e001",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-38517",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://security.netapp.com/advisory/ntap-20240905-0001/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:31.458041",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "rapidjson",
    "owner": "fmalita",
    "created_at": "2018-05-15T13:48:46Z",
    "updated_at": "2018-05-15T13:48:49Z",
    "pushed_at": "2018-05-16T02:55:49Z",
    "size": 23893,
    "stars": 0,
    "forks": 0,
    "open_issues": 0,
    "watchers": 0,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C++": 1191557,
      "C": 24295,
      "CMake": 16241,
      "Python": 9059,
      "Shell": 3227,
      "JavaScript": 94
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-26T07:51:11.927857"
  }
}