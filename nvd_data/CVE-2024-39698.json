{
  "cve_id": "CVE-2024-39698",
  "github_data": {
    "repository": "electron-userland/electron-builder",
    "fix_commit": "ac2e6a25aa491c1ef5167a552c19fc2085cd427f",
    "related_commits": [
      "ac2e6a25aa491c1ef5167a552c19fc2085cd427f",
      "ac2e6a25aa491c1ef5167a552c19fc2085cd427f"
    ],
    "patch_url": "https://github.com/electron-userland/electron-builder/commit/ac2e6a25aa491c1ef5167a552c19fc2085cd427f.patch",
    "fix_commit_details": {
      "sha": "ac2e6a25aa491c1ef5167a552c19fc2085cd427f",
      "commit_date": "2024-07-05T16:06:33Z",
      "author": {
        "login": "mmaietta",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "fix: verify LiteralPath of update file during windows signature verification (#8295)",
        "length": 84,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 19,
        "additions": 18,
        "deletions": 1
      },
      "files": [
        {
          "filename": ".changeset/nervous-carrots-begin.md",
          "status": "added",
          "additions": 5,
          "deletions": 0,
          "patch": "@@ -0,0 +1,5 @@\n+---\n+\"electron-updater\": patch\n+---\n+\n+fix: verify LiteralPath of update file during windows signature verification"
        },
        {
          "filename": "packages/electron-updater/src/windowsExecutableCodeSignatureVerifier.ts",
          "status": "modified",
          "additions": 13,
          "deletions": 1,
          "patch": "@@ -2,6 +2,7 @@ import { parseDn } from \"builder-util-runtime\"\n import { execFile, execFileSync } from \"child_process\"\n import * as os from \"os\"\n import { Logger } from \"./main\"\n+import * as path from \"path\"\n \n // $certificateInfo = (Get-AuthenticodeSignature 'xxx\\yyy.exe'\n // | where {$_.Status.Equals([System.Management.Automation.SignatureStatus]::Valid) -and $_.SignerCertificate.Subject.Contains(\"CN=siemens.com\")})\n@@ -48,6 +49,18 @@ export function verifySignature(publisherNames: Array<string>, unescapedTempUpda\n           }\n           const data = parseOut(stdout)\n           if (data.Status === 0) {\n+            try {\n+              const normlaizedUpdateFilePath = path.normalize(data.Path)\n+              const normalizedTempUpdateFile = path.normalize(unescapedTempUpdateFile)\n+              logger.info(`LiteralPath: ${normlaizedUpdateFilePath}. Update Path: ${normalizedTempUpdateFile}`)\n+              if (normlaizedUpdateFilePath !== normalizedTempUpdateFile) {\n+                handleError(logger, new Error(`LiteralPath of ${normlaizedUpdateFilePath} is different than ${normalizedTempUpdateFile}`), stderr, reject)\n+                resolve(null)\n+                return\n+              }\n+            } catch (error: any) {\n+              logger.warn(`Unable to verify LiteralPath of update asset due to missing data.Path. Skipping this step of validation. Message: ${error.message ?? error.stack}`)\n+            }\n             const subject = parseDn(data.SignerCertificate.Subject)\n             let match = false\n             for (const name of publisherNames) {\n@@ -96,7 +109,6 @@ function parseOut(out: string): any {\n     // duplicates data.SignerCertificate (contains RawData)\n     delete signerCertificate.SubjectName\n   }\n-  delete data.Path\n   return data\n }\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "ccbf0a5be38e1d8e405ed9d2bc9f3b2755548182",
            "date": "2025-01-14T01:44:28Z",
            "author_login": "beyondkmp"
          },
          {
            "sha": "6a9597b4d739744fd9211fc07f55bb34211c7626",
            "date": "2025-01-13T01:49:27Z",
            "author_login": "mmaietta"
          },
          {
            "sha": "c4f54977045ad3f6f7637004f632c37bfb41e79a",
            "date": "2025-01-08T18:21:24Z",
            "author_login": "mmaietta"
          },
          {
            "sha": "5c4472510a9dbefbe781aaa50252d9ad78b9f8ed",
            "date": "2024-12-31T21:13:03Z",
            "author_login": "mmaietta"
          },
          {
            "sha": "f123628ce400b5e65d0e4f0966e5cc65a1f3b8a5",
            "date": "2024-12-31T19:09:04Z",
            "author_login": "mmaietta"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-154",
    "description": "electron-updater allows for automatic updates for Electron apps. The file `packages/electron-updater/src/windowsExecutableCodeSignatureVerifier.ts` implements the signature validation routine for Electron applications on Windows. Because of the surrounding shell, a first pass by `cmd.exe` expands any environment variable found in command-line above. This creates a situation where `verifySignature()` can be tricked into validating the certificate of a different file than the one that was just downloaded. If the step is successful, the malicious update will be executed even if its signature is invalid. This attack assumes a compromised update manifest (server compromise, Man-in-the-Middle attack if fetched over HTTP, Cross-Site Scripting to point the application to a malicious updater server, etc.). The patch is available starting from 6.3.0-alpha.6.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2024-07-09T18:15:10.863",
    "last_modified": "2024-11-21T09:28:14.690",
    "fix_date": "2024-07-05T16:06:33Z"
  },
  "references": [
    {
      "url": "https://github.com/electron-userland/electron-builder/blob/140e2f0eb0df79c2a46e35024e96d0563355fc89/packages/electron-updater/src/windowsExecutableCodeSignatureVerifier.ts#L35-L41",
      "source": "security-advisories@github.com",
      "tags": [
        "Product"
      ]
    },
    {
      "url": "https://github.com/electron-userland/electron-builder/commit/ac2e6a25aa491c1ef5167a552c19fc2085cd427f",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/electron-userland/electron-builder/pull/8295",
      "source": "security-advisories@github.com",
      "tags": [
        "Issue Tracking",
        "Patch"
      ]
    },
    {
      "url": "https://github.com/electron-userland/electron-builder/security/advisories/GHSA-9jxc-qjr9-vjxq",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/electron-userland/electron-builder/blob/140e2f0eb0df79c2a46e35024e96d0563355fc89/packages/electron-updater/src/windowsExecutableCodeSignatureVerifier.ts#L35-L41",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Product"
      ]
    },
    {
      "url": "https://github.com/electron-userland/electron-builder/commit/ac2e6a25aa491c1ef5167a552c19fc2085cd427f",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/electron-userland/electron-builder/pull/8295",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking",
        "Patch"
      ]
    },
    {
      "url": "https://github.com/electron-userland/electron-builder/security/advisories/GHSA-9jxc-qjr9-vjxq",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:31.425206",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "electron-builder",
    "owner": "electron-userland",
    "created_at": "2015-05-21T07:45:02Z",
    "updated_at": "2025-01-14T14:00:48Z",
    "pushed_at": "2025-01-14T01:45:27Z",
    "size": 138186,
    "stars": 13788,
    "forks": 1747,
    "open_issues": 370,
    "watchers": 13788,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "TypeScript": 1237558,
      "NSIS": 92823,
      "JavaScript": 22344,
      "Shell": 8642,
      "Dockerfile": 3731,
      "Smarty": 369,
      "CSS": 264
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T19:56:47.088940"
  }
}