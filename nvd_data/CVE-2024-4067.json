{
  "cve_id": "CVE-2024-4067",
  "github_data": {
    "repository": "micromatch/micromatch",
    "fix_commit": "03aa8052171e878897eee5d7bb2ae0ae83ec2ade",
    "related_commits": [
      "03aa8052171e878897eee5d7bb2ae0ae83ec2ade"
    ],
    "patch_url": "https://github.com/micromatch/micromatch/commit/03aa8052171e878897eee5d7bb2ae0ae83ec2ade.patch",
    "fix_commit_details": {
      "sha": "03aa8052171e878897eee5d7bb2ae0ae83ec2ade",
      "commit_date": "2024-08-23T16:13:00Z",
      "author": {
        "login": "doowb",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Merge pull request #266 from hauserkristof/feature/v4.0.8",
        "length": 107,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 89,
        "additions": 71,
        "deletions": 18
      },
      "files": [
        {
          "filename": ".github/workflows/test.yml",
          "status": "modified",
          "additions": 15,
          "deletions": 1,
          "patch": "@@ -13,10 +13,24 @@ jobs:\n       matrix:\n         os: [ubuntu-latest, windows-latest, macos-latest]\n         node-version: [10, 12, 14, 16, 17]\n+        exclude:\n+          - os: macos-latest\n+            node-version: 10\n+          - os: macos-latest\n+            node-version: 12\n+          - os: macos-latest\n+            node-version: 14\n+        include:\n+          - os: macos-13\n+            node-version: 10\n+          - os: macos-13\n+            node-version: 12\n+          - os: macos-13\n+            node-version: 14\n \n     steps:\n       - uses: actions/checkout@v2\n-      - uses: actions/setup-node@v1\n+      - uses: actions/setup-node@v4\n         with:\n           node-version: ${{ matrix.node-version }}\n       - run: npm install"
        },
        {
          "filename": "CHANGELOG.md",
          "status": "modified",
          "additions": 31,
          "deletions": 14,
          "patch": "@@ -32,6 +32,26 @@ Changelog entries are classified using the following labels _(from [keep-a-chang\n \n </details>\n \n+## [4.0.8] - 2024-08-22\n+\n+- backported CVE-2024-4067 fix (from v4.0.6) over to 4.x branch\n+\n+## [4.0.7] - 2024-05-22\n+\n+- this is basically v4.0.5, with some README updates\n+- **it is vulnerable to CVE-2024-4067**\n+- Updated braces to v3.0.3 to avoid CVE-2024-4068\n+- does NOT break API compatibility\n+\n+## [4.0.6] - 2024-05-21\n+\n+- Added `hasBraces` to check if a pattern contains braces.\n+- Fixes CVE-2024-4067\n+- **BREAKS API COMPATIBILITY**\n+- Should be labeled as a major release, but it's not.\n+\n+## [4.0.1 - 4.0.5]\n+\n ## [4.0.0] - 2019-03-20\n \n ### Added\n@@ -40,7 +60,6 @@ Changelog entries are classified using the following labels _(from [keep-a-chang\n - Adds support for `options.onIgnore`. See the readme for details\n - Adds support for `options.onResult`. See the readme for details\n \n-\n ### Breaking changes\n \n - Require Node.js >= 8.6\n@@ -56,9 +75,9 @@ Changelog entries are classified using the following labels _(from [keep-a-chang\n \n Complete overhaul, with 36,000+ new unit tests validated against actual output generated by Bash and minimatch. More specifically, 35,000+ of the tests:\n \n- - micromatch results are directly compared to bash results\n- - in rare cases, when micromatch and bash disagree, micromatch's results are compared to minimatch's results\n- - micromatch is much more accurate than minimatch, so there were cases where I had to make assumptions. I'll try to document these.\n+- micromatch results are directly compared to bash results\n+- in rare cases, when micromatch and bash disagree, micromatch's results are compared to minimatch's results\n+- micromatch is much more accurate than minimatch, so there were cases where I had to make assumptions. I'll try to document these.\n \n This refactor introduces a parser and compiler that are supersets of more granular parsers and compilers from other sub-modules. Each of these sub-modules has a singular responsibility and focuses on a certain type of matching that aligns with a specific part of the Bash \"expansion\" API.\n \n@@ -73,20 +92,20 @@ Here are those sub-modules with links to related prs on those modules if you wan\n \n **Added**\n \n- - source map support (optionally created when using parse or compile - I have no idea what the use case is yet, but they come for free) (note that source maps are not generated for brace expansion at present, since the braces compiler uses a different strategy. I'll update if/when this changes).\n- - parser is exposed, so that implementors can customize or override specific micromatch parsers if necessary\n- - compiler is exposed, so that implementors can customize or override specific micromatch compilers if necessary\n+- source map support (optionally created when using parse or compile - I have no idea what the use case is yet, but they come for free) (note that source maps are not generated for brace expansion at present, since the braces compiler uses a different strategy. I'll update if/when this changes).\n+- parser is exposed, so that implementors can customize or override specific micromatch parsers if necessary\n+- compiler is exposed, so that implementors can customize or override specific micromatch compilers if necessary\n \n **Fixed**\n \n- - more accurate matching (passes 100% of Bash 4.3 of the brace expansion and extglob unit tests, as well as all Bash glob tests that are relevant to node.js usage, all minimatch tests, all brace-expansion tests, and also passes a couple of tests that bash fails)\n- - even safer - micromatch has always generated optimized patterns so it's not subject to DoS exploits like minimatch (completely different than the regex DoS issue, minimatch and multimatch are still openly exposed to being used for DoS attacks), but more safeguards were built into this refactor\n+- more accurate matching (passes 100% of Bash 4.3 of the brace expansion and extglob unit tests, as well as all Bash glob tests that are relevant to node.js usage, all minimatch tests, all brace-expansion tests, and also passes a couple of tests that bash fails)\n+- even safer - micromatch has always generated optimized patterns so it's not subject to DoS exploits like minimatch (completely different than the regex DoS issue, minimatch and multimatch are still openly exposed to being used for DoS attacks), but more safeguards were built into this refactor\n \n **Changed**\n \n- - the public API of this library did not change in this version and should be safe to upgrade without changing implentor code. However, we have released this as a major version for the following reasons:\n-   - out of an abundance of caution due to the large amount of code changed in this release\n-   - we have improved parser accuracy to such a degree that some implementors using invalid globs have noted change in behavior. If this is the case for you, please check that you are using a valid glob expression before logging a bug with this library\n+- the public API of this library did not change in this version and should be safe to upgrade without changing implentor code. However, we have released this as a major version for the following reasons:\n+  - out of an abundance of caution due to the large amount of code changed in this release\n+  - we have improved parser accuracy to such a degree that some implementors using invalid globs have noted change in behavior. If this is the case for you, please check that you are using a valid glob expression before logging a bug with this library\n \n ## [1.0.1] - 2016-12-12\n \n@@ -102,8 +121,6 @@ Stable release.\n \n First release.\n \n-\n [Unreleased]: https://github.com/jonschlinkert/micromatch/compare/0.1.0...HEAD\n [0.2.0]: https://github.com/jonschlinkert/micromatch/compare/0.1.0...0.2.0\n-\n [keep-a-changelog]: https://github.com/olivierlacan/keep-a-changelog"
        },
        {
          "filename": "index.js",
          "status": "modified",
          "additions": 8,
          "deletions": 2,
          "patch": "@@ -4,8 +4,12 @@ const util = require('util');\n const braces = require('braces');\n const picomatch = require('picomatch');\n const utils = require('picomatch/lib/utils');\n-const isEmptyString = val => val === '' || val === './';\n \n+const isEmptyString = (v) => v === \"\" || v === \"./\";\n+const hasBraces = (v) => {\n+  const index = v.indexOf(\"{\");\n+  return index > -1 && v.indexOf(\"}\", index) > -1;\n+};\n /**\n  * Returns an array of strings that match one or more glob patterns.\n  *\n@@ -445,7 +449,7 @@ micromatch.parse = (patterns, options) => {\n \n micromatch.braces = (pattern, options) => {\n   if (typeof pattern !== 'string') throw new TypeError('Expected a string');\n-  if ((options && options.nobrace === true) || !/\\{.*\\}/.test(pattern)) {\n+  if ((options && options.nobrace === true) || !hasBraces(pattern)) {\n     return [pattern];\n   }\n   return braces(pattern, options);\n@@ -464,4 +468,6 @@ micromatch.braceExpand = (pattern, options) => {\n  * Expose micromatch\n  */\n \n+// exposed for tests\n+micromatch.hasBraces = hasBraces;\n module.exports = micromatch;"
        },
        {
          "filename": "test/braces.js",
          "status": "modified",
          "additions": 17,
          "deletions": 1,
          "patch": "@@ -2,9 +2,25 @@\n \n const assert = require('assert');\n const mm = require('..');\n-const { isMatch, makeRe } = mm;\n+const { isMatch, hasBraces } = mm;\n \n describe('braces', () => {\n+    it(\"should return true when braces are found\", () => {\n+      assert.equal(hasBraces(\"{foo}\"), true);\n+      assert.equal(hasBraces(\"foo}\"), false);\n+      assert.equal(hasBraces(\"{foo\"), false);\n+      assert.equal(hasBraces(\"a{}b\"), true);\n+      assert.equal(hasBraces(\"abc {foo} xyz\"), true);\n+      assert.equal(hasBraces(\"abc {foo xyz\"), false);\n+      assert.equal(hasBraces(\"abc {foo} xyz\"), true);\n+      assert.equal(hasBraces(\"abc foo} xyz\"), false);\n+      assert.equal(hasBraces(\"abc foo xyz\"), false);\n+      assert.equal(hasBraces(\"abc {foo} xyz {bar} pqr\"), true);\n+      assert.equal(hasBraces(\"abc {foo xyz {bar} pqr\"), true);\n+      assert.equal(hasBraces(\"abc foo} xyz {bar pqr\"), false);\n+    });\n+\n+\n   it('should handle extglobs in braces', () => {\n     let fixtures = ['a', 'b', 'c', 'd', 'ab', 'ac', 'ad', 'bc', 'cb', 'bc,d', 'c,db', 'c,d', 'd)', '(b|c', '*(b|c', 'b|c', 'b|cc', 'cb|c', 'x(a|b|c)', 'x(a|c)', '(a|b|c)', '(a|c)'];\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 1,
        "dependency_files": 0,
        "test_files": 2,
        "unique_directories": 3,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "8bd704ec0d9894693d35da425d827819916be920",
            "date": "2024-08-23T16:24:18Z",
            "author_login": "doowb"
          },
          {
            "sha": "a0e68416a44da10f3e4e30845ab95af4fd286d5a",
            "date": "2024-08-23T16:23:55Z",
            "author_login": "doowb"
          },
          {
            "sha": "4ec288484f6e8cccf597ad3d43529c31d0f7a02a",
            "date": "2024-08-23T16:15:08Z",
            "author_login": "doowb"
          },
          {
            "sha": "03aa8052171e878897eee5d7bb2ae0ae83ec2ade",
            "date": "2024-08-23T16:13:00Z",
            "author_login": "doowb"
          },
          {
            "sha": "814f5f70efcd100ca9d29198867812a3d6ab91a8",
            "date": "2024-08-23T16:07:50Z",
            "author_login": "doowb"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
    "cwe_id": "CWE-1333",
    "description": "The NPM package `micromatch` prior to 4.0.8 is vulnerable to Regular Expression Denial of Service (ReDoS). The vulnerability occurs in `micromatch.braces()` in `index.js` because the pattern `.*` will greedily match anything. By passing a malicious payload, the pattern matching will keep backtracking to the input while it doesn't find the closing bracket. As the input size increases, the consumption time will also increase until it causes the application to hang or slow down. There was a merged fix but further testing shows the issue persists. This issue should be mitigated by using a safe pattern that won't start backtracking the regular expression due to greedy matching. This issue was fixed in version 4.0.8.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-05-14T15:42:47.947",
    "last_modified": "2024-11-21T09:42:07.587",
    "fix_date": "2024-08-23T16:13:00Z"
  },
  "references": [
    {
      "url": "https://advisory.checkmarx.net/advisory/CVE-2024-4067/",
      "source": "596c5446-0ce5-4ba2-aa66-48b3b757a647",
      "tags": []
    },
    {
      "url": "https://devhub.checkmarx.com/cve-details/CVE-2024-4067/",
      "source": "596c5446-0ce5-4ba2-aa66-48b3b757a647",
      "tags": []
    },
    {
      "url": "https://github.com/micromatch/micromatch/commit/03aa8052171e878897eee5d7bb2ae0ae83ec2ade",
      "source": "596c5446-0ce5-4ba2-aa66-48b3b757a647",
      "tags": []
    },
    {
      "url": "https://github.com/micromatch/micromatch/pull/266",
      "source": "596c5446-0ce5-4ba2-aa66-48b3b757a647",
      "tags": []
    },
    {
      "url": "https://github.com/micromatch/micromatch/releases/tag/4.0.8",
      "source": "596c5446-0ce5-4ba2-aa66-48b3b757a647",
      "tags": []
    },
    {
      "url": "https://devhub.checkmarx.com/cve-details/CVE-2024-4067/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/micromatch/micromatch/blob/2c56a8604b68c1099e7bc0f807ce0865a339747a/index.js#L448",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/micromatch/micromatch/issues/243",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/micromatch/micromatch/pull/247",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:20.899582",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "micromatch",
    "owner": "micromatch",
    "created_at": "2014-12-01T02:57:36Z",
    "updated_at": "2025-01-14T04:34:37Z",
    "pushed_at": "2024-08-26T23:15:58Z",
    "size": 1234,
    "stars": 2829,
    "forks": 168,
    "open_issues": 34,
    "watchers": 2829,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "JavaScript": 464352
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T22:52:47.572951"
  }
}