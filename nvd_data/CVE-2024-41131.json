{
  "cve_id": "CVE-2024-41131",
  "github_data": {
    "repository": "SixLabors/ImageSharp",
    "fix_commit": "9dda64a8186af67baf06b6d9c1ab599c3608b693",
    "related_commits": [
      "9dda64a8186af67baf06b6d9c1ab599c3608b693",
      "a1f287977139109a987065643b8172c748abdadb",
      "9dda64a8186af67baf06b6d9c1ab599c3608b693",
      "a1f287977139109a987065643b8172c748abdadb"
    ],
    "patch_url": "https://github.com/SixLabors/ImageSharp/commit/9dda64a8186af67baf06b6d9c1ab599c3608b693.patch",
    "fix_commit_details": {
      "sha": "9dda64a8186af67baf06b6d9c1ab599c3608b693",
      "commit_date": "2024-06-20T22:53:24Z",
      "author": {
        "login": "JimBobSquarePants",
        "type": "User",
        "stats": {
          "total_commits": 8599,
          "average_weekly_commits": 13.02878787878788,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 514
        }
      },
      "commit_message": {
        "title": "Merge pull request #2754 from SixLabors/backport-v3/gif-lzw",
        "length": 113,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 87,
        "additions": 74,
        "deletions": 13
      },
      "files": [
        {
          "filename": "src/ImageSharp/Formats/Gif/LzwDecoder.cs",
          "status": "modified",
          "additions": 9,
          "deletions": 4,
          "patch": "@@ -19,6 +19,11 @@ internal sealed class LzwDecoder : IDisposable\n     /// </summary>\n     private const int MaxStackSize = 4096;\n \n+    /// <summary>\n+    /// The maximum bits for a lzw code.\n+    /// </summary>\n+    private const int MaximumLzwBits = 12;\n+\n     /// <summary>\n     /// The null code.\n     /// </summary>\n@@ -73,12 +78,12 @@ public void DecodePixels(int minCodeSize, Buffer2D<byte> pixels)\n         // It is possible to specify a larger LZW minimum code size than the palette length in bits\n         // which may leave a gap in the codes where no colors are assigned.\n         // http://www.matthewflickinger.com/lab/whatsinagif/lzw_image_data.asp#lzw_compression\n-        if (minCodeSize < 2 || clearCode > MaxStackSize)\n+        if (minCodeSize < 2 || minCodeSize > MaximumLzwBits || clearCode > MaxStackSize)\n         {\n             // Don't attempt to decode the frame indices.\n             // Theoretically we could determine a min code size from the length of the provided\n             // color palette but we won't bother since the image is most likely corrupted.\n-            GifThrowHelper.ThrowInvalidImageContentException(\"Gif Image does not contain a valid LZW minimum code.\");\n+            return;\n         }\n \n         // The resulting index table length.\n@@ -245,12 +250,12 @@ public void SkipIndices(int minCodeSize, int length)\n         // It is possible to specify a larger LZW minimum code size than the palette length in bits\n         // which may leave a gap in the codes where no colors are assigned.\n         // http://www.matthewflickinger.com/lab/whatsinagif/lzw_image_data.asp#lzw_compression\n-        if (minCodeSize < 2 || clearCode > MaxStackSize)\n+        if (minCodeSize < 2 || minCodeSize > MaximumLzwBits || clearCode > MaxStackSize)\n         {\n             // Don't attempt to decode the frame indices.\n             // Theoretically we could determine a min code size from the length of the provided\n             // color palette but we won't bother since the image is most likely corrupted.\n-            GifThrowHelper.ThrowInvalidImageContentException(\"Gif Image does not contain a valid LZW minimum code.\");\n+            return;\n         }\n \n         int codeSize = minCodeSize + 1;"
        },
        {
          "filename": "tests/ImageSharp.Tests/Formats/Gif/GifDecoderTests.cs",
          "status": "modified",
          "additions": 14,
          "deletions": 9,
          "patch": "@@ -296,15 +296,9 @@ public void Issue2012EmptyXmp<TPixel>(TestImageProvider<TPixel> provider)\n     public void Issue2012BadMinCode<TPixel>(TestImageProvider<TPixel> provider)\n         where TPixel : unmanaged, IPixel<TPixel>\n     {\n-        Exception ex = Record.Exception(\n-            () =>\n-            {\n-                using Image<TPixel> image = provider.GetImage();\n-                image.DebugSave(provider);\n-            });\n-\n-        Assert.NotNull(ex);\n-        Assert.Contains(\"Gif Image does not contain a valid LZW minimum code.\", ex.Message);\n+        using Image<TPixel> image = provider.GetImage();\n+        image.DebugSave(provider);\n+        image.CompareToReferenceOutput(provider);\n     }\n \n     // https://bugzilla.mozilla.org/show_bug.cgi?id=55918\n@@ -318,4 +312,15 @@ public void IssueDeferredClearCode<TPixel>(TestImageProvider<TPixel> provider)\n         image.DebugSave(provider);\n         image.CompareFirstFrameToReferenceOutput(ImageComparer.Exact, provider);\n     }\n+\n+    // https://github.com/SixLabors/ImageSharp/issues/2743\n+    [Theory]\n+    [WithFile(TestImages.Gif.Issues.BadMaxLzwBits, PixelTypes.Rgba32)]\n+    public void IssueTooLargeLzwBits<TPixel>(TestImageProvider<TPixel> provider)\n+        where TPixel : unmanaged, IPixel<TPixel>\n+    {\n+        using Image<TPixel> image = provider.GetImage();\n+        image.DebugSaveMultiFrame(provider);\n+        image.CompareToReferenceOutputMultiFrame(provider, ImageComparer.Exact);\n+    }\n }"
        },
        {
          "filename": "tests/ImageSharp.Tests/Formats/Gif/GifMetadataTests.cs",
          "status": "modified",
          "additions": 20,
          "deletions": 0,
          "patch": "@@ -214,4 +214,24 @@ public void Identify_Frames(\n         Assert.Equal(frameDelay, gifFrameMetadata.FrameDelay);\n         Assert.Equal(disposalMethod, gifFrameMetadata.DisposalMethod);\n     }\n+\n+    [Theory]\n+    [InlineData(TestImages.Gif.Issues.BadMaxLzwBits, 8)]\n+    [InlineData(TestImages.Gif.Issues.Issue2012BadMinCode, 1)]\n+    public void Identify_Frames_Bad_Lzw(string imagePath, int framesCount)\n+    {\n+        TestFile testFile = TestFile.Create(imagePath);\n+        using MemoryStream stream = new(testFile.Bytes, false);\n+\n+        ImageInfo imageInfo = Image.Identify(stream);\n+\n+        Assert.NotNull(imageInfo);\n+        GifMetadata gifMetadata = imageInfo.Metadata.GetGifMetadata();\n+        Assert.NotNull(gifMetadata);\n+\n+        Assert.Equal(framesCount, imageInfo.FrameMetadataCollection.Count);\n+        GifFrameMetadata gifFrameMetadata = imageInfo.FrameMetadataCollection[imageInfo.FrameMetadataCollection.Count - 1].GetGifMetadata();\n+\n+        Assert.NotNull(gifFrameMetadata);\n+    }\n }"
        },
        {
          "filename": "tests/ImageSharp.Tests/TestImages.cs",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -515,6 +515,7 @@ public static class Issues\n             public const string BadAppExtLength = \"Gif/issues/issue405_badappextlength252.gif\";\n             public const string BadAppExtLength_2 = \"Gif/issues/issue405_badappextlength252-2.gif\";\n             public const string BadDescriptorWidth = \"Gif/issues/issue403_baddescriptorwidth.gif\";\n+            public const string BadMaxLzwBits = \"Gif/issues/issue_2743.gif\";\n             public const string DeferredClearCode = \"Gif/issues/bugzilla-55918.gif\";\n             public const string Issue1505 = \"Gif/issues/issue1505_argumentoutofrange.png\";\n             public const string Issue1530 = \"Gif/issues/issue1530.gif\";"
        },
        {
          "filename": "tests/Images/External/ReferenceOutput/GifDecoderTests/Issue2012BadMinCode_Rgba32_issue2012_drona1.png",
          "status": "added",
          "additions": 3,
          "deletions": 0,
          "patch": "@@ -0,0 +1,3 @@\n+version https://git-lfs.github.com/spec/v1\n+oid sha256:a3a24c066895fd3a76649da376485cbc1912d6a3ae15369575f523e66364b3b6\n+size 141563"
        },
        {
          "filename": "tests/Images/External/ReferenceOutput/GifDecoderTests/IssueTooLargeLzwBits_Rgba32_issue_2743.gif/00.png",
          "status": "added",
          "additions": 3,
          "deletions": 0,
          "patch": "@@ -0,0 +1,3 @@\n+version https://git-lfs.github.com/spec/v1\n+oid sha256:800d1ec2d7c7c99d449db1f49ef202cf18214016eae65ebc4216d6f4b1f4d328\n+size 537"
        },
        {
          "filename": "tests/Images/External/ReferenceOutput/GifDecoderTests/IssueTooLargeLzwBits_Rgba32_issue_2743.gif/01.png",
          "status": "added",
          "additions": 3,
          "deletions": 0,
          "patch": "@@ -0,0 +1,3 @@\n+version https://git-lfs.github.com/spec/v1\n+oid sha256:94dcd97831b16165f3331e429d72d7ef546e04038cab754c7918f9cf535ff30a\n+size 542"
        },
        {
          "filename": "tests/Images/External/ReferenceOutput/GifDecoderTests/IssueTooLargeLzwBits_Rgba32_issue_2743.gif/02.png",
          "status": "added",
          "additions": 3,
          "deletions": 0,
          "patch": "@@ -0,0 +1,3 @@\n+version https://git-lfs.github.com/spec/v1\n+oid sha256:ec1a589a8fae1b17a82b70a9583ea2ee012a476b1fa8fdba27fee2b7ce0403b2\n+size 540"
        },
        {
          "filename": "tests/Images/External/ReferenceOutput/GifDecoderTests/IssueTooLargeLzwBits_Rgba32_issue_2743.gif/03.png",
          "status": "added",
          "additions": 3,
          "deletions": 0,
          "patch": "@@ -0,0 +1,3 @@\n+version https://git-lfs.github.com/spec/v1\n+oid sha256:0c8751f4fafd5c56066dbb8d64a3890fc420a3bd66881a55e309ba274b6d14e4\n+size 542"
        },
        {
          "filename": "tests/Images/External/ReferenceOutput/GifDecoderTests/IssueTooLargeLzwBits_Rgba32_issue_2743.gif/04.png",
          "status": "added",
          "additions": 3,
          "deletions": 0,
          "patch": "@@ -0,0 +1,3 @@\n+version https://git-lfs.github.com/spec/v1\n+oid sha256:b78516c9874cb15de4c4b98ed307e8105d962fc6bfa7aa3490b2c7e13b455a2d\n+size 544"
        },
        {
          "filename": "tests/Images/External/ReferenceOutput/GifDecoderTests/IssueTooLargeLzwBits_Rgba32_issue_2743.gif/05.png",
          "status": "added",
          "additions": 3,
          "deletions": 0,
          "patch": "@@ -0,0 +1,3 @@\n+version https://git-lfs.github.com/spec/v1\n+oid sha256:0c8751f4fafd5c56066dbb8d64a3890fc420a3bd66881a55e309ba274b6d14e4\n+size 542"
        },
        {
          "filename": "tests/Images/External/ReferenceOutput/GifDecoderTests/IssueTooLargeLzwBits_Rgba32_issue_2743.gif/06.png",
          "status": "added",
          "additions": 3,
          "deletions": 0,
          "patch": "@@ -0,0 +1,3 @@\n+version https://git-lfs.github.com/spec/v1\n+oid sha256:ec1a589a8fae1b17a82b70a9583ea2ee012a476b1fa8fdba27fee2b7ce0403b2\n+size 540"
        },
        {
          "filename": "tests/Images/External/ReferenceOutput/GifDecoderTests/IssueTooLargeLzwBits_Rgba32_issue_2743.gif/07.png",
          "status": "added",
          "additions": 3,
          "deletions": 0,
          "patch": "@@ -0,0 +1,3 @@\n+version https://git-lfs.github.com/spec/v1\n+oid sha256:489642f0c81fd12e97007fe6feb11b0e93e351199a922ce038069a3782ad0722\n+size 135"
        },
        {
          "filename": "tests/Images/Input/Gif/issues/issue_2743.gif",
          "status": "added",
          "additions": 3,
          "deletions": 0,
          "patch": "@@ -0,0 +1,3 @@\n+version https://git-lfs.github.com/spec/v1\n+oid sha256:4be51cb9c258a6518d791ad2810fa0d71449805a5d5a8f95dcc7da2dc558ed73\n+size 166413"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 13,
        "unique_directories": 6,
        "max_directory_depth": 6
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "e08651bbf6a8108865b1b2605751faa5cfc44a06",
            "date": "2024-12-18T01:48:59Z",
            "author_login": "JimBobSquarePants"
          },
          {
            "sha": "b38146dfaa2d25ea7fa85847a4012c88caa902f9",
            "date": "2024-12-17T00:37:18Z",
            "author_login": "antonfirsov"
          },
          {
            "sha": "dee312df7e491a5d1448d97cddb06a32aab1ffde",
            "date": "2024-12-16T22:48:24Z",
            "author_login": "antonfirsov"
          },
          {
            "sha": "4be26452b9366b0a4fe67aab91cfcb360916c5ea",
            "date": "2024-12-11T02:34:20Z",
            "author_login": "JimBobSquarePants"
          },
          {
            "sha": "502a35426225e22ebff965ffaa2be31ecc286880",
            "date": "2024-11-27T12:21:39Z",
            "author_login": "JimBobSquarePants"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-787",
    "description": "ImageSharp is a 2D graphics API. An Out-of-bounds Write vulnerability has been found in the ImageSharp gif decoder, allowing attackers to cause a crash using a specially crafted gif. This can potentially lead to denial of service. All users are advised to upgrade to v3.1.5 or v2.1.9.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-07-22T15:15:03.933",
    "last_modified": "2024-11-21T09:32:17.670",
    "fix_date": "2024-06-20T22:53:24Z"
  },
  "references": [
    {
      "url": "https://github.com/SixLabors/ImageSharp/commit/9dda64a8186af67baf06b6d9c1ab599c3608b693",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/SixLabors/ImageSharp/commit/a1f287977139109a987065643b8172c748abdadb",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/SixLabors/ImageSharp/pull/2754",
      "source": "security-advisories@github.com",
      "tags": [
        "Issue Tracking"
      ]
    },
    {
      "url": "https://github.com/SixLabors/ImageSharp/pull/2756",
      "source": "security-advisories@github.com",
      "tags": [
        "Issue Tracking"
      ]
    },
    {
      "url": "https://github.com/SixLabors/ImageSharp/security/advisories/GHSA-63p8-c4ww-9cg7",
      "source": "security-advisories@github.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/SixLabors/ImageSharp/commit/9dda64a8186af67baf06b6d9c1ab599c3608b693",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/SixLabors/ImageSharp/commit/a1f287977139109a987065643b8172c748abdadb",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/SixLabors/ImageSharp/pull/2754",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking"
      ]
    },
    {
      "url": "https://github.com/SixLabors/ImageSharp/pull/2756",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Issue Tracking"
      ]
    },
    {
      "url": "https://github.com/SixLabors/ImageSharp/security/advisories/GHSA-63p8-c4ww-9cg7",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:31.509308",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "ImageSharp",
    "owner": "SixLabors",
    "created_at": "2016-10-28T04:46:36Z",
    "updated_at": "2025-01-14T14:21:12Z",
    "pushed_at": "2025-01-06T10:46:24Z",
    "size": 132452,
    "stars": 7554,
    "forks": 853,
    "open_issues": 45,
    "watchers": 7554,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main"
    ],
    "languages": {
      "C#": 10815585,
      "JavaScript": 40805,
      "HTML": 5210,
      "PowerShell": 5178,
      "Batchfile": 121
    },
    "commit_activity": {
      "total_commits_last_year": 390,
      "avg_commits_per_week": 7.5,
      "days_active_last_year": 121
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T16:51:16.290801"
  }
}