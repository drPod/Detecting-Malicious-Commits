{
  "cve_id": "CVE-2024-41656",
  "github_data": {
    "repository": "getsentry/sentry",
    "fix_commit": "5c679521f1539eabfb81287bfc30f34dbecd373e",
    "related_commits": [
      "5c679521f1539eabfb81287bfc30f34dbecd373e",
      "5c679521f1539eabfb81287bfc30f34dbecd373e"
    ],
    "patch_url": "https://github.com/getsentry/sentry/commit/5c679521f1539eabfb81287bfc30f34dbecd373e.patch",
    "fix_commit_details": {
      "sha": "5c679521f1539eabfb81287bfc30f34dbecd373e",
      "commit_date": "2024-07-22T20:53:43Z",
      "author": {
        "login": "oioki",
        "type": "User",
        "stats": {
          "total_commits": 151,
          "average_weekly_commits": 0.17336394948335246,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 62
        }
      },
      "commit_message": {
        "title": "fix(issues): structured issue annotations (#74648)",
        "length": 50,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 41,
        "additions": 22,
        "deletions": 19
      },
      "files": [
        {
          "filename": "src/sentry/api/serializers/models/group.py",
          "status": "modified",
          "additions": 6,
          "deletions": 1,
          "patch": "@@ -72,6 +72,11 @@ def merge_list_dictionaries(\n         dict1.setdefault(key, []).extend(val)\n \n \n+class GroupAnnotation(TypedDict):\n+    displayName: str\n+    url: str\n+\n+\n class GroupStatusDetailsResponseOptional(TypedDict, total=False):\n     autoResolved: bool\n     ignoreCount: int\n@@ -145,7 +150,7 @@ class BaseGroupSerializerResponse(BaseGroupResponseOptional):\n     isSubscribed: bool\n     subscriptionDetails: GroupSubscriptionResponseOptional | None\n     hasSeen: bool\n-    annotations: Sequence[str]\n+    annotations: Sequence[GroupAnnotation]\n \n \n class SeenStats(TypedDict):"
        },
        {
          "filename": "src/sentry/integrations/mixins/issues.py",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -348,7 +348,7 @@ def map_external_issues_to_annotations(self, external_issues):\n         for ei in external_issues:\n             link = self.get_issue_url(ei.key)\n             label = self.get_issue_display_name(ei) or ei.key\n-            annotations.append(f'<a href=\"{link}\">{label}</a>')\n+            annotations.append({\"url\": link, \"displayName\": label})\n \n         return annotations\n "
        },
        {
          "filename": "src/sentry/models/platformexternalissue.py",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -35,7 +35,7 @@ def get_annotations_for_group_list(cls, group_list):\n         # group annotations by group id\n         annotations_by_group_id = defaultdict(list)\n         for ei in external_issues:\n-            annotation = f'<a href=\"{ei.web_url}\">{ei.display_name}</a>'\n+            annotation = {\"url\": ei.web_url, \"displayName\": ei.display_name}\n             annotations_by_group_id[ei.group_id].append(annotation)\n \n         return annotations_by_group_id"
        },
        {
          "filename": "src/sentry/plugins/bases/issue.py",
          "status": "modified",
          "additions": 4,
          "deletions": 6,
          "patch": "@@ -2,7 +2,6 @@\n \n from django import forms\n from django.conf import settings\n-from django.utils.html import format_html\n from rest_framework.request import Request\n \n from sentry.models.activity import Activity\n@@ -312,11 +311,10 @@ def tags(self, request: Request, group, tag_list, **kwargs):\n             return tag_list\n \n         tag_list.append(\n-            format_html(\n-                '<a href=\"{}\" rel=\"noreferrer\">{}</a>',\n-                self.get_issue_url(group=group, issue_id=issue_id),\n-                self.get_issue_label(group=group, issue_id=issue_id),\n-            )\n+            {\n+                \"url\": self.get_issue_url(group=group, issue_id=issue_id),\n+                \"displayName\": self.get_issue_label(group=group, issue_id=issue_id),\n+            }\n         )\n \n         return tag_list"
        },
        {
          "filename": "src/sentry/plugins/bases/issue2.py",
          "status": "modified",
          "additions": 4,
          "deletions": 6,
          "patch": "@@ -2,7 +2,6 @@\n \n from django.conf import settings\n from django.urls import re_path, reverse\n-from django.utils.html import format_html\n from rest_framework.request import Request\n from rest_framework.response import Response\n \n@@ -431,11 +430,10 @@ def tags(self, request: Request, group, tag_list, **kwargs):\n             return tag_list\n \n         tag_list.append(\n-            format_html(\n-                '<a href=\"{}\">{}</a>',\n-                self._get_issue_url_compat(group, issue),\n-                self._get_issue_label_compat(group, issue),\n-            )\n+            {\n+                \"url\": self._get_issue_url_compat(group, issue),\n+                \"displayName\": self._get_issue_label_compat(group, issue),\n+            }\n         )\n \n         return tag_list"
        },
        {
          "filename": "tests/sentry/api/endpoints/test_group_details.py",
          "status": "modified",
          "additions": 5,
          "deletions": 3,
          "patch": "@@ -156,7 +156,7 @@ def test_platform_external_issue_annotation(self):\n         response = self.client.get(url, format=\"json\")\n \n         assert response.data[\"annotations\"] == [\n-            '<a href=\"https://example.com/issues/2\">Issue#2</a>'\n+            {\"url\": \"https://example.com/issues/2\", \"displayName\": \"Issue#2\"}\n         ]\n \n     def test_plugin_external_issue_annotation(self):\n@@ -172,7 +172,9 @@ def test_plugin_external_issue_annotation(self):\n         url = f\"/api/0/issues/{group.id}/\"\n         response = self.client.get(url, format=\"json\")\n \n-        assert response.data[\"annotations\"] == ['<a href=\"https://trello.com/c/134\">Trello-134</a>']\n+        assert response.data[\"annotations\"] == [\n+            {\"url\": \"https://trello.com/c/134\", \"displayName\": \"Trello-134\"}\n+        ]\n \n     def test_integration_external_issue_annotation(self):\n         group = self.create_group()\n@@ -191,7 +193,7 @@ def test_integration_external_issue_annotation(self):\n         response = self.client.get(url, format=\"json\")\n \n         assert response.data[\"annotations\"] == [\n-            '<a href=\"https://example.com/browse/api-123\">api-123</a>'\n+            {\"url\": \"https://example.com/browse/api-123\", \"displayName\": \"api-123\"}\n         ]\n \n     def test_permalink_superuser(self):"
        },
        {
          "filename": "tests/sentry/integrations/test_issues.py",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -505,7 +505,7 @@ def test_annotations(self):\n         link = self.installation.get_issue_url(self.external_issue.key)\n \n         assert self.installation.get_annotations_for_group_list([self.group]) == {\n-            self.group.id: [f'<a href=\"{link}\">{label}</a>']\n+            self.group.id: [{\"url\": link, \"displayName\": label}]\n         }\n \n         with assume_test_silo_mode(SiloMode.CONTROL):"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 2,
        "unique_directories": 6,
        "max_directory_depth": 5
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "4b7b5f42fc5f8063170cc71fa715eca915bd9769",
            "date": "2025-01-14T14:17:56Z",
            "author_login": "asottile-sentry"
          },
          {
            "sha": "de1a26ab5fe07ee332f2ccec3c1360a50b71d4b5",
            "date": "2025-01-14T14:01:06Z",
            "author_login": "priscilawebdev"
          },
          {
            "sha": "af37a267c55ac75d713e71ba3eb230557d4f664b",
            "date": "2025-01-14T14:00:02Z",
            "author_login": "armenzg"
          },
          {
            "sha": "8365efc46e838f1e01cf5fd35679b7b5d4eaca64",
            "date": "2025-01-14T13:47:37Z",
            "author_login": "vgrozdanic"
          },
          {
            "sha": "aefa66759100836bb9749ae680579de9f56df820",
            "date": "2025-01-14T13:14:24Z",
            "author_login": "priscilawebdev"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.1,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-79",
    "description": "Sentry is an error tracking and performance monitoring platform. Starting in version 10.0.0 and prior to version 24.7.1, an unsanitized payload sent by an Integration platform integration allows storing arbitrary HTML tags on the Sentry side with the subsequent rendering them on the Issues page. Self-hosted Sentry users may be impacted in case of untrustworthy Integration platform integrations sending external issues from their side to Sentry. A patch has been released in Sentry 24.7.1. For Sentry SaaS customers, no action is needed. This has been patched on July 23, and even prior to the fix, the exploitation was not possible due to the strict Content Security Policy deployed on sentry.io site. For self-hosted users, the maintainers of Sentry strongly recommend upgrading Sentry to the latest version. If it is not possible, one could enable CSP on one's self-hosted installation with `CSP_REPORT_ONLY = False` (enforcing mode). This will mitigate the risk of cross-site scripting.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2024-07-23T22:15:08.970",
    "last_modified": "2024-11-21T09:32:55.050",
    "fix_date": "2024-07-22T20:53:43Z"
  },
  "references": [
    {
      "url": "https://github.com/getsentry/self-hosted/releases/tag/24.7.1",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/getsentry/sentry/commit/5c679521f1539eabfb81287bfc30f34dbecd373e",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/getsentry/sentry/pull/74648",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/getsentry/sentry/security/advisories/GHSA-fm88-hc3v-3www",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/getsentry/self-hosted/releases/tag/24.7.1",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/getsentry/sentry/commit/5c679521f1539eabfb81287bfc30f34dbecd373e",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/getsentry/sentry/pull/74648",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/getsentry/sentry/security/advisories/GHSA-fm88-hc3v-3www",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:31.512809",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "sentry",
    "owner": "getsentry",
    "created_at": "2010-08-30T22:06:41Z",
    "updated_at": "2025-01-14T13:14:30Z",
    "pushed_at": "2025-01-14T13:46:11Z",
    "size": 548721,
    "stars": 39620,
    "forks": 4242,
    "open_issues": 2227,
    "watchers": 39620,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Python": 40224455,
      "TypeScript": 27565576,
      "HTML": 263721,
      "Less": 220014,
      "Lua": 72919,
      "JavaScript": 51537,
      "PEG.js": 19654,
      "Shell": 18647,
      "Makefile": 7073,
      "Dockerfile": 4296,
      "EJS": 1803,
      "Ruby": 708
    },
    "commit_activity": {
      "total_commits_last_year": 15304,
      "avg_commits_per_week": 294.3076923076923,
      "days_active_last_year": 272
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T13:47:00.286243"
  }
}