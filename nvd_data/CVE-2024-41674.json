{
  "cve_id": "CVE-2024-41674",
  "github_data": {
    "repository": "ckan/ckan",
    "fix_commit": "f6b032cd7082d784938165bbd113557639002ca7",
    "related_commits": [
      "f6b032cd7082d784938165bbd113557639002ca7"
    ],
    "patch_url": "https://github.com/ckan/ckan/commit/f6b032cd7082d784938165bbd113557639002ca7.patch",
    "fix_commit_details": {
      "sha": "f6b032cd7082d784938165bbd113557639002ca7",
      "commit_date": "2024-08-19T10:46:10Z",
      "author": {
        "login": "amercader",
        "type": "User",
        "stats": {
          "total_commits": 3832,
          "average_weekly_commits": 4.076595744680851,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 532
        }
      },
      "commit_message": {
        "title": "Merge commit from fork",
        "length": 77,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 41,
        "additions": 37,
        "deletions": 4
      },
      "files": [
        {
          "filename": "ckan/lib/search/__init__.py",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -22,6 +22,7 @@\n \n from ckan.lib.search.common import (\n     make_connection, SearchIndexError, SearchQueryError,  # type: ignore\n+    SolrConnectionError, # type: ignore\n     SearchError, is_available, SolrSettings, config\n )\n from ckan.lib.search.index import ("
        },
        {
          "filename": "ckan/lib/search/common.py",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -29,6 +29,10 @@ class SearchQueryError(SearchError):\n     pass\n \n \n+class SolrConnectionError(Exception):\n+    pass\n+\n+\n DEFAULT_SOLR_URL = 'http://127.0.0.1:8983/solr/ckan'\n \n "
        },
        {
          "filename": "ckan/lib/search/query.py",
          "status": "modified",
          "additions": 7,
          "deletions": 1,
          "patch": "@@ -18,7 +18,7 @@\n \n from ckan.common import config\n from ckan.lib.search.common import (\n-    make_connection, SearchError, SearchQueryError\n+    make_connection, SearchError, SearchQueryError, SolrConnectionError\n )\n from ckan.types import Context\n \n@@ -473,6 +473,12 @@ def _check_query_parser(param: str, value: Any):\n                         \"Can't determine Sort Order\" in e.args[0] or \\\n                         'Unknown sort order' in e.args[0]:\n                     raise SearchQueryError('Invalid \"sort\" parameter')\n+\n+                if (\"Failed to connect to server\" in e.args[0] or \n+                        \"Connection to server\" in e.args[0]):\n+                    log.warning(\"Connection Error: Failed to connect to Solr server.\")\n+                    raise SolrConnectionError(\"Solr returned an error while searching.\")\n+\n             raise SearchError('SOLR returned an error running query: %r Error: %r' %\n                               (query, e))\n         self.count = solr_response.hits"
        },
        {
          "filename": "ckan/tests/controllers/test_api.py",
          "status": "modified",
          "additions": 9,
          "deletions": 0,
          "patch": "@@ -416,3 +416,12 @@ def test_header_based_auth_default_post(app):\n     res = app.post(url, environ_overrides=env, data=data)\n \n     assert res.status_code == 200\n+\n+\n+@pytest.mark.ckan_config(\"solr_url\", \"https://xxxx/notofund\")\n+def test_package_search_connection_errors(app):\n+\n+    res = app.get(\n+        url_for(\"api.action\", logic_function=\"package_search\", ver=3),\n+    )\n+    assert res.json[\"error\"][\"__type\"] == \"Search Connection Error\""
        },
        {
          "filename": "ckan/views/api.py",
          "status": "modified",
          "additions": 9,
          "deletions": 1,
          "patch": "@@ -22,7 +22,9 @@\n \n from ckan.lib.navl.dictization_functions import DataError\n from ckan.logic import get_action, ValidationError, NotFound, NotAuthorized\n-from ckan.lib.search import SearchError, SearchIndexError, SearchQueryError\n+from ckan.lib.search import (\n+    SearchError, SearchIndexError, SearchQueryError, SolrConnectionError\n+)\n from ckan.types import Context, Response, ActionResult\n \n \n@@ -333,6 +335,12 @@ def action(logic_function: str, ver: int = API_DEFAULT_VERSION) -> Response:\n                        str(e)}\n         return_dict[u'success'] = False\n         return _finish(500, return_dict, content_type=u'json')\n+    except SolrConnectionError:\n+        return_dict[u'error'] = {\n+            u'__type': u'Search Connection Error',\n+            u'message': u'Unable to connect to the search server'}\n+        return_dict[u'success'] = False\n+        return _finish(500, return_dict, content_type=u'json')\n     except Exception as e:\n         return_dict[u'error'] = {\n             u'__type': u'Internal Server Error',"
        },
        {
          "filename": "ckan/views/dataset.py",
          "status": "modified",
          "additions": 7,
          "deletions": 2,
          "patch": "@@ -26,7 +26,9 @@\n from ckan.common import _, config, g, request\n from ckan.views.home import CACHE_PARAMETERS\n from ckan.lib.plugins import lookup_package_plugin\n-from ckan.lib.search import SearchError, SearchQueryError, SearchIndexError\n+from ckan.lib.search import (\n+    SearchError, SearchQueryError, SearchIndexError, SolrConnectionError\n+)\n from ckan.types import Context, Response\n \n \n@@ -348,7 +350,10 @@ def search(package_type: str) -> str:\n             _(u'Invalid search query: {error_message}')\n             .format(error_message=str(se))\n         )\n-    except SearchError as se:\n+    except (SearchError, SolrConnectionError) as se:\n+        if isinstance(se, SolrConnectionError):\n+            base.abort(500, se.args[0])\n+\n         # May be bad input from the user, but may also be more serious like\n         # bad code causing a SOLR syntax error, or a problem connecting to\n         # SOLR"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 3,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "de8c1ecb68ed6f746ca4b95cc133f3078d6c5f5a",
            "date": "2025-01-14T12:36:43Z",
            "author_login": "amercader"
          },
          {
            "sha": "b1f1795ed377b23f481aba74022934535e5111a3",
            "date": "2025-01-13T18:07:15Z",
            "author_login": "amercader"
          },
          {
            "sha": "c4ce8b8a332453d52fe63983c30105a753b3dcd4",
            "date": "2025-01-13T13:09:24Z",
            "author_login": "mutantsan"
          },
          {
            "sha": "2334e7fd502874eb5be73002bdbaeb326bae1113",
            "date": "2024-12-29T20:13:35Z",
            "author_login": "aleeexgreeen"
          },
          {
            "sha": "e6470f72418914fa510171aa85a263cbb455ced3",
            "date": "2024-12-29T20:02:31Z",
            "author_login": "aleeexgreeen"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N",
    "cwe_id": "CWE-209",
    "description": "CKAN is an open-source data management system for powering data hubs and data portals. If there were connection issues with the Solr server, the internal Solr URL (potentially including credentials) could be leaked to package_search calls as part of the returned error message. This has been patched in CKAN 2.10.5 and 2.11.0.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-08-21T15:15:08.770",
    "last_modified": "2024-08-23T17:06:58.063",
    "fix_date": "2024-08-19T10:46:10Z"
  },
  "references": [
    {
      "url": "https://github.com/ckan/ckan/commit/f6b032cd7082d784938165bbd113557639002ca7",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/ckan/ckan/security/advisories/GHSA-2rqw-cfhc-35fh",
      "source": "security-advisories@github.com",
      "tags": [
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:37.380344",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "ckan",
    "owner": "ckan",
    "created_at": "2011-11-10T18:42:17Z",
    "updated_at": "2025-01-14T12:36:48Z",
    "pushed_at": "2025-01-14T12:50:06Z",
    "size": 217197,
    "stars": 4529,
    "forks": 2003,
    "open_issues": 756,
    "watchers": 4529,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Python": 4151360,
      "CSS": 1322183,
      "HTML": 752447,
      "JavaScript": 600231,
      "SCSS": 281824,
      "Shell": 7827,
      "PLpgSQL": 4227,
      "Mako": 4140,
      "Gherkin": 3242,
      "Dockerfile": 1045,
      "Smarty": 516
    },
    "commit_activity": {
      "total_commits_last_year": 882,
      "avg_commits_per_week": 16.96153846153846,
      "days_active_last_year": 211
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T13:17:14.608738"
  }
}