{
  "cve_id": "CVE-2024-41675",
  "github_data": {
    "repository": "ckan/ckan",
    "fix_commit": "9e89ce8220ab1445e0bd85a67994a51d9d3d2688",
    "related_commits": [
      "9e89ce8220ab1445e0bd85a67994a51d9d3d2688",
      "d7dfe8c427b1c63c75d788a609f3b7d7620a25a1"
    ],
    "patch_url": "https://github.com/ckan/ckan/commit/9e89ce8220ab1445e0bd85a67994a51d9d3d2688.patch",
    "fix_commit_details": {
      "sha": "9e89ce8220ab1445e0bd85a67994a51d9d3d2688",
      "commit_date": "2024-08-19T10:52:41Z",
      "author": {
        "login": "amercader",
        "type": "User",
        "stats": {
          "total_commits": 3832,
          "average_weekly_commits": 4.076595744680851,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 532
        }
      },
      "commit_message": {
        "title": "Escape data in datatables view",
        "length": 30,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 57,
        "additions": 55,
        "deletions": 2
      },
      "files": [
        {
          "filename": "ckanext/datatablesview/blueprint.py",
          "status": "modified",
          "additions": 3,
          "deletions": 2,
          "patch": "@@ -3,6 +3,7 @@\n \n from typing import Any\n from urllib.parse import urlencode\n+from html import escape\n \n from flask import Blueprint\n \n@@ -124,8 +125,8 @@ def ajax(resource_view_id: str):\n         data = []\n         null_label = h.datatablesview_null_label()\n         for row in response[u'records']:\n-            record = {colname: str(null_label if row.get(colname, u'')\n-                                   is None else row.get(colname, u''))\n+            record = {colname: escape(str(null_label if row.get(colname, u'')\n+                                          is None else row.get(colname, u'')))\n                       for colname in cols}\n             # the DT_RowId is used in DT to set an element id for each record\n             record['DT_RowId'] = 'row' + str(row.get(u'_id', u''))"
        },
        {
          "filename": "ckanext/datatablesview/tests/test_ajax.py",
          "status": "added",
          "additions": 52,
          "deletions": 0,
          "patch": "@@ -0,0 +1,52 @@\n+# encoding: utf-8\n+\n+import json\n+import pytest\n+\n+from ckan.tests import factories, helpers\n+from ckan.lib.helpers import url_for\n+\n+\n+@pytest.mark.ckan_config(\"ckan.plugins\", \"datastore datatables_view\")\n+@pytest.mark.usefixtures(\"with_plugins\")\n+def test_ajax_data(app, user):\n+    dataset = factories.Dataset()\n+    ds = helpers.call_action(\n+        'datastore_create',\n+        resource={'package_id': dataset['id']},\n+        fields=[{'id': 'a', 'type': 'text'}, {'id': 'b', 'type': 'int'}],\n+        records=[\n+            {'a': 'one', 'b': 1},\n+            {'a': 'two', 'b': 2},\n+            {'a': 'a < b && a > 0', 'b': None}\n+        ],\n+    )\n+    view = factories.ResourceView(\n+        view_type='datatables_view',\n+        resource_id=ds['resource_id']\n+    )\n+    resp = app.post(\n+        url=url_for('datatablesview.ajax', resource_view_id=view[\"id\"]),\n+        data={\n+            'draw': 1,\n+            'search[value]': '',\n+            'start': 0,\n+            'length': 50,\n+        },\n+    )\n+    ajax = json.loads(b''.join(resp.response).decode('utf-8'))\n+    assert ajax == {\n+        'draw': 1,\n+        'recordsFiltered': 3,\n+        'recordsTotal': 3,\n+        'data': [\n+            {'_id': '1', 'a': 'one', 'b': '1', 'DT_RowId': 'row1'},\n+            {'_id': '2', 'a': 'two', 'b': '2', 'DT_RowId': 'row2'},\n+            {\n+                '_id': '3',\n+                'a': 'a &lt; b &amp;&amp; a &gt; 0',\n+                'b': '',\n+                'DT_RowId': 'row3',\n+            },\n+        ]\n+    }"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "dbf7b7388b521b9d6c84d6b9ac3e276b0ba800b0",
            "date": "2025-01-14T14:21:12Z",
            "author_login": "wardi"
          },
          {
            "sha": "b3318f4cf8266789c6f6c66c147e0863a18999e8",
            "date": "2025-01-14T12:48:24Z",
            "author_login": "Zharktas"
          },
          {
            "sha": "de8c1ecb68ed6f746ca4b95cc133f3078d6c5f5a",
            "date": "2025-01-14T12:36:43Z",
            "author_login": "amercader"
          },
          {
            "sha": "6b02cb5d44b0bb88f430508bee1070e46ffea473",
            "date": "2025-01-14T11:46:50Z",
            "author_login": "Zharktas"
          },
          {
            "sha": "24fbf14092547b5a28091e9920bfd9d415e73edf",
            "date": "2025-01-14T11:36:11Z",
            "author_login": "Zharktas"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:H/I:N/A:N",
    "cwe_id": "CWE-79",
    "description": "CKAN is an open-source data management system for powering data hubs and data portals. The Datatables view plugin did not properly escape record data coming from the DataStore, leading to a potential XSS vector. Sites running CKAN >= 2.7.0 with the datatables_view plugin activated. This is a plugin included in CKAN core, that not activated by default but it is widely used to preview tabular data. This vulnerability has been fixed in CKAN 2.10.5 and 2.11.0.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-08-21T15:15:08.963",
    "last_modified": "2024-08-23T17:07:28.247",
    "fix_date": "2024-08-19T10:52:41Z"
  },
  "references": [
    {
      "url": "https://github.com/ckan/ckan/commit/9e89ce8220ab1445e0bd85a67994a51d9d3d2688",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/ckan/ckan/commit/d7dfe8c427b1c63c75d788a609f3b7d7620a25a1",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/ckan/ckan/security/advisories/GHSA-r3jc-vhf4-6v32",
      "source": "security-advisories@github.com",
      "tags": [
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:37.380473",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "ckan",
    "owner": "ckan",
    "created_at": "2011-11-10T18:42:17Z",
    "updated_at": "2025-01-14T12:36:48Z",
    "pushed_at": "2025-01-14T12:50:06Z",
    "size": 217197,
    "stars": 4529,
    "forks": 2003,
    "open_issues": 756,
    "watchers": 4529,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Python": 4151360,
      "CSS": 1322183,
      "HTML": 752447,
      "JavaScript": 600231,
      "SCSS": 281824,
      "Shell": 7827,
      "PLpgSQL": 4227,
      "Mako": 4140,
      "Gherkin": 3242,
      "Dockerfile": 1045,
      "Smarty": 516
    },
    "commit_activity": {
      "total_commits_last_year": 882,
      "avg_commits_per_week": 16.96153846153846,
      "days_active_last_year": 211
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T13:17:14.608738"
  }
}