{
  "cve_id": "CVE-2024-41677",
  "github_data": {
    "repository": "QwikDev/qwik",
    "fix_commit": "7e742eb3a1001542d795776c0317d47df8b9d64e",
    "related_commits": [
      "7e742eb3a1001542d795776c0317d47df8b9d64e"
    ],
    "patch_url": "https://github.com/QwikDev/qwik/commit/7e742eb3a1001542d795776c0317d47df8b9d64e.patch",
    "fix_commit_details": {
      "sha": "7e742eb3a1001542d795776c0317d47df8b9d64e",
      "commit_date": "2024-06-24T21:31:30Z",
      "author": {
        "login": "shairez",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Merge pull request from GHSA-2rwj-7xq8-4gx4",
        "length": 108,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 120,
        "additions": 55,
        "deletions": 65
      },
      "files": [
        {
          "filename": "packages/qwik/src/core/render/ssr/render-ssr.ts",
          "status": "modified",
          "additions": 45,
          "deletions": 55,
          "patch": "@@ -1,10 +1,42 @@\n+import {\n+  createContainerState,\n+  getEventName,\n+  setRef,\n+  type ContainerState,\n+} from '../../container/container';\n+import { assertDefined } from '../../error/assert';\n+import { QError_canNotRenderHTML, qError } from '../../error/error';\n+import { serializeQRLs } from '../../qrl/qrl';\n+import { Q_CTX, _IMMUTABLE, _IMMUTABLE_PREFIX } from '../../state/constants';\n+import {\n+  HOST_FLAG_DIRTY,\n+  HOST_FLAG_DYNAMIC,\n+  HOST_FLAG_NEED_ATTACH_LISTENER,\n+  createContext,\n+  type QContext,\n+} from '../../state/context';\n+import {\n+  PREVENT_DEFAULT,\n+  groupListeners,\n+  isOnProp,\n+  setEvent,\n+  type Listener,\n+} from '../../state/listeners';\n+import { isSignal } from '../../state/signal';\n+import { createPropsState, createProxy } from '../../state/store';\n+import { serializeSStyle } from '../../style/qrl-styles';\n+import { invoke, newInvokeContext, trackSignal, type InvokeContext } from '../../use/use-core';\n+import { EMPTY_OBJ } from '../../util/flyweight';\n+import { logError, logWarn } from '../../util/log';\n+import { ELEMENT_ID, OnRenderProp, QScopedStyle, QSlot, QSlotS, QStyle } from '../../util/markers';\n import { isPromise, maybeThen } from '../../util/promises';\n-import { type InvokeContext, newInvokeContext, invoke, trackSignal } from '../../use/use-core';\n-import { Virtual, _jsxC, _jsxQ, createJSXError, isJSXNode } from '../jsx/jsx-runtime';\n+import { qDev, qInspector, seal } from '../../util/qdev';\n import { isArray, isFunction, isString, type ValueOrPromise } from '../../util/types';\n-import type { FunctionComponent, JSXNode, JSXOutput } from '../jsx/types/jsx-node';\n+import { version } from '../../version';\n+import type { QwikElement } from '../dom/virtual-element';\n import {\n   createRenderContext,\n+  dangerouslySetInnerHTML,\n   executeComponent,\n   getNextIndex,\n   isAriaAttribute,\n@@ -14,44 +46,12 @@ import {\n   shouldWrapFunctional,\n   static_subtree,\n   stringifyStyle,\n-  dangerouslySetInnerHTML,\n } from '../execute-component';\n-import { ELEMENT_ID, OnRenderProp, QScopedStyle, QSlot, QSlotS, QStyle } from '../../util/markers';\n+import { Virtual, _jsxC, _jsxQ, createJSXError, isJSXNode } from '../jsx/jsx-runtime';\n+import type { FunctionComponent, JSXNode, JSXOutput } from '../jsx/types/jsx-node';\n+import type { ClassList, JSXChildren } from '../jsx/types/jsx-qwik-attributes';\n import { InternalSSRStream, SSRRaw } from '../jsx/utils.public';\n-import { logError, logWarn } from '../../util/log';\n-import {\n-  groupListeners,\n-  isOnProp,\n-  type Listener,\n-  PREVENT_DEFAULT,\n-  setEvent,\n-} from '../../state/listeners';\n-import { version } from '../../version';\n-import {\n-  type ContainerState,\n-  createContainerState,\n-  setRef,\n-  getEventName,\n-} from '../../container/container';\n import type { RenderContext } from '../types';\n-import { assertDefined } from '../../error/assert';\n-import { serializeSStyle } from '../../style/qrl-styles';\n-import { qDev, qInspector, seal } from '../../util/qdev';\n-import { qError, QError_canNotRenderHTML } from '../../error/error';\n-import { isSignal } from '../../state/signal';\n-import { serializeQRLs } from '../../qrl/qrl';\n-import type { QwikElement } from '../dom/virtual-element';\n-import { EMPTY_OBJ } from '../../util/flyweight';\n-import {\n-  createContext,\n-  HOST_FLAG_DIRTY,\n-  HOST_FLAG_NEED_ATTACH_LISTENER,\n-  HOST_FLAG_DYNAMIC,\n-  type QContext,\n-} from '../../state/context';\n-import { createPropsState, createProxy } from '../../state/store';\n-import { Q_CTX, _IMMUTABLE, _IMMUTABLE_PREFIX } from '../../state/constants';\n-import type { ClassList, JSXChildren } from '../jsx/types/jsx-qwik-attributes';\n \n const FLUSH_COMMENT = '<!--qkssr-f-->';\n \n@@ -603,7 +603,7 @@ const renderNode = (\n           }\n         } else {\n           openingElement +=\n-            ' ' + (value === true ? prop : prop + '=\"' + escapeAttr(attrValue) + '\"');\n+            ' ' + (value === true ? prop : prop + '=\"' + escapeHtml(attrValue) + '\"');\n         }\n       }\n     };\n@@ -732,7 +732,7 @@ This goes against the HTML spec: https://html.spec.whatwg.org/multipage/dom.html\n     }\n \n     if (classStr) {\n-      openingElement += ' class=\"' + escapeAttr(classStr) + '\"';\n+      openingElement += ' class=\"' + escapeHtml(classStr) + '\"';\n     }\n \n     if (listeners.length > 0) {\n@@ -750,7 +750,7 @@ This goes against the HTML spec: https://html.spec.whatwg.org/multipage/dom.html\n       }\n     }\n     if (key != null) {\n-      openingElement += ' q:key=\"' + escapeAttr(key) + '\"';\n+      openingElement += ' q:key=\"' + escapeHtml(key) + '\"';\n     }\n     if (hasRef || useSignal || listeners.length > 0) {\n       if (hasRef || useSignal || listenersNeedId(listeners)) {\n@@ -766,7 +766,7 @@ This goes against the HTML spec: https://html.spec.whatwg.org/multipage/dom.html\n     if (qDev && qInspector && node.dev && !(flags & IS_HEAD)) {\n       const sanitizedFileName = node?.dev?.fileName?.replace(/\\\\/g, '/');\n       if (sanitizedFileName && !/data-qwik-inspector/.test(openingElement)) {\n-        openingElement += ` data-qwik-inspector=\"${escapeAttr(\n+        openingElement += ` data-qwik-inspector=\"${escapeHtml(\n           `${sanitizedFileName}:${node.dev.lineNumber}:${node.dev.columnNumber}`\n         )}\"`;\n       }\n@@ -1180,8 +1180,7 @@ export interface ServerDocument {\n   createElement(tagName: string): any;\n }\n \n-const ESCAPE_HTML = /[&<>]/g;\n-const ESCAPE_ATTRIBUTES = /[&\"]/g;\n+const ESCAPE_HTML = /[&<>'\"]/g;\n \n export const registerQwikEvent = (prop: string, containerState: ContainerState) => {\n   containerState.$events$.add(getEventName(prop));\n@@ -1196,19 +1195,10 @@ const escapeHtml = (s: string) => {\n         return '&lt;';\n       case '>':\n         return '&gt;';\n-      default:\n-        return '';\n-    }\n-  });\n-};\n-\n-const escapeAttr = (s: string) => {\n-  return s.replace(ESCAPE_ATTRIBUTES, (c) => {\n-    switch (c) {\n-      case '&':\n-        return '&amp;';\n       case '\"':\n         return '&quot;';\n+      case \"'\":\n+        return '&#39;';\n       default:\n         return '';\n     }"
        },
        {
          "filename": "packages/qwik/src/core/render/ssr/render-ssr.unit.tsx",
          "status": "modified",
          "additions": 10,
          "deletions": 10,
          "patch": "@@ -1,23 +1,23 @@\n import { format } from 'prettier';\n \n+import { expect, test, vi } from 'vitest';\n import type { StreamWriter } from '../../../server/types';\n import { component$ } from '../../component/component.public';\n import { inlinedQrl } from '../../qrl/qrl';\n import { $ } from '../../qrl/qrl.public';\n import { createContextId, useContext, useContextProvider } from '../../use/use-context';\n import { useOn, useOnDocument, useOnWindow } from '../../use/use-on';\n import { Resource, useResource$ } from '../../use/use-resource';\n-import { useStylesScopedQrl, useStylesQrl } from '../../use/use-styles';\n-import { useVisibleTask$, useTask$ } from '../../use/use-task';\n+import { useSignal } from '../../use/use-signal';\n+import { useStore } from '../../use/use-store.public';\n+import { useStylesQrl, useStylesScopedQrl } from '../../use/use-styles';\n+import { useTask$, useVisibleTask$ } from '../../use/use-task';\n import { delay } from '../../util/promises';\n-import { SSRComment, SSRRaw } from '../jsx/utils.public';\n-import { Slot } from '../jsx/slot.public';\n import { HTMLFragment, jsx } from '../jsx/jsx-runtime';\n-import { _renderSSR, type RenderSSROptions } from './render-ssr';\n-import { useStore } from '../../use/use-store.public';\n-import { useSignal } from '../../use/use-signal';\n-import { expect, test, vi } from 'vitest';\n+import { Slot } from '../jsx/slot.public';\n import type { JSXOutput } from '../jsx/types/jsx-node';\n+import { SSRComment, SSRRaw } from '../jsx/utils.public';\n+import { _renderSSR, type RenderSSROptions } from './render-ssr';\n \n test('render attributes', async () => {\n   await testSSR(\n@@ -769,7 +769,7 @@ test('using component props', async () => {\n     <container q:container=\"paused\" q:version=\"dev\" q:render=\"ssr-dev\" q:base=\"\" q:manifest-hash=\"test\" class=\"qc\ud83d\udce6\">\n       <!--qv q:id=0 q:key=sX:-->\n       <section>\n-        <div>MyCmp{\"id\":\"12\",\"host:prop\":\"attribute\",\"innerHTML\":\"123\",\"dangerouslySetInnerHTML\":\"432\",\"onClick\":\"lazy.js\",\"prop\":\"12\"}</div>\n+        <div>MyCmp{&quot;id&quot;:&quot;12&quot;,&quot;host:prop&quot;:&quot;attribute&quot;,&quot;innerHTML&quot;:&quot;123&quot;,&quot;dangerouslySetInnerHTML&quot;:&quot;432&quot;,&quot;onClick&quot;:&quot;lazy.js&quot;,&quot;prop&quot;:&quot;12&quot;}</div>\n       </section>\n       <q:template q:slot hidden aria-hidden=\"true\">stuff</q:template>\n       <!--/qv-->\n@@ -1509,7 +1509,7 @@ test('cleanse class attribute', async () => {\n   };\n   await testSSR(\n     <body {...o}></body>,\n-    '<html q:container=\"paused\" q:version=\"dev\" q:render=\"ssr-dev\" q:base=\"\" q:manifest-hash=\"test\"><body class=\"&quot;><script>alert(&quot;\u0ca0~\u0ca0&quot;)</script>\"></body></html>'\n+    '<html q:container=\"paused\" q:version=\"dev\" q:render=\"ssr-dev\" q:base=\"\" q:manifest-hash=\"test\"><body class=\"&quot;&gt;&lt;script&gt;alert(&quot;\u0ca0~\u0ca0&quot;)&lt;/script&gt;\"></body></html>'\n   );\n });\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 6
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "b6dbf79165a03c7b9935397ff9fdb81f78cee349",
            "date": "2025-01-13T20:22:51Z",
            "author_login": "shairez"
          },
          {
            "sha": "6f5cac3b96c6c6b359fd7de8bd8b9ec88a67ec89",
            "date": "2025-01-11T11:11:39Z",
            "author_login": "wmertens"
          },
          {
            "sha": "cde2f5e75996a3b6c772fa428cc20e52e35cde62",
            "date": "2025-01-11T08:50:26Z",
            "author_login": "gioboa"
          },
          {
            "sha": "8406d8d184d402732d73ad18d3df4127e9e6052c",
            "date": "2025-01-10T08:25:58Z",
            "author_login": "wmertens"
          },
          {
            "sha": "3e09a1aad772d40383f92ec02413e0b895a8cfbf",
            "date": "2025-01-09T13:03:54Z",
            "author_login": "forresst"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:L",
    "cwe_id": "CWE-79",
    "description": "Qwik is a performance focused javascript framework. A potential mutation XSS vulnerability exists in Qwik for versions up to but not including 1.6.0. Qwik improperly escapes HTML on server-side rendering. It converts strings according to the rules found in the `render-ssr.ts` file. It sometimes causes the situation that the final DOM tree rendered on browsers is different from what Qwik expects on server-side rendering. This may be leveraged to perform XSS attacks, and a type of the XSS is known as mXSS (mutation XSS). This has been resolved in qwik version 1.6.0 and @builder.io/qwik version 1.7.3. All users are advised to upgrade. There are no known workarounds for this vulnerability.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-08-06T18:15:56.883",
    "last_modified": "2024-08-12T18:51:29.497",
    "fix_date": "2024-06-24T21:31:30Z"
  },
  "references": [
    {
      "url": "https://github.com/QwikDev/qwik/blob/v1.5.5/packages/qwik/src/core/render/ssr/render-ssr.ts#L1182-L1208",
      "source": "security-advisories@github.com",
      "tags": [
        "Product"
      ]
    },
    {
      "url": "https://github.com/QwikDev/qwik/commit/7e742eb3a1001542d795776c0317d47df8b9d64e",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/QwikDev/qwik/security/advisories/GHSA-2rwj-7xq8-4gx4",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:34.538264",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "qwik",
    "owner": "QwikDev",
    "created_at": "2021-05-19T15:33:32Z",
    "updated_at": "2025-01-14T11:35:43Z",
    "pushed_at": "2025-01-13T20:22:53Z",
    "size": 49497,
    "stars": 21038,
    "forks": 1322,
    "open_issues": 284,
    "watchers": 21038,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "build/v2",
      "main",
      "upcoming"
    ],
    "languages": {
      "TypeScript": 3354182,
      "MDX": 1127422,
      "JavaScript": 843160,
      "Rust": 253194,
      "CSS": 119814,
      "HTML": 27225,
      "Nix": 2469,
      "Dockerfile": 1339,
      "Makefile": 1279,
      "Shell": 60
    },
    "commit_activity": {
      "total_commits_last_year": 932,
      "avg_commits_per_week": 17.923076923076923,
      "days_active_last_year": 266
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T16:23:35.650701"
  }
}