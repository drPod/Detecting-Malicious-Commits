{
  "cve_id": "CVE-2024-43373",
  "github_data": {
    "repository": "j4k0xb/webcrack",
    "fix_commit": "4bc5c6f353012ee7edc2cb39d01a728ab7426999",
    "related_commits": [
      "4bc5c6f353012ee7edc2cb39d01a728ab7426999"
    ],
    "patch_url": "https://github.com/j4k0xb/webcrack/commit/4bc5c6f353012ee7edc2cb39d01a728ab7426999.patch",
    "fix_commit_details": {
      "sha": "4bc5c6f353012ee7edc2cb39d01a728ab7426999",
      "commit_date": "2024-08-14T10:51:19Z",
      "author": {
        "login": "j4k0xb",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "fix: path traversal on windows",
        "length": 30,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 53,
        "additions": 47,
        "deletions": 6
      },
      "files": [
        {
          "filename": "packages/webcrack/src/unpack/bundle.ts",
          "status": "modified",
          "additions": 1,
          "deletions": 4,
          "patch": "@@ -1,11 +1,8 @@\n import traverse from '@babel/traverse';\n import type * as m from '@codemod/matchers';\n-import { posix } from 'node:path';\n+import { dirname, join, normalize } from 'node:path';\n import type { Module } from './module';\n \n-// eslint-disable-next-line @typescript-eslint/unbound-method\n-const { dirname, join, normalize } = posix;\n-\n export class Bundle {\n   type: 'webpack' | 'browserify';\n   entryId: string;"
        },
        {
          "filename": "packages/webcrack/src/unpack/test/samples/webpack-path-traversal-windows.js",
          "status": "added",
          "additions": 20,
          "deletions": 0,
          "patch": "@@ -0,0 +1,20 @@\n+(function (e) {\n+  var n = {};\n+  function o(r) {\n+    if (n[r]) {\n+      return n[r].exports;\n+    }\n+    var a = (n[r] = {\n+      i: r,\n+      l: false,\n+      exports: {},\n+    });\n+    e[r].call(a.exports, a, a.exports, o);\n+    a.l = true;\n+    return a.exports;\n+  }\n+  o.p = '';\n+  o((o.s = 386));\n+})({\n+  './\\\\..\\\\node_modules\\\\debug\\\\src\\\\index': function (e, t, n) {},\n+});"
        },
        {
          "filename": "packages/webcrack/src/unpack/test/samples/webpack-path-traversal-windows.js.snap",
          "status": "added",
          "additions": 12,
          "deletions": 0,
          "patch": "@@ -0,0 +1,12 @@\n+WebpackBundle {\n+  \"entryId\": \"386\",\n+  \"modules\": Map {\n+    \"./\\..\\node_modules\\debug\\src\\index\" => WebpackModule {\n+      \"ast\": ,\n+      \"id\": \"./\\..\\node_modules\\debug\\src\\index\",\n+      \"isEntry\": false,\n+      \"path\": \"././\\..\\node_modules\\debug\\src\\index.js\",\n+    },\n+  },\n+  \"type\": \"webpack\",\n+}\n\\ No newline at end of file"
        },
        {
          "filename": "packages/webcrack/src/unpack/test/unpack.test.ts",
          "status": "modified",
          "additions": 14,
          "deletions": 2,
          "patch": "@@ -1,7 +1,7 @@\n import * as m from '@codemod/matchers';\n import { readFile } from 'fs/promises';\n import { tmpdir } from 'os';\n-import { join } from 'path';\n+import { join, sep } from 'path';\n import { expect, test } from 'vitest';\n import { unpack } from '../index';\n \n@@ -26,7 +26,7 @@ test('path mapping', async () => {\n   expect(bundle!).toMatchSnapshot();\n });\n \n-test('prevent path traversal', async () => {\n+test.runIf(sep === '/')('prevent path traversal (posix)', async () => {\n   const code = await readFile(\n     join(SAMPLES_DIR, 'webpack-path-traversal.js'),\n     'utf8',\n@@ -37,3 +37,15 @@ test('prevent path traversal', async () => {\n   const dir = join(tmpdir(), 'path-traversal-test');\n   await expect(bundle!.save(dir)).rejects.toThrow('path traversal');\n });\n+\n+test.runIf(sep === '\\\\')('prevent path traversal (windows)', async () => {\n+  const code = await readFile(\n+    join(SAMPLES_DIR, 'webpack-path-traversal-windows.js'),\n+    'utf8',\n+  );\n+  const bundle = unpack(code);\n+  expect(bundle).toBeDefined();\n+\n+  const dir = join(tmpdir(), 'path-traversal-test');\n+  await expect(bundle!.save(dir)).rejects.toThrow('path traversal');\n+});"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 3,
        "unique_directories": 3,
        "max_directory_depth": 6
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "d44b47c76d6ec9ca4951e931c4c04d2a75597e2e",
            "date": "2024-12-28T06:16:12Z",
            "author_login": "j4k0xb"
          },
          {
            "sha": "c643d436dbe09f5616b3bdd01773f81d8cad1da5",
            "date": "2024-12-08T16:37:40Z",
            "author_login": "j4k0xb"
          },
          {
            "sha": "c0f31945ebe0915950688debf63ca2c1eeff312a",
            "date": "2024-12-05T19:30:41Z",
            "author_login": "j4k0xb"
          },
          {
            "sha": "fc80333039a2491e7372492ea68e287422495343",
            "date": "2024-12-05T19:29:54Z",
            "author_login": "j4k0xb"
          },
          {
            "sha": "1f60bad898125103e60178c20c90082b6b31334f",
            "date": "2024-12-04T14:16:06Z",
            "author_login": "j4k0xb"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.7,
    "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:L/I:H/A:L",
    "cwe_id": "CWE-20",
    "description": "webcrack is a tool for reverse engineering javascript. An arbitrary file write vulnerability exists in the webcrack module when processing specifically crafted malicious code on Windows systems. This vulnerability is triggered when using the unpack bundles feature in conjunction with the saving feature. If a module name includes a path traversal sequence with Windows path separators, an attacker can exploit this to overwrite files on the host system. This vulnerability allows an attacker to write arbitrary `.js` files to the host system, which can be leveraged to hijack legitimate Node.js modules to gain arbitrary code execution. This vulnerability has been patched in version 2.14.1.",
    "attack_vector": "LOCAL",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-08-15T15:15:21.217",
    "last_modified": "2024-08-16T21:46:08.440",
    "fix_date": "2024-08-14T10:51:19Z"
  },
  "references": [
    {
      "url": "https://github.com/j4k0xb/webcrack/blob/241f9469e6401f3dabc6373233d85a5e76966b54/packages/webcrack/src/unpack/bundle.ts#L79",
      "source": "security-advisories@github.com",
      "tags": [
        "Product"
      ]
    },
    {
      "url": "https://github.com/j4k0xb/webcrack/commit/4bc5c6f353012ee7edc2cb39d01a728ab7426999",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/j4k0xb/webcrack/security/advisories/GHSA-ccqh-278p-xq6w",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:37.350658",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "webcrack",
    "owner": "j4k0xb",
    "created_at": "2023-01-30T22:04:53Z",
    "updated_at": "2025-01-14T15:32:15Z",
    "pushed_at": "2024-12-28T06:21:49Z",
    "size": 1556,
    "stars": 1182,
    "forks": 142,
    "open_issues": 35,
    "watchers": 1182,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "TypeScript": 291791,
      "JavaScript": 59891,
      "HTML": 858,
      "CSS": 441
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T21:13:40.853579"
  }
}