{
  "cve_id": "CVE-2024-43377",
  "github_data": {
    "repository": "umbraco/Umbraco-CMS",
    "fix_commit": "72bef8861d94a39d5cc9530a04c4797b91fcbecf",
    "related_commits": [
      "72bef8861d94a39d5cc9530a04c4797b91fcbecf"
    ],
    "patch_url": "https://github.com/umbraco/Umbraco-CMS/commit/72bef8861d94a39d5cc9530a04c4797b91fcbecf.patch",
    "fix_commit_details": {
      "sha": "72bef8861d94a39d5cc9530a04c4797b91fcbecf",
      "commit_date": "2024-08-19T13:04:08Z",
      "author": {
        "login": "Migaroez",
        "type": "User",
        "stats": {
          "total_commits": 166,
          "average_weekly_commits": 0.22865013774104684,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 58
        }
      },
      "commit_message": {
        "title": "Merge commit from fork",
        "length": 22,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 67,
        "additions": 62,
        "deletions": 5
      },
      "files": [
        {
          "filename": "src/Umbraco.Cms.Api.Management/DependencyInjection/BackOfficeAuthPolicyBuilderExtensions.cs",
          "status": "modified",
          "additions": 2,
          "deletions": 1,
          "patch": "@@ -29,6 +29,7 @@ internal static IUmbracoBuilder AddAuthorizationPolicies(this IUmbracoBuilder bu\n         builder.Services.AddSingleton<IAuthorizationHandler, UserGroupPermissionHandler>();\n         builder.Services.AddSingleton<IAuthorizationHandler, UserPermissionHandler>();\n         builder.Services.AddSingleton<IAuthorizationHandler, AllowedApplicationHandler>();\n+        builder.Services.AddSingleton<IAuthorizationHandler, BackOfficeHandler>();\n \n         builder.Services.AddAuthorization(CreatePolicies);\n         return builder;\n@@ -46,7 +47,7 @@ void AddAllowedApplicationsPolicy(string policyName, params string[] allowedClai\n         options.AddPolicy(AuthorizationPolicies.BackOfficeAccess, policy =>\n         {\n             policy.AuthenticationSchemes.Add(OpenIddictValidationAspNetCoreDefaults.AuthenticationScheme);\n-            policy.RequireAuthenticatedUser();\n+            policy.Requirements.Add(new BackOfficeRequirement());\n         });\n \n         options.AddPolicy(AuthorizationPolicies.RequireAdminAccess, policy =>"
        },
        {
          "filename": "src/Umbraco.Cms.Api.Management/Security/Authorization/DenyLocalLogin/DenyLocalLoginHandler.cs",
          "status": "modified",
          "additions": 5,
          "deletions": 4,
          "patch": "@@ -1,5 +1,6 @@\n using Microsoft.AspNetCore.Authorization;\n using Microsoft.AspNetCore.Authorization.Infrastructure;\n+using Umbraco.Cms.Api.Management.Security.Authorization.User;\n \n namespace Umbraco.Cms.Api.Management.Security.Authorization.DenyLocalLogin;\n \n@@ -24,12 +25,12 @@ protected override Task<bool> IsAuthorized(AuthorizationHandlerContext context,\n \n         if (isDenied is false)\n         {\n-            // AuthorizationPolicies.BackOfficeAccess policy adds this requirement by policy.RequireAuthenticatedUser()\n+            // AuthorizationPolicies.BackOfficeAccess policy adds this requirement by policy.Requirements.Add(new BackOfficeRequirement());\n             // Since we want to \"allow anonymous\" for some endpoints (i.e. BackOfficeController.Login()), it is necessary to succeed this requirement\n-            IEnumerable<DenyAnonymousAuthorizationRequirement> denyAnonymousUserRequirements = context.PendingRequirements.OfType<DenyAnonymousAuthorizationRequirement>();\n-            foreach (DenyAnonymousAuthorizationRequirement denyAnonymousUserRequirement in denyAnonymousUserRequirements)\n+            IEnumerable<BackOfficeRequirement> backOfficeRequirements = context.PendingRequirements.OfType<BackOfficeRequirement>();\n+            foreach (BackOfficeRequirement backOfficeRequirement in backOfficeRequirements)\n             {\n-                context.Succeed(denyAnonymousUserRequirement);\n+                context.Succeed(backOfficeRequirement);\n             }\n         }\n "
        },
        {
          "filename": "src/Umbraco.Cms.Api.Management/Security/Authorization/User/BackOfficeHandler.cs",
          "status": "added",
          "additions": 35,
          "deletions": 0,
          "patch": "@@ -0,0 +1,35 @@\n+using Microsoft.AspNetCore.Authorization;\n+using Umbraco.Cms.Core.Security;\n+\n+namespace Umbraco.Cms.Api.Management.Security.Authorization.User;\n+\n+/// <summary>\n+///     Ensures authorization is successful for a back office user.\n+/// </summary>\n+public class BackOfficeHandler : MustSatisfyRequirementAuthorizationHandler<BackOfficeRequirement>\n+{\n+    private readonly IBackOfficeSecurityAccessor _backOfficeSecurity;\n+\n+    public BackOfficeHandler(IBackOfficeSecurityAccessor backOfficeSecurity)\n+    {\n+        _backOfficeSecurity = backOfficeSecurity;\n+    }\n+\n+    protected override Task<bool> IsAuthorized(AuthorizationHandlerContext context, BackOfficeRequirement requirement)\n+    {\n+\n+        if (context.HasFailed is false && context.HasSucceeded is true)\n+        {\n+            return Task.FromResult(true);\n+        }\n+\n+        if (!_backOfficeSecurity.BackOfficeSecurity?.IsAuthenticated() ?? false)\n+        {\n+            return Task.FromResult(false);\n+        }\n+\n+        var userApprovalSucceeded = !requirement.RequireApproval ||\n+                                    (_backOfficeSecurity.BackOfficeSecurity?.CurrentUser?.IsApproved ?? false);\n+        return Task.FromResult(userApprovalSucceeded);\n+    }\n+}"
        },
        {
          "filename": "src/Umbraco.Cms.Api.Management/Security/Authorization/User/BackOfficeRequirement.cs",
          "status": "added",
          "additions": 20,
          "deletions": 0,
          "patch": "@@ -0,0 +1,20 @@\n+using Microsoft.AspNetCore.Authorization;\n+\n+namespace Umbraco.Cms.Api.Management.Security.Authorization.User;\n+\n+/// <summary>\n+///     Authorization requirement for the <see cref=\"BackOfficeHandler\" />.\n+/// </summary>\n+public class BackOfficeRequirement : IAuthorizationRequirement\n+{\n+    /// <summary>\n+    ///     Initializes a new instance of the <see cref=\"BackOfficeRequirement\" /> class.\n+    /// </summary>\n+    /// <param name=\"requireApproval\">Flag for whether back-office user approval is required.</param>\n+    public BackOfficeRequirement(bool requireApproval = true) => RequireApproval = requireApproval;\n+\n+    /// <summary>\n+    ///     Gets a value indicating whether back-office user approval is required.\n+    /// </summary>\n+    public bool RequireApproval { get; }\n+}"
        }
      ],
      "file_patterns": {
        "security_files": 4,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 3,
        "max_directory_depth": 5
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "fd9c1a0e9c9a1d851e8ec75bc866e3e9a38a56e7",
            "date": "2025-01-14T12:32:09Z",
            "author_login": "justin-nevitech"
          },
          {
            "sha": "c4021e27e5f01a9a4311393a275082cbd3d9fa8a",
            "date": "2025-01-14T00:32:43Z",
            "author_login": "nul800sebastiaan"
          },
          {
            "sha": "ba58c6323c3944b371e9357ccc4019c396b7a44e",
            "date": "2025-01-07T08:25:41Z",
            "author_login": "nul800sebastiaan"
          },
          {
            "sha": "09575599ad540e9678af3bbca0af6286ee82f9f6",
            "date": "2025-01-03T16:59:50Z",
            "author_login": "jbreuer"
          },
          {
            "sha": "aaa44a20cb682d44c5ebd3870675e2354a03423f",
            "date": "2025-01-03T11:12:05Z",
            "author_login": "nul800sebastiaan"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.4,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:L/I:L/A:N",
    "cwe_id": "CWE-284",
    "description": "Umbraco CMS is an ASP.NET CMS. An authenticated user can access a few unintended endpoints. This issue is fixed in 14.1.2.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2024-08-20T15:15:23.490",
    "last_modified": "2024-08-26T18:26:40.353",
    "fix_date": "2024-08-19T13:04:08Z"
  },
  "references": [
    {
      "url": "https://github.com/umbraco/Umbraco-CMS/commit/72bef8861d94a39d5cc9530a04c4797b91fcbecf",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/umbraco/Umbraco-CMS/security/advisories/GHSA-hrww-x3fq-xcvh",
      "source": "security-advisories@github.com",
      "tags": [
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:37.376609",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "Umbraco-CMS",
    "owner": "umbraco",
    "created_at": "2013-06-10T13:50:46Z",
    "updated_at": "2025-01-14T12:32:15Z",
    "pushed_at": "2025-01-14T12:59:08Z",
    "size": 411751,
    "stars": 4657,
    "forks": 2730,
    "open_issues": 640,
    "watchers": 4657,
    "has_security_policy": false,
    "default_branch": "contrib",
    "protected_branches": [
      "contrib",
      "dev-v7-package-migrations",
      "dev-v8-umb-code-snippet",
      "main",
      "main-v6",
      "main-v7"
    ],
    "languages": {
      "C#": 18947686,
      "TypeScript": 10715670,
      "JavaScript": 98223,
      "HTML": 62911,
      "CSS": 19833,
      "MDX": 12163,
      "Dockerfile": 2714,
      "Shell": 1652,
      "TSQL": 159
    },
    "commit_activity": {
      "total_commits_last_year": 2931,
      "avg_commits_per_week": 56.36538461538461,
      "days_active_last_year": 245
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T12:59:29.013002"
  }
}