{
  "cve_id": "CVE-2024-43395",
  "github_data": {
    "repository": "MCJack123/craftos2",
    "fix_commit": "f7a88b905560df4366fb69f09b70f05984e05ad3",
    "related_commits": [
      "f7a88b905560df4366fb69f09b70f05984e05ad3"
    ],
    "patch_url": "https://github.com/MCJack123/craftos2/commit/f7a88b905560df4366fb69f09b70f05984e05ad3.patch",
    "fix_commit_details": {
      "sha": "f7a88b905560df4366fb69f09b70f05984e05ad3",
      "commit_date": "2024-08-16T11:16:12Z",
      "author": {
        "login": "MCJack123",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "v2.8.3: Improved path sanitization, fixed #365",
        "length": 46,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 45,
        "additions": 22,
        "deletions": 23
      },
      "files": [
        {
          "filename": "resources/CraftOS-PC.exe.manifest",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -3,7 +3,7 @@\n   <assemblyIdentity\n       type=\"win32\"\n       name=\"CraftOS-PC\"\n-      version=\"2.8.2.0\"\n+      version=\"2.8.3.0\"\n       processorArchitecture=\"*\"\n     />\n   <description>Advanced ComputerCraft Emulator</description>"
        },
        {
          "filename": "resources/Info.plist",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -21,13 +21,13 @@\n \t<key>CFBundlePackageType</key>\n \t<string>APPL</string>\n \t<key>CFBundleShortVersionString</key>\n-\t<string>2.8.2</string>\n+\t<string>2.8.3</string>\n \t<key>CFBundleSignature</key>\n \t<string>????</string>\n \t<key>LSApplicationCategoryType</key>\n \t<string>Unknown</string>\n \t<key>CFBundleVersion</key>\n-\t<string>2.8.2</string>\n+\t<string>2.8.3</string>\n \t<key>NSHumanReadableCopyright</key>\n \t<string>Copyright (C) 2019-2024 JackMacWindows.</string>\n \t<key>NSHighResolutionCapable</key>"
        },
        {
          "filename": "src/apis/fs.cpp",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -67,8 +67,9 @@ inline bool isVFSPath(path_t path) {\n     return false;\n }\n \n-static std::vector<path_t> fixpath_multiple(Computer *comp, const std::string& path) {\n+static std::vector<path_t> fixpath_multiple(Computer *comp, std::string path) {\n     std::vector<path_t> retval;\n+    path.erase(std::remove_if(path.begin(), path.end(), [](char c)->bool {return c == '\"' || c == '*' || c == ':' || c == '<' || c == '>' || c == '?' || c == '|' || c < 32; }), path.end());\n     std::vector<std::string> elems = split(path, \"/\\\\\");\n     std::list<std::string> pathc;\n     for (std::string s : elems) {\n@@ -77,7 +78,6 @@ static std::vector<path_t> fixpath_multiple(Computer *comp, const std::string& p\n             else if (pathc.empty()) pathc.push_back(\"..\");\n             else pathc.pop_back();\n         } else if (!s.empty() && !std::all_of(s.begin(), s.end(), [](const char c)->bool{return c == '.';})) {\n-            s.erase(std::remove_if(s.begin(), s.end(), [](char c)->bool{return c=='\"'||c==':'||c=='<'||c=='>'||c=='?'||c=='|';}), s.end());\n             pathc.push_back(s);\n         }\n     }"
        },
        {
          "filename": "src/apis/http.cpp",
          "status": "modified",
          "additions": 2,
          "deletions": 3,
          "patch": "@@ -835,11 +835,10 @@ static int websocket_send(lua_State *L) {\n     std::string str = checkstring(L, 1);\n     if (config.http_max_websocket_message > 0 && str.size() > (unsigned)config.http_max_websocket_message) luaL_error(L, \"Message is too large\");\n     ws_handle * ws = *(ws_handle**)lua_touserdata(L, lua_upvalueindex(1));\n-    if (ws == NULL) luaL_error(L, \"attempt to use a closed file\");\n+    if (ws == NULL) return luaL_error(L, \"attempt to use a closed file\");\n     std::lock_guard<std::mutex> lock(ws->lock);\n     if (ws->ws == NULL) return luaL_error(L, \"attempt to use a closed file\");\n-    if (ws->ws->sendFrame(str.c_str(), str.size(), (int)WebSocket::FRAME_FLAG_FIN | (int)(lua_toboolean(L, 2) ? WebSocket::FRAME_BINARY : WebSocket::FRAME_TEXT)) < 1) \n-        websocket_close(L);\n+    ws->ws->sendFrame(str.c_str(), str.size(), (int)WebSocket::FRAME_FLAG_FIN | (int)(lua_toboolean(L, 2) ? WebSocket::FRAME_BINARY : WebSocket::FRAME_TEXT));\n     return 0;\n }\n "
        },
        {
          "filename": "src/platform/CraftOS-PC 2.rc",
          "status": "modified",
          "additions": 4,
          "deletions": 4,
          "patch": "@@ -60,8 +60,8 @@ MANIFEST                RT_MANIFEST             \"..\\\\..\\\\resources\\\\CraftOS-PC.e\n //\n \n VS_VERSION_INFO VERSIONINFO\n- FILEVERSION 2,8,2,0\n- PRODUCTVERSION 2,8,2,0\n+ FILEVERSION 2,8,3,0\n+ PRODUCTVERSION 2,8,3,0\n  FILEFLAGSMASK 0x3fL\n #ifdef _DEBUG\n  FILEFLAGS 0x1L\n@@ -77,12 +77,12 @@ BEGIN\n         BLOCK \"040904b0\"\n         BEGIN\n             VALUE \"FileDescription\", \"CraftOS-PC\"\n-            VALUE \"FileVersion\", \"2.8.2.0\"\n+            VALUE \"FileVersion\", \"2.8.3.0\"\n             VALUE \"InternalName\", \"CraftOS-PC.exe\"\n             VALUE \"LegalCopyright\", \"Copyright (C) 2019-2024 JackMacWindows.\"\n             VALUE \"OriginalFilename\", \"CraftOS-PC.exe\"\n             VALUE \"ProductName\", \"CraftOS-PC\"\n-            VALUE \"ProductVersion\", \"2.8.2.0\"\n+            VALUE \"ProductVersion\", \"2.8.3.0\"\n         END\n     END\n     BLOCK \"VarFileInfo\""
        },
        {
          "filename": "src/util.cpp",
          "status": "modified",
          "additions": 6,
          "deletions": 6,
          "patch": "@@ -165,7 +165,8 @@ inline bool isVFSPath(path_t path) {\n     return false;\n }\n \n-path_t fixpath(Computer *comp, const std::string& path, bool exists, bool addExt, std::string * mountPath, bool * isRoot) {\n+path_t fixpath(Computer *comp, std::string path, bool exists, bool addExt, std::string * mountPath, bool * isRoot) {\n+    path.erase(std::remove_if(path.begin(), path.end(), [](char c)->bool {return c == '\"' || c == '*' || c == ':' || c == '<' || c == '>' || c == '?' || c == '|' || c < 32; }), path.end());\n     std::vector<std::string> elems = split(path, \"/\\\\\");\n     std::list<std::string> pathc;\n     for (std::string s : elems) {\n@@ -175,7 +176,6 @@ path_t fixpath(Computer *comp, const std::string& path, bool exists, bool addExt\n             else pathc.pop_back();\n         } else if (!s.empty() && s.find_first_not_of(' ') != std::string::npos && !std::all_of(s.begin(), s.end(), [](const char c)->bool{return c == '.';})) {\n             s = s.substr(s.find_first_not_of(' '), s.find_last_not_of(' ') - s.find_first_not_of(' ') + 1);\n-            s.erase(std::remove_if(s.begin(), s.end(), [](char c)->bool{return c=='\"'||c==':'||c=='<'||c=='>'||c=='?'||c=='|';}), s.end());\n             pathc.push_back(s);\n         }\n     }\n@@ -274,14 +274,14 @@ path_t fixpath(Computer *comp, const std::string& path, bool exists, bool addExt\n     return ss;\n }\n \n-bool fixpath_ro(Computer *comp, const std::string& path) {\n+bool fixpath_ro(Computer *comp, std::string path) {\n+    path.erase(std::remove_if(path.begin(), path.end(), [](char c)->bool {return c == '\"' || c == '*' || c == ':' || c == '<' || c == '>' || c == '?' || c == '|' || c < 32; }), path.end());\n     std::vector<std::string> elems = split(path, \"/\\\\\");\n     std::list<std::string> pathc;\n     for (std::string s : elems) {\n         if (s == \"..\") { if (pathc.empty()) return false; else pathc.pop_back(); }\n         else if (!s.empty() && !std::all_of(s.begin(), s.end(), [](const char c)->bool{return c == '.';})) {\n             s = s.substr(s.find_first_not_of(' '), s.find_last_not_of(' ') - s.find_first_not_of(' ') + 1);\n-            s.erase(std::remove_if(s.begin(), s.end(), [](char c)->bool{return c=='\"'||c==':'||c=='<'||c=='>'||c=='?'||c=='|';}), s.end());\n             pathc.push_back(s);\n         }\n     }\n@@ -299,14 +299,14 @@ bool fixpath_ro(Computer *comp, const std::string& path) {\n     return max_path.second;\n }\n \n-std::set<std::string> getMounts(Computer * computer, const std::string& comp_path) {\n+std::set<std::string> getMounts(Computer * computer, std::string comp_path) {\n+    comp_path.erase(std::remove_if(comp_path.begin(), comp_path.end(), [](char c)->bool {return c == '\"' || c == '*' || c == ':' || c == '<' || c == '>' || c == '?' || c == '|' || c < 32; }), comp_path.end());\n     std::vector<std::string> elems = split(comp_path, \"/\\\\\");\n     std::list<std::string> pathc;\n     std::set<std::string> retval;\n     for (std::string s : elems) {\n         if (s == \"..\") { if (pathc.empty()) return retval; else pathc.pop_back(); }\n         else if (!s.empty() && !std::all_of(s.begin(), s.end(), [](const char c)->bool{return c == '.';})) {\n-            s.erase(std::remove_if(s.begin(), s.end(), [](char c)->bool{return c=='\"'||c==':'||c=='<'||c=='>'||c=='?'||c=='|';}), s.end());\n             pathc.push_back(s);\n         }\n     }"
        },
        {
          "filename": "src/util.hpp",
          "status": "modified",
          "additions": 5,
          "deletions": 5,
          "patch": "@@ -26,8 +26,8 @@ extern \"C\" {\n #include <Computer.hpp>\n #include <Terminal.hpp>\n \n-#define CRAFTOSPC_VERSION    \"v2.8.2\"\n-#define CRAFTOSPC_CC_VERSION \"1.110.2\"\n+#define CRAFTOSPC_VERSION    \"v2.8.3\"\n+#define CRAFTOSPC_CC_VERSION \"1.112.0\"\n #define CRAFTOSPC_INDEV      false\n \n using path_t = std::filesystem::path;\n@@ -203,10 +203,10 @@ extern std::vector<std::wstring> split(const std::wstring& strToSplit, const wch\n extern std::vector<path_t> split(const path_t& strToSplit, const path_t::value_type * delimeter);\n extern void load_library(Computer *comp, lua_State *L, const library_t& lib);\n extern void HTTPDownload(const std::string& url, const std::function<void(std::istream*, Poco::Exception*, Poco::Net::HTTPResponse*)>& callback);\n-extern path_t fixpath(Computer *comp, const std::string& path, bool exists, bool addExt = true, std::string * mountPath = NULL, bool * isRoot = NULL);\n-extern bool fixpath_ro(Computer *comp, const std::string& path);\n+extern path_t fixpath(Computer *comp, std::string path, bool exists, bool addExt = true, std::string * mountPath = NULL, bool * isRoot = NULL);\n+extern bool fixpath_ro(Computer *comp, std::string path);\n extern path_t fixpath_mkdir(Computer * comp, const std::string& path, bool md = true, std::string * mountPath = NULL);\n-extern std::set<std::string> getMounts(Computer * computer, const std::string& comp_path);\n+extern std::set<std::string> getMounts(Computer * computer, std::string comp_path);\n extern void peripheral_update(Computer *comp);\n extern struct computer_configuration getComputerConfig(int id);\n extern void setComputerConfig(int id, const computer_configuration& cfg);"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 4,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "2274239a1b1a130037cebe09c6a4ff83d708087f",
            "date": "2024-11-26T00:10:02Z",
            "author_login": "MCJack123"
          },
          {
            "sha": "384e7f45ef69419d9ea7e6acc0be701ed0cd60f5",
            "date": "2024-10-02T22:06:54Z",
            "author_login": "MCJack123"
          },
          {
            "sha": "66cde0c9564b197b8a3e7e8e5a47f002eaa7a2a6",
            "date": "2024-09-27T22:16:51Z",
            "author_login": "MCJack123"
          },
          {
            "sha": "5031422faefd0dd88d13ecbb0097aa9f0b9c1d66",
            "date": "2024-09-11T21:27:28Z",
            "author_login": "MCJack123"
          },
          {
            "sha": "45122110de5900de4c1642cf2e02e25828f27885",
            "date": "2024-09-11T21:25:28Z",
            "author_login": "MCJack123"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.2,
    "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N",
    "cwe_id": "CWE-22",
    "description": "CraftOS-PC 2 is a rewrite of the desktop port of CraftOS from the popular Minecraft mod ComputerCraft using C++ and a modified version of PUC Lua, as well as SDL for drawing. Prior to version 2.8.3, users of CraftOS-PC 2 on Windows can escape the computer folder and access files anywhere without permission or notice by obfuscating `..`s to bypass the internal check preventing parent directory traversal. Version 2.8.3 contains a patch for this issue.",
    "attack_vector": "LOCAL",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-08-16T21:15:06.530",
    "last_modified": "2024-08-19T13:00:23.117",
    "fix_date": "2024-08-16T11:16:12Z"
  },
  "references": [
    {
      "url": "https://github.com/MCJack123/craftos2/commit/f7a88b905560df4366fb69f09b70f05984e05ad3",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/MCJack123/craftos2/security/advisories/GHSA-hr3w-wc83-6923",
      "source": "security-advisories@github.com",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:37.361202",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "craftos2",
    "owner": "MCJack123",
    "created_at": "2019-07-19T01:51:29Z",
    "updated_at": "2025-01-06T16:21:21Z",
    "pushed_at": "2024-11-26T00:10:43Z",
    "size": 28183,
    "stars": 243,
    "forks": 29,
    "open_issues": 36,
    "watchers": 243,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "luajit",
      "master"
    ],
    "languages": {
      "C++": 940043,
      "Java": 202706,
      "Objective-C++": 74975,
      "Lua": 36059,
      "M4": 15658,
      "Makefile": 8125,
      "JavaScript": 1364,
      "CMake": 635,
      "Shell": 597,
      "C": 482
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T17:57:30.285774"
  }
}