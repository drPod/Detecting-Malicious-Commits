{
  "cve_id": "CVE-2024-43410",
  "github_data": {
    "repository": "Eugeny/russh",
    "fix_commit": "f660ea3f64b86d11d19e33076012069f02431e55",
    "related_commits": [
      "f660ea3f64b86d11d19e33076012069f02431e55"
    ],
    "patch_url": null
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-770",
    "description": "Russh is a Rust SSH client & server library. Allocating an untrusted amount of memory allows any unauthenticated user to OOM a russh server. An SSH packet consists of a 4-byte big-endian length, followed by a byte stream of this length.\nAfter parsing and potentially decrypting the 4-byte length, russh allocates enough memory for this bytestream, as a performance optimization to avoid reallocations later. But this length is entirely untrusted and can be set to any value by the client, causing this much memory to be allocated, which will cause the process to OOM within a few such requests. This vulnerability is fixed in 0.44.1.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-08-21T16:15:08.373",
    "last_modified": "2024-08-21T17:25:08.560",
    "fix_date": null
  },
  "references": [
    {
      "url": "https://github.com/Eugeny/russh/commit/f660ea3f64b86d11d19e33076012069f02431e55",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/Eugeny/russh/security/advisories/GHSA-vgvv-x7xg-6cqg",
      "source": "security-advisories@github.com",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:37.381096",
    "processing_status": "raw"
  }
}