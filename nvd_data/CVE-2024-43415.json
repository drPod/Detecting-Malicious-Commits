{
  "cve_id": "CVE-2024-43415",
  "github_data": {
    "repository": "decidim-ice/decidim-module-decidim_awesome",
    "fix_commit": "84374037d34a3ac80dc18406834169c65869f11b",
    "related_commits": [
      "84374037d34a3ac80dc18406834169c65869f11b"
    ],
    "patch_url": "https://github.com/decidim-ice/decidim-module-decidim_awesome/commit/84374037d34a3ac80dc18406834169c65869f11b.patch",
    "fix_commit_details": {
      "sha": "84374037d34a3ac80dc18406834169c65869f11b",
      "commit_date": "2024-08-23T08:18:23Z",
      "author": {
        "login": "microstudi",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Security fix (#327)",
        "length": 168,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 82,
        "additions": 44,
        "deletions": 38
      },
      "files": [
        {
          "filename": "CHANGELOG.md",
          "status": "modified",
          "additions": 10,
          "deletions": 0,
          "patch": "@@ -1,6 +1,16 @@\n CHANGELOG\n =========\n \n+v0.11.2\n+-------\n+\n+Compatibility:\n+  - Decidim v0.28.x\n+\n+Features:\n+  - SQL vulnerability fix for admin accountability\n+  - Private fields proposal draft update fix\n+\n v0.11.1\n ------\n "
        },
        {
          "filename": "Gemfile.lock",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -1,7 +1,7 @@\n PATH\n   remote: .\n   specs:\n-    decidim-decidim_awesome (0.11.1)\n+    decidim-decidim_awesome (0.11.2)\n       decidim-admin (>= 0.28.0, < 0.29)\n       decidim-core (>= 0.28.0, < 0.29)\n       deface (>= 1.5)"
        },
        {
          "filename": "app/controllers/concerns/decidim/decidim_awesome/admin_accountability/admin/filterable_helper.rb",
          "status": "modified",
          "additions": 3,
          "deletions": 2,
          "patch": "@@ -13,10 +13,11 @@ def extra_dropdown_submenu_options_items(_filter, _i18n_scope)\n           end\n \n           def applied_filters_tags(i18n_ctx)\n-            if global? && params[:admin_role_type].present?\n+            admin_role_type = PaperTrailVersion.safe_admin_role_type(params[:admin_role_type])\n+            if global? && admin_role_type.present?\n               content_tag(:span, class: \"label secondary\") do\n                 concat \"#{i18n_filter_label(:admin_role_type, filterable_i18n_scope_from_ctx(i18n_ctx))}: \"\n-                concat t(\"decidim.decidim_awesome.admin.admin_accountability.admin_roles.#{params[:admin_role_type]}\", default: params[:admin_role_type])\n+                concat t(\"decidim.decidim_awesome.admin.admin_accountability.admin_roles.#{admin_role_type}\", default: admin_role_type)\n                 concat icon_link_to(\n                   \"close-circle-line\",\n                   url_for(export_params.except(:admin_role_type)),"
        },
        {
          "filename": "app/controllers/concerns/decidim/decidim_awesome/proposals/orderable_override.rb",
          "status": "modified",
          "additions": 9,
          "deletions": 22,
          "patch": "@@ -14,6 +14,8 @@ module OrderableOverride\n \n           private\n \n+          alias_method :decidim_original_reorder, :reorder\n+\n           # read order from session if available\n           def order\n             @order ||= detect_order(session[:order]) || default_order\n@@ -31,38 +33,23 @@ def possible_orders\n             end\n           end\n \n-          # rubocop:disable Metrics/CyclomaticComplexity\n           def reorder(proposals)\n+            title_by_locale = Arel.sql(proposals.sanitize_sql([\"decidim_proposals_proposals.title->>? #{collation}\", locale]))\n+            title_by_machine_translation = Arel.sql(proposals.sanitize_sql([\"decidim_proposals_proposals.title->'machine_translations'->>? #{collation}\", locale]))\n+            title_by_default_locale = Arel.sql(proposals.sanitize_sql([\"decidim_proposals_proposals.title->>? #{collation}\", default_locale]))\n             case order\n             when \"az\"\n-              proposals.order(Arel.sql(\"CONCAT(decidim_proposals_proposals.title->>'#{locale}',\n-                                        decidim_proposals_proposals.title->'machine_translations'->>'#{locale}',\n-                                        decidim_proposals_proposals.title->>'#{default_locale}') #{collation} ASC\"))\n+              proposals.order(title_by_locale => :asc, title_by_machine_translation => :asc, title_by_default_locale => :asc)\n             when \"za\"\n-              proposals.order(Arel.sql(\"CONCAT(decidim_proposals_proposals.title->>'#{locale}',\n-                                        decidim_proposals_proposals.title->'machine_translations'->>'#{locale}',\n-                                        decidim_proposals_proposals.title->>'#{default_locale}') #{collation} DESC\"))\n+              proposals.order(title_by_locale => :desc, title_by_machine_translation => :desc, title_by_default_locale => :desc)\n             when \"supported_first\"\n               proposals.joins(my_votes_join).group(:id).order(Arel.sql(\"COUNT(decidim_proposals_proposal_votes.id) DESC\"))\n             when \"supported_last\"\n               proposals.joins(my_votes_join).group(:id).order(Arel.sql(\"COUNT(decidim_proposals_proposal_votes.id) ASC\"))\n-            when \"most_commented\"\n-              proposals.left_joins(:comments).group(:id).order(Arel.sql(\"COUNT(decidim_comments_comments.id) DESC\"))\n-            when \"most_endorsed\"\n-              proposals.order(endorsements_count: :desc)\n-            when \"most_followed\"\n-              proposals.left_joins(:follows).group(:id).order(Arel.sql(\"COUNT(decidim_follows.id) DESC\"))\n-            when \"most_voted\"\n-              proposals.order(proposal_votes_count: :desc)\n-            when \"random\"\n-              proposals.order_randomly(random_seed)\n-            when \"recent\"\n-              proposals.order(published_at: :desc)\n-            when \"with_more_authors\"\n-              proposals.order(coauthorships_count: :desc)\n+            else\n+              decidim_original_reorder(proposals)\n             end\n           end\n-          # rubocop:enable Metrics/CyclomaticComplexity\n \n           def collation\n             @collation ||= begin"
        },
        {
          "filename": "app/controllers/decidim/decidim_awesome/admin/admin_accountability_controller.rb",
          "status": "modified",
          "additions": 7,
          "deletions": 7,
          "patch": "@@ -5,7 +5,7 @@ module DecidimAwesome\n     module Admin\n       class AdminAccountabilityController < DecidimAwesome::Admin::ApplicationController\n         include NeedsAwesomeConfig\n-        include Decidim::DecidimAwesome::AdminAccountability::Admin::Filterable\n+        include AdminAccountability::Admin::Filterable\n \n         helper_method :admin_actions, :collection, :export_params, :global?, :global_users_missing_date\n \n@@ -20,9 +20,9 @@ def index; end\n         def export\n           filters = export_params[:q]\n \n-          Decidim::DecidimAwesome::ExportAdminActionsJob.perform_later(current_user,\n-                                                                       params[:format].to_s,\n-                                                                       admin_actions.ransack(filters).result.ids)\n+          ExportAdminActionsJob.perform_later(current_user,\n+                                              params[:format].to_s,\n+                                              admin_actions.ransack(filters).result.ids)\n \n           redirect_back fallback_location: decidim_admin_decidim_awesome.admin_accountability_path,\n                         notice: t(\"decidim.decidim_awesome.admin.admin_accountability.exports.notice\")\n@@ -39,11 +39,11 @@ def collection\n         end\n \n         def space_role_actions\n-          @space_role_actions ||= Decidim::DecidimAwesome::PaperTrailVersion.space_role_actions(current_organization)\n+          @space_role_actions ||= PaperTrailVersion.space_role_actions(current_organization)\n         end\n \n         def admin_role_actions\n-          @admin_role_actions ||= Decidim::DecidimAwesome::PaperTrailVersion.in_organization(current_organization).admin_role_actions(params[:admin_role_type])\n+          @admin_role_actions ||= PaperTrailVersion.in_organization(current_organization).admin_role_actions(PaperTrailVersion.safe_admin_role_type(params[:admin_role_type]))\n         end\n \n         def export_params\n@@ -61,7 +61,7 @@ def global_users_missing_date\n           return unless global?\n \n           @global_users_missing_date ||= begin\n-            first_version = Decidim::DecidimAwesome::PaperTrailVersion.where(item_type: \"Decidim::UserBaseEntity\").last\n+            first_version = PaperTrailVersion.where(item_type: \"Decidim::UserBaseEntity\").last\n             first_user = Decidim::User.first\n             first_version.created_at if first_user && first_version && (first_version.created_at > first_user.created_at + 1.second)\n           end"
        },
        {
          "filename": "app/models/decidim/decidim_awesome/paper_trail_version.rb",
          "status": "modified",
          "additions": 5,
          "deletions": 1,
          "patch": "@@ -9,6 +9,10 @@ def self.safe_user_roles\n         DecidimAwesome.participatory_space_roles.filter(&:safe_constantize)\n       end\n \n+      def self.safe_admin_role_type(admin_role)\n+        Decidim.user_roles.find { |role| role == admin_role }\n+      end\n+\n       scope :space_role_actions, lambda { |organization|\n         role_changes = where(item_type: PaperTrailVersion.safe_user_roles, event: \"create\")\n         user_ids_from_object_changes = role_changes.pluck(:object_changes).map { |change| change.match(/decidim_user_id:\\n- ?\\n- (\\d+)/)[1].to_i }\n@@ -33,7 +37,7 @@ def self.admin_role_actions(filter = nil)\n         when \"admin\"\n           base.where(\"object_changes LIKE '%\\nadmin:\\n- false\\n- true%'\")\n         else\n-          base.where(Arel.sql(\"object_changes LIKE '%\\nroles:\\n- []\\n- - #{filter}\\n%'\"))\n+          base.where(\"object_changes LIKE ?\", \"%\\nroles:\\n- []\\n- - #{filter}\\n%\")\n         end\n       end\n "
        },
        {
          "filename": "lib/decidim/decidim_awesome/awesome.rb",
          "status": "modified",
          "additions": 4,
          "deletions": 4,
          "patch": "@@ -333,11 +333,11 @@ def self.hash_prepend!(hash, before_key, key, value)\n \n     def self.collation_for(locale)\n       @collation_for ||= {}\n-      @collation_for[locale] ||= begin\n-        res = ActiveRecord::Base.connection.execute(Arel.sql(\"SELECT collname FROM pg_collation WHERE collname LIKE '#{locale}-x-icu' LIMIT 1\")).first\n-        res ||= ActiveRecord::Base.connection.execute(Arel.sql(\"SELECT collname FROM pg_collation WHERE collname LIKE '#{locale[0..1]}%' LIMIT 1\")).first\n+      @collation_for[locale] ||= [\"#{locale}-x-icu\", \"#{locale[0..1]}%\"].filter_map do |loc|\n+        sql = ApplicationRecord.sanitize_sql([\"SELECT collname FROM pg_collation WHERE collname LIKE ? LIMIT 1\", loc])\n+        res = ActiveRecord::Base.connection.execute(sql).first\n         res[\"collname\"] if res\n-      end\n+      end.first\n     end\n \n     def self.enabled?(*config_vars)"
        },
        {
          "filename": "lib/decidim/decidim_awesome/version.rb",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -3,7 +3,7 @@\n module Decidim\n   # This holds the decidim-decidim_awesome version.\n   module DecidimAwesome\n-    VERSION = \"0.11.1\"\n+    VERSION = \"0.11.2\"\n     COMPAT_DECIDIM_VERSION = [\">= 0.28.0\", \"< 0.29\"].freeze\n   end\n end"
        },
        {
          "filename": "spec/models/paper_trail_version_spec.rb",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -106,6 +106,10 @@ module Decidim::DecidimAwesome\n         expect(PaperTrailVersion.in_organization(external_organization).admin_role_actions(\"valuator\")).to include(external_paper_trail_version)\n         expect(PaperTrailVersion.in_organization(external_organization).admin_role_actions(\"admin\")).to eq([])\n       end\n+\n+      it \"ignores invalid filters\" do\n+        expect(PaperTrailVersion.in_organization(organization).admin_role_actions(\"%')\")).to eq([])\n+      end\n     end\n   end\n end"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 1,
        "test_files": 0,
        "unique_directories": 7,
        "max_directory_depth": 7
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "3d4a5744ed468d7f570fba4a3977dc4739949aed",
            "date": "2025-01-13T14:10:49Z",
            "author_login": "microstudi"
          },
          {
            "sha": "1a0f4f222a744c5cab1d71cd96515ab3cdaaf6e3",
            "date": "2025-01-10T15:52:42Z",
            "author_login": "pl-buiquang"
          },
          {
            "sha": "0def5a0161cbee8b204cef8b85bdeb4f292ead7e",
            "date": "2024-11-20T11:43:38Z",
            "author_login": "pokecodebot"
          },
          {
            "sha": "e525c7f945f44d9c3f31dfcec3bb025a9994a1ab",
            "date": "2024-11-12T09:56:23Z",
            "author_login": "pokecodebot"
          },
          {
            "sha": "3fcd982118fd9e1a5b9ef9f3d2c97a1f67468d3d",
            "date": "2024-11-11T09:48:10Z",
            "author_login": "pokecodebot"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.0,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:C/C:H/I:H/A:L",
    "cwe_id": "CWE-89",
    "description": "An improper neutralization of special elements used in an SQL command in the papertrail/version- model of the decidim_awesome-module <= v0.11.1 (> 0.9.0) allows an authenticated admin user to manipulate sql queries to disclose information, read and write files or execute commands.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-11-12T16:15:21.800",
    "last_modified": "2024-11-13T19:15:08.580",
    "fix_date": "2024-08-23T08:18:23Z"
  },
  "references": [
    {
      "url": "https://github.com/decidim-ice/decidim-module-decidim_awesome/commit/84374037d34a3ac80dc18406834169c65869f11b",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/decidim-ice/decidim-module-decidim_awesome/security/advisories/GHSA-cxwf-qc32-375f",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://pentest.ait.ac.at/security-advisory/decidim-awesome-sql-injection-in-adminaccountability",
      "source": "security-advisories@github.com",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:09:29.285651",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "decidim-module-decidim_awesome",
    "owner": "decidim-ice",
    "created_at": "2020-03-24T20:38:16Z",
    "updated_at": "2025-01-13T14:10:53Z",
    "pushed_at": "2025-01-13T14:13:39Z",
    "size": 29905,
    "stars": 26,
    "forks": 28,
    "open_issues": 60,
    "watchers": 26,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main",
      "release/0.27-stable"
    ],
    "languages": {
      "Ruby": 884260,
      "HTML": 79825,
      "JavaScript": 79557,
      "SCSS": 19312,
      "Shell": 1573,
      "Dockerfile": 298
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "agpl-3.0"
    },
    "collected_at": "2025-01-14T22:44:26.604468"
  }
}