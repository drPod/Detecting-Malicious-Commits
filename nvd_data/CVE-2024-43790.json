{
  "cve_id": "CVE-2024-43790",
  "github_data": {
    "repository": "vim/vim",
    "fix_commit": "cacb6693c10bb19f28a50eca47bc",
    "related_commits": [
      "cacb6693c10bb19f28a50eca47bc"
    ],
    "patch_url": "https://github.com/vim/vim/commit/cacb6693c10bb19f28a50eca47bc.patch",
    "fix_commit_details": {
      "sha": "cacb6693c10bb19f28a50eca47bc",
      "commit_date": "2024-08-22T19:40:14Z",
      "author": {
        "login": "chrisbra",
        "type": "User",
        "stats": {
          "total_commits": 629,
          "average_weekly_commits": 0.5851162790697675,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 115
        }
      },
      "commit_message": {
        "title": "patch 9.1.0689: [security]: buffer-overflow in do_search() with 'rightleft'",
        "length": 397,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 12,
        "additions": 12,
        "deletions": 0
      },
      "files": [
        {
          "filename": "src/search.c",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -1548,6 +1548,7 @@ do_search(\n \t\t\t{\n \t\t\t    vim_free(msgbuf);\n \t\t\t    msgbuf = r;\n+\t\t\t    msgbuflen = STRLEN(msgbuf);\n \t\t\t    // move reversed text to beginning of buffer\n \t\t\t    while (*r != NUL && *r == ' ')\n \t\t\t\tr++;"
        },
        {
          "filename": "src/testdir/crash/reverse_text_overflow",
          "status": "added",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "src/testdir/test_crash.vim",
          "status": "modified",
          "additions": 9,
          "deletions": 0,
          "patch": "@@ -150,6 +150,13 @@ func Test_crash1_2()\n     \\ ' ; echo \"crash 4: [OK]\" >> '.. result .. \"\\<cr>\")\n   call TermWait(buf, 150)\n \n+  let file = 'crash/reverse_text_overflow'\n+  let cmn_args = \"%s -u NONE -i NONE -n -X -m -n -e -s -S %s -c ':qa!'\"\n+  let args = printf(cmn_args, vim, file)\n+  call term_sendkeys(buf, args ..\n+    \\ ' ; echo \"crash 5: [OK]\" >> '.. result .. \"\\<cr>\")\n+  call TermWait(buf, 150)\n+\n   \" clean up\n   exe buf .. \"bw!\"\n   exe \"sp \" .. result\n@@ -158,6 +165,7 @@ func Test_crash1_2()\n       \\ 'crash 2: [OK]',\n       \\ 'crash 3: [OK]',\n       \\ 'crash 4: [OK]',\n+      \\ 'crash 5: [OK]',\n       \\ ]\n \n   call assert_equal(expected, getline(1, '$'))\n@@ -201,6 +209,7 @@ func Test_crash1_3()\n   let args = printf(cmn_args, vim, file)\n   call term_sendkeys(buf, args)\n   call TermWait(buf, 150)\n+  call delete('Untitled')\n \n   let file = 'crash/nullpointer'\n   let cmn_args = \"%s -u NONE -i NONE -n -e -s -S %s -c ':qa!'\\<cr>\""
        },
        {
          "filename": "src/version.c",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -704,6 +704,8 @@ static char *(features[]) =\n \n static int included_patches[] =\n {   /* Add new patch number below this line */\n+/**/\n+    689,\n /**/\n     688,\n /**/"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 2,
        "unique_directories": 3,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "1aefe1de0b20fe4966863e07efa14b6aa87323ee",
            "date": "2025-01-14T16:29:42Z",
            "author_login": "yegappan"
          },
          {
            "sha": "1ac53b84ada3a992f320566737e66fa00d48611f",
            "date": "2025-01-14T16:25:02Z",
            "author_login": "chrisbra"
          },
          {
            "sha": "57f0119358ed7f060d5020309b9043463121435f",
            "date": "2025-01-14T16:21:42Z",
            "author_login": "h-east"
          },
          {
            "sha": "045564d0a73218594691953c0c8bf2035e1e176e",
            "date": "2025-01-14T16:15:59Z",
            "author_login": "habamax"
          },
          {
            "sha": "6289f9159102e0855bedc566636b5e7ca6ced72c",
            "date": "2025-01-14T16:13:36Z",
            "author_login": "yegappan"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 4.5,
    "cvss_vector": "CVSS:3.1/AV:L/AC:H/PR:N/UI:R/S:U/C:L/I:L/A:L",
    "cwe_id": "CWE-122",
    "description": "Vim is an open source command line text editor. When performing a search and displaying the search-count message is disabled (:set shm+=S), the search pattern is displayed at the bottom of the screen in a buffer (msgbuf). When right-left mode (:set rl) is enabled, the search pattern is reversed. This happens by allocating a new buffer. If the search pattern contains some ASCII NUL characters, the buffer allocated will be smaller than the original allocated buffer (because for allocating the reversed buffer, the strlen() function is called, which only counts until it notices an ASCII NUL byte ) and thus the original length indicator is wrong. This causes an overflow when accessing characters inside the msgbuf by the previously (now wrong) length of the msgbuf. The issue has been fixed as of Vim patch v9.1.0689.",
    "attack_vector": "LOCAL",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2024-08-22T22:15:05.317",
    "last_modified": "2024-11-21T09:35:52.580",
    "fix_date": "2024-08-22T19:40:14Z"
  },
  "references": [
    {
      "url": "https://github.com/vim/vim/commit/cacb6693c10bb19f28a50eca47bc",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/vim/vim/security/advisories/GHSA-v2x2-cjcg-f9jm",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://security.netapp.com/advisory/ntap-20240920-0005/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:37.387536",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "vim",
    "owner": "vim",
    "created_at": "2015-08-18T21:03:56Z",
    "updated_at": "2025-01-14T08:58:33Z",
    "pushed_at": "2025-01-13T07:25:13Z",
    "size": 153925,
    "stars": 37215,
    "forks": 5529,
    "open_issues": 1516,
    "watchers": 37215,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Vim Script": 20025864,
      "C": 14374546,
      "Roff": 576344,
      "Makefile": 490522,
      "C++": 246793,
      "NSIS": 180936,
      "M4": 159971,
      "Java": 85446,
      "Shell": 71333,
      "PostScript": 64070,
      "Module Management System": 56375,
      "Python": 51761,
      "XS": 51261,
      "Ruby": 40309,
      "JavaScript": 37774,
      "NewLisp": 37431,
      "Raku": 34258,
      "Emacs Lisp": 30304,
      "Perl": 29735,
      "SystemVerilog": 27883,
      "Smalltalk": 25762,
      "Awk": 19481,
      "Batchfile": 18475,
      "Objective-C": 13147,
      "DIGITAL Command Language": 10835,
      "HTML": 6885,
      "Prolog": 4336,
      "KRL": 4206,
      "MATLAB": 1970,
      "Thrift": 1670,
      "OpenEdge ABL": 1490,
      "sed": 826,
      "Tcl": 745,
      "Lua": 738,
      "BitBake": 388
    },
    "commit_activity": {
      "total_commits_last_year": 1872,
      "avg_commits_per_week": 36.0,
      "days_active_last_year": 324
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "vim"
    },
    "collected_at": "2025-01-14T12:54:52.772009"
  }
}