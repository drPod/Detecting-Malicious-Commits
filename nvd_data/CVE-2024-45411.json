{
  "cve_id": "CVE-2024-45411",
  "github_data": {
    "repository": "twigphp/Twig",
    "fix_commit": "11f68e2aeb526bfaf638e30d4420d8a710f3f7c6",
    "related_commits": [
      "11f68e2aeb526bfaf638e30d4420d8a710f3f7c6",
      "2102dd135986db79192d26fb5f5817a566e0a7de",
      "7afa198603de49d147e90d18062e7b9addcf5233"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "11f68e2aeb526bfaf638e30d4420d8a710f3f7c6",
      "commit_date": "2024-09-09T08:51:06Z",
      "author": {
        "login": "fabpot",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Fix a security issue when an included sandboxed template has been loaded before without the sandbox context",
        "length": 107,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 50,
        "additions": 43,
        "deletions": 7
      },
      "files": [
        {
          "filename": "src/Extension/CoreExtension.php",
          "status": "modified",
          "additions": 4,
          "deletions": 7,
          "patch": "@@ -1431,13 +1431,6 @@ public static function include(Environment $env, $context, $template, $variables\n             if (!$alreadySandboxed = $sandbox->isSandboxed()) {\n                 $sandbox->enableSandbox();\n             }\n-\n-            foreach ((\\is_array($template) ? $template : [$template]) as $name) {\n-                // if a Template instance is passed, it might have been instantiated outside of a sandbox, check security\n-                if ($name instanceof TemplateWrapper || $name instanceof Template) {\n-                    $name->unwrap()->checkSecurity();\n-                }\n-            }\n         }\n \n         try {\n@@ -1452,6 +1445,10 @@ public static function include(Environment $env, $context, $template, $variables\n                 return '';\n             }\n \n+            if ($isSandboxed) {\n+                $loaded->unwrap()->checkSecurity();\n+            }\n+\n             return $loaded->render($variables);\n         } finally {\n             if ($isSandboxed && !$alreadySandboxed) {"
        },
        {
          "filename": "tests/Extension/CoreTest.php",
          "status": "modified",
          "additions": 39,
          "deletions": 0,
          "patch": "@@ -12,8 +12,13 @@\n  */\n \n use PHPUnit\\Framework\\TestCase;\n+use Twig\\Environment;\n use Twig\\Error\\RuntimeError;\n use Twig\\Extension\\CoreExtension;\n+use Twig\\Extension\\SandboxExtension;\n+use Twig\\Loader\\ArrayLoader;\n+use Twig\\Sandbox\\SecurityError;\n+use Twig\\Sandbox\\SecurityPolicy;\n \n class CoreTest extends TestCase\n {\n@@ -354,6 +359,40 @@ public static function provideCompareCases()\n             [1, 42, \"\\x00\\x34\\x32\"],\n         ];\n     }\n+\n+    public function testSandboxedInclude()\n+    {\n+        $twig = new Environment(new ArrayLoader([\n+            'index' => '{{ include(\"included\", sandboxed: true) }}',\n+            'included' => '{{ \"included\"|e }}',\n+        ]));\n+        $policy = new SecurityPolicy(allowedFunctions: ['include']);\n+        $sandbox = new SandboxExtension($policy, false);\n+        $twig->addExtension($sandbox);\n+\n+        // We expect a compile error\n+        $this->expectException(SecurityError::class);\n+        $twig->render('index');\n+    }\n+\n+    public function testSandboxedIncludeWithPreloadedTemplate()\n+    {\n+        $twig = new Environment(new ArrayLoader([\n+            'index' => '{{ include(\"included\", sandboxed: true) }}',\n+            'included' => '{{ \"included\"|e }}',\n+        ]));\n+        $policy = new SecurityPolicy(allowedFunctions: ['include']);\n+        $sandbox = new SandboxExtension($policy, false);\n+        $twig->addExtension($sandbox);\n+\n+        // The template is loaded without the sandbox enabled\n+        // so, no compile error\n+        $twig->load('included');\n+\n+        // We expect a runtime error\n+        $this->expectException(SecurityError::class);\n+        $twig->render('index');\n+    }\n }\n \n final class CoreTestIteratorAggregate implements \\IteratorAggregate"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "fcd0332dca2a88e69a988ab7e4c603acc910b5e8",
            "date": "2025-01-25T15:41:44Z",
            "author_login": "fabpot"
          },
          {
            "sha": "11535e9058b289d55e5057bf9e701ba64af97ac6",
            "date": "2025-01-25T15:41:07Z",
            "author_login": "fabpot"
          },
          {
            "sha": "b680354bbb639bdf8019e2c488648d5dbbc501ef",
            "date": "2025-01-24T20:37:36Z",
            "author_login": "fabpot"
          },
          {
            "sha": "d76d2d7d260eeb4df2f2d96199c969b8b436a212",
            "date": "2025-01-24T20:36:20Z",
            "author_login": "fabpot"
          },
          {
            "sha": "18007078ba96eb8d208dbc59ad9df94eb984e405",
            "date": "2025-01-24T20:10:08Z",
            "author_login": "xabbuh"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:H",
    "cwe_id": "CWE-693",
    "description": "Twig is a template language for PHP. Under some circumstances, the sandbox security checks are not run which allows user-contributed templates to bypass the sandbox restrictions. This vulnerability is fixed in 1.44.8, 2.16.1, and 3.14.0.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2024-09-09T19:15:13.543",
    "last_modified": "2024-11-21T09:37:44.680",
    "fix_date": "2024-09-09T08:51:06Z"
  },
  "references": [
    {
      "url": "https://github.com/twigphp/Twig/commit/11f68e2aeb526bfaf638e30d4420d8a710f3f7c6",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/twigphp/Twig/commit/2102dd135986db79192d26fb5f5817a566e0a7de",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/twigphp/Twig/commit/7afa198603de49d147e90d18062e7b9addcf5233",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/twigphp/Twig/security/advisories/GHSA-6j75-5wfj-gh66",
      "source": "security-advisories@github.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2024/09/msg00031.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:09:00.107663",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "Twig",
    "owner": "twigphp",
    "created_at": "2009-10-07T21:23:38Z",
    "updated_at": "2025-01-14T10:54:36Z",
    "pushed_at": "2025-01-12T17:49:31Z",
    "size": 11930,
    "stars": 8222,
    "forks": 1259,
    "open_issues": 57,
    "watchers": 8222,
    "has_security_policy": false,
    "default_branch": "3.x",
    "protected_branches": [],
    "languages": {
      "PHP": 1085470,
      "Shell": 1690,
      "Twig": 641,
      "HTML": 286
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "bsd-3-clause"
    },
    "collected_at": "2025-01-14T16:15:22.367515"
  }
}