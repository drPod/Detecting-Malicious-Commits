{
  "cve_id": "CVE-2024-45595",
  "github_data": {
    "repository": "man-group/dtale",
    "fix_commit": "b6e30969390520d1400b55acbb13e5487b8472e8",
    "related_commits": [
      "b6e30969390520d1400b55acbb13e5487b8472e8"
    ],
    "patch_url": "https://github.com/man-group/dtale/commit/b6e30969390520d1400b55acbb13e5487b8472e8.patch",
    "fix_commit_details": {
      "sha": "b6e30969390520d1400b55acbb13e5487b8472e8",
      "commit_date": "2024-09-09T22:03:53Z",
      "author": {
        "login": "aschonfeld",
        "type": "User",
        "stats": {
          "total_commits": 683,
          "average_weekly_commits": 2.4306049822064058,
          "total_additions": 308176,
          "total_deletions": 231612,
          "weeks_active": 156
        }
      },
      "commit_message": {
        "title": "Added check for custom filtering before using custom queries in charts",
        "length": 70,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 51,
        "additions": 30,
        "deletions": 21
      },
      "files": [
        {
          "filename": "dtale/dash_application/layout/layout.py",
          "status": "modified",
          "additions": 24,
          "deletions": 20,
          "patch": "@@ -1709,27 +1709,31 @@ def show_map_style(show):\n             ),\n             className=\"row pt-3 pb-3 charts-filters\",\n         ),\n-        html.Div(\n+        (\n             html.Div(\n-                [\n-                    html.Div(\n-                        [\n-                            query_label,\n-                            dcc.Input(\n-                                id=\"query-input\",\n-                                type=\"text\",\n-                                placeholder=query_placeholder,\n-                                className=\"form-control\",\n-                                value=query_value,\n-                                style={\"lineHeight\": \"inherit\"},\n-                            ),\n-                        ],\n-                        className=\"input-group mr-3\",\n-                    )\n-                ],\n-                className=\"col\",\n-            ),\n-            className=\"row pt-3 pb-3 charts-filters\",\n+                html.Div(\n+                    [\n+                        html.Div(\n+                            [\n+                                query_label,\n+                                dcc.Input(\n+                                    id=\"query-input\",\n+                                    type=\"text\",\n+                                    placeholder=query_placeholder,\n+                                    className=\"form-control\",\n+                                    value=query_value,\n+                                    style={\"lineHeight\": \"inherit\"},\n+                                ),\n+                            ],\n+                            className=\"input-group mr-3\",\n+                        )\n+                    ],\n+                    className=\"col\",\n+                ),\n+                className=\"row pt-3 pb-3 charts-filters\",\n+            )\n+            if global_state.load_flag(inputs[\"data_id\"], \"enable_custom_filters\", False)\n+            else None\n         ),\n         html.Div(\n             html.Div("
        },
        {
          "filename": "dtale/views.py",
          "status": "modified",
          "additions": 4,
          "deletions": 1,
          "patch": "@@ -3380,9 +3380,12 @@ def get_chart_data(data_id):\n         max: maxY,\n     } or {error: 'Exception message', traceback: 'Exception stacktrace'}\n     \"\"\"\n+    custom_query = None\n+    if global_state.load_flag(data_id, \"enable_custom_filters\", False):\n+        custom_query = get_str_arg(request, \"query\")\n     data = run_query(\n         handle_predefined(data_id),\n-        build_query(data_id, get_str_arg(request, \"query\")),\n+        build_query(data_id, custom_query),\n         global_state.get_context_variables(data_id),\n     )\n     x = get_str_arg(request, \"x\")"
        },
        {
          "filename": "tests/dtale/test_views.py",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -1975,6 +1975,7 @@ def test_get_chart_data(unittest, rolling_data):\n \n     with app.test_client() as c:\n         build_data_inst({c.port: test_data})\n+        global_state.set_app_settings(dict(enable_custom_filters=True))\n         response = c.get(\n             \"/dtale/chart-data/{}\".format(c.port),\n             query_string=dict(query=\"missing_col == 'blah'\"),\n@@ -1997,6 +1998,7 @@ def test_get_chart_data(unittest, rolling_data):\n             response_data[\"error\"],\n             'query \"security_id == 51\" found no data, please alter',\n         )\n+    global_state.set_app_settings(dict(enable_custom_filters=False))\n \n     df = pd.DataFrame([dict(a=i, b=np.nan) for i in range(100)])\n     df, _ = views.format_data(df)"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 3,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "41fe9550d5143757dcc067e187336ed92b604ea3",
            "date": "2024-12-13T15:18:54Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "84de3713e39b33762c6cd4550fd210b12474c4f3",
            "date": "2024-12-13T14:55:55Z",
            "author_login": "aschonfeld"
          },
          {
            "sha": "1e26ed3ca12fe83812b90f12a2b3e5fb0b740f7a",
            "date": "2024-12-13T14:49:27Z",
            "author_login": "aschonfeld"
          },
          {
            "sha": "5310812cd7dec7c1ac91622a62743a3c1c1d034d",
            "date": "2024-12-03T21:05:32Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "0edceb9e86fdccc467dec29af67017738dce8c8f",
            "date": "2024-12-03T19:00:49Z",
            "author_login": "aschonfeld"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.1,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
    "cwe_id": "CWE-79",
    "description": "D-Tale is a visualizer for Pandas data structures. Users hosting D-Tale publicly can be vulnerable to remote code execution allowing attackers to run malicious code on the server. Users should upgrade to version 3.14.1 where the \"Custom Filter\" input is turned off by default.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-09-10T16:15:21.970",
    "last_modified": "2024-09-20T19:59:02.963",
    "fix_date": "2024-09-09T22:03:53Z"
  },
  "references": [
    {
      "url": "https://github.com/man-group/dtale#custom-filter",
      "source": "security-advisories@github.com",
      "tags": [
        "Product"
      ]
    },
    {
      "url": "https://github.com/man-group/dtale/commit/b6e30969390520d1400b55acbb13e5487b8472e8",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/man-group/dtale/security/advisories/GHSA-pw44-4h99-wqff",
      "source": "security-advisories@github.com",
      "tags": [
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:09:00.111711",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "dtale",
    "owner": "man-group",
    "created_at": "2019-07-15T09:34:48Z",
    "updated_at": "2025-01-13T14:38:00Z",
    "pushed_at": "2025-01-02T15:40:47Z",
    "size": 131813,
    "stars": 4818,
    "forks": 407,
    "open_issues": 61,
    "watchers": 4818,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "TypeScript": 1851060,
      "Python": 1562348,
      "CSS": 255281,
      "JavaScript": 38980,
      "HTML": 22403,
      "Dockerfile": 7802,
      "SCSS": 7049
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "lgpl-2.1"
    },
    "collected_at": "2025-01-14T15:21:07.887030"
  }
}