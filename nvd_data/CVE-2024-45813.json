{
  "cve_id": "CVE-2024-45813",
  "github_data": {
    "repository": "delvedor/find-my-way",
    "fix_commit": "5e9e0eb5d8d438e06a185d5e536a896572dd0440",
    "related_commits": [
      "5e9e0eb5d8d438e06a185d5e536a896572dd0440"
    ],
    "patch_url": "https://github.com/delvedor/find-my-way/commit/5e9e0eb5d8d438e06a185d5e536a896572dd0440.patch",
    "fix_commit_details": {
      "sha": "5e9e0eb5d8d438e06a185d5e536a896572dd0440",
      "commit_date": "2024-09-17T09:18:42Z",
      "author": {
        "login": "blakeembrey",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Merge commit from fork",
        "length": 22,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 39,
        "additions": 31,
        "deletions": 8
      },
      "files": [
        {
          "filename": "index.js",
          "status": "modified",
          "additions": 13,
          "deletions": 4,
          "patch": "@@ -192,6 +192,8 @@ Router.prototype._on = function _on (method, path, opts, handler, store) {\n \n     if (isParametricNode) {\n       let isRegexNode = false\n+      let isParamSafe = true\n+      let backtrack = ''\n       const regexps = []\n \n       let lastParamStartIndex = i + 1\n@@ -219,8 +221,10 @@ Router.prototype._on = function _on (method, path, opts, handler, store) {\n             regexps.push(trimRegExpStartAndEnd(regexString))\n \n             j = endOfRegexIndex + 1\n+            isParamSafe = true\n           } else {\n-            regexps.push('(.*?)')\n+            regexps.push(isParamSafe ? '(.*?)' : `(${backtrack}|(?:(?!${backtrack}).)*)`)\n+            isParamSafe = false\n           }\n \n           const staticPartStartIndex = j\n@@ -238,7 +242,7 @@ Router.prototype._on = function _on (method, path, opts, handler, store) {\n           if (staticPart) {\n             staticPart = staticPart.split('::').join(':')\n             staticPart = staticPart.split('%').join('%25')\n-            regexps.push(escapeRegExp(staticPart))\n+            regexps.push(backtrack = escapeRegExp(staticPart))\n           }\n \n           lastParamStartIndex = j + 1\n@@ -335,6 +339,8 @@ Router.prototype.findRoute = function findNode (method, path, constraints = {})\n \n     if (isParametricNode) {\n       let isRegexNode = false\n+      let isParamSafe = true\n+      let backtrack = ''\n       const regexps = []\n \n       let lastParamStartIndex = i + 1\n@@ -344,6 +350,7 @@ Router.prototype.findRoute = function findNode (method, path, constraints = {})\n         const isRegexParam = charCode === 40\n         const isStaticPart = charCode === 45 || charCode === 46\n         const isEndOfNode = charCode === 47 || j === pattern.length\n+\n         if (isRegexParam || isStaticPart || isEndOfNode) {\n           const paramName = pattern.slice(lastParamStartIndex, j)\n           params.push(paramName)\n@@ -361,8 +368,10 @@ Router.prototype.findRoute = function findNode (method, path, constraints = {})\n             regexps.push(trimRegExpStartAndEnd(regexString))\n \n             j = endOfRegexIndex + 1\n+            isParamSafe = false\n           } else {\n-            regexps.push('(.*?)')\n+            regexps.push(isParamSafe ? '(.*?)' : `(${backtrack}|(?:(?!${backtrack}).)*)`)\n+            isParamSafe = false\n           }\n \n           const staticPartStartIndex = j\n@@ -380,7 +389,7 @@ Router.prototype.findRoute = function findNode (method, path, constraints = {})\n           if (staticPart) {\n             staticPart = staticPart.split('::').join(':')\n             staticPart = staticPart.split('%').join('%25')\n-            regexps.push(escapeRegExp(staticPart))\n+            regexps.push(backtrack = escapeRegExp(staticPart))\n           }\n \n           lastParamStartIndex = j + 1"
        },
        {
          "filename": "test/issue-17.test.js",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -132,8 +132,8 @@ test('Multi parametric route / 2', t => {\n   })\n \n   findMyWay.on('GET', '/a/:p1-:p2', (req, res, params) => {\n-    t.equal(params.p1, 'foo')\n-    t.equal(params.p2, 'bar-baz')\n+    t.equal(params.p1, 'foo-bar')\n+    t.equal(params.p2, 'baz')\n   })\n \n   findMyWay.on('GET', '/b/:p1.:p2', (req, res, params) => {"
        },
        {
          "filename": "test/optional-params.test.js",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -68,8 +68,8 @@ test('Multi parametric route with optional param', (t) => {\n \n   findMyWay.on('GET', '/a/:p1-:p2?', (req, res, params) => {\n     if (params.p1 && params.p2) {\n-      t.equal(params.p1, 'foo')\n-      t.equal(params.p2, 'bar-baz')\n+      t.equal(params.p1, 'foo-bar')\n+      t.equal(params.p2, 'baz')\n     }\n   })\n "
        },
        {
          "filename": "test/regex.test.js",
          "status": "modified",
          "additions": 14,
          "deletions": 0,
          "patch": "@@ -255,3 +255,17 @@ test('Disable safe regex check', t => {\n     }\n   })\n })\n+\n+test('prevent back-tracking', (t) => {\n+  t.plan(0)\n+  t.setTimeout(20)\n+\n+  const findMyWay = FindMyWay({\n+    defaultRoute: () => {\n+      t.fail('route not matched')\n+    }\n+  })\n+\n+  findMyWay.on('GET', '/:foo-:bar-', (req, res, params) => {})\n+  findMyWay.find('GET', '/' + '-'.repeat(16_000) + 'a', { host: 'fastify.io' })\n+})"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 3,
        "unique_directories": 2,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "5636a3b734b784093cf85bef582a9328b3c04d9d",
            "date": "2025-01-01T14:56:08Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "09d09c73e9ff7351951a44bfb344cd7eaf01f8bc",
            "date": "2024-12-23T15:05:19Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "4a2e5a7ae905f6e0beb31ddefba098f2d267b236",
            "date": "2024-12-18T08:11:32Z",
            "author_login": "gurgunday"
          },
          {
            "sha": "1e3fd64889035550243c840ed0895fbab4913a33",
            "date": "2024-12-18T08:11:19Z",
            "author_login": "gurgunday"
          },
          {
            "sha": "aa96bdbfae15f37c8aa3977c83952825bd5211d0",
            "date": "2024-12-14T15:39:06Z",
            "author_login": "ilteoood"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
    "cwe_id": "CWE-1333",
    "description": "find-my-way is a fast, open source HTTP router, internally using a Radix Tree (aka compact Prefix Tree), supports route params, wildcards, and it's framework independent. A bad regular expression is generated any time one has two parameters within a single segment, when adding a `-` at the end, like `/:a-:b-`. This may cause a denial of service in some instances. Users are advised to update to find-my-way v8.2.2 or v9.0.1. or subsequent versions. There are no known workarounds for this issue.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-09-18T17:15:19.163",
    "last_modified": "2024-09-20T12:30:17.483",
    "fix_date": "2024-09-17T09:18:42Z"
  },
  "references": [
    {
      "url": "https://blakeembrey.com/posts/2024-09-web-redos",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/delvedor/find-my-way/commit/5e9e0eb5d8d438e06a185d5e536a896572dd0440",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/delvedor/find-my-way/security/advisories/GHSA-rrr8-f88r-h8q6",
      "source": "security-advisories@github.com",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:09:00.132529",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "find-my-way",
    "owner": "delvedor",
    "created_at": "2017-04-16T19:55:51Z",
    "updated_at": "2025-01-09T15:19:43Z",
    "pushed_at": "2025-01-01T14:56:15Z",
    "size": 532,
    "stars": 1511,
    "forks": 141,
    "open_issues": 15,
    "watchers": 1511,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "JavaScript": 345111,
      "TypeScript": 6785
    },
    "commit_activity": {
      "total_commits_last_year": 22,
      "avg_commits_per_week": 0.4230769230769231,
      "days_active_last_year": 11
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T12:55:19.485418"
  }
}