{
  "cve_id": "CVE-2024-45970",
  "github_data": {
    "repository": "mz-automation/libiec61850",
    "fix_commit": "ac925fae8e281ac6defcd630e9dd756264e9c5bc",
    "related_commits": [
      "ac925fae8e281ac6defcd630e9dd756264e9c5bc"
    ],
    "patch_url": "https://github.com/mz-automation/libiec61850/commit/ac925fae8e281ac6defcd630e9dd756264e9c5bc.patch",
    "fix_commit_details": {
      "sha": "ac925fae8e281ac6defcd630e9dd756264e9c5bc",
      "commit_date": "2024-07-23T17:50:15Z",
      "author": {
        "login": "mzillgith",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "- fixed potential buffer overflows in MMS client file service handling (LIB61850-449)",
        "length": 85,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 23,
        "additions": 19,
        "deletions": 4
      },
      "files": [
        {
          "filename": "src/mms/iso_mms/client/mms_client_files.c",
          "status": "modified",
          "additions": 19,
          "deletions": 4,
          "patch": "@@ -484,8 +484,13 @@ parseFileAttributes(uint8_t* buffer, int bufPos, int maxBufPos, uint32_t* fileSi\n             break;\n         case 0x81: /* lastModified */\n             {\n-                if (lastModified != NULL) {\n+                if (lastModified != NULL)\n+                {\n                     char gtString[40];\n+\n+                    if (length > sizeof(gtString) - 1)\n+                        return false; /* lastModified string too long */\n+\n                     memcpy(gtString, buffer + bufPos, length);\n                     gtString[length] = 0;\n                     *lastModified = Conversions_generalizedTimeToMsTime(gtString);\n@@ -512,12 +517,14 @@ parseDirectoryEntry(uint8_t* buffer, int bufPos, int maxBufPos, uint32_t invokeI\n     uint32_t fileSize = 0;\n     uint64_t lastModified = 0;\n \n-    while (bufPos < maxBufPos) {\n+    while (bufPos < maxBufPos)\n+    {\n         uint8_t tag = buffer[bufPos++];\n         int length;\n \n         bufPos = BerDecoder_decodeLength(buffer, &length, bufPos, maxBufPos);\n-        if (bufPos < 0) {\n+        if (bufPos < 0)\n+        {\n             if (DEBUG_MMS_CLIENT)\n                 printf(\"MMS_CLIENT: invalid length field\\n\");\n             return false;\n@@ -531,12 +538,20 @@ parseDirectoryEntry(uint8_t* buffer, int bufPos, int maxBufPos, uint32_t invokeI\n             tag = buffer[bufPos++];\n \n             bufPos = BerDecoder_decodeLength(buffer, &length, bufPos, maxBufPos);\n-            if (bufPos < 0) {\n+            if (bufPos < 0)\n+            {\n                 if (DEBUG_MMS_CLIENT)\n                     printf(\"MMS_CLIENT: invalid length field\\n\");\n                 return false;\n             }\n \n+            if (length > (sizeof(fileNameMemory) - 1))\n+            {\n+                if (DEBUG_MMS_CLIENT)\n+                    printf(\"MMS_CLIENT: filename too long\\n\");\n+                return false;\n+            }\n+\n             memcpy(filename, buffer + bufPos, length);\n             filename[length] = 0;\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "3a1480e5948ca53b4dcc5fa15b05598fa3322bb9",
            "date": "2024-11-18T15:00:54Z",
            "author_login": "mzillgith"
          },
          {
            "sha": "37596ec559993a5485670da50b86acb0c385e0d3",
            "date": "2024-11-18T10:58:11Z",
            "author_login": "mzillgith"
          },
          {
            "sha": "7b12c07711853adda856d403acfaae8042cdacdc",
            "date": "2024-11-18T10:37:24Z",
            "author_login": "mzillgith"
          },
          {
            "sha": "519b0208cc79d1af09d5ca40fb9ad1fd93822e93",
            "date": "2024-08-13T11:58:56Z",
            "author_login": "mzillgith"
          },
          {
            "sha": "d3090183408dbc2d34887a7d985cf95c140fe6aa",
            "date": "2024-08-13T10:20:03Z",
            "author_login": "mzillgith"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-120",
    "description": "Multiple Buffer overflows in the MMS Client in MZ Automation LibIEC61850 before commit ac925fae8e281ac6defcd630e9dd756264e9c5bc allow a malicious server to cause a stack-based buffer overflow via the MMS FileDirResponse message.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-11-15T19:15:07.497",
    "last_modified": "2024-11-18T17:11:56.587",
    "fix_date": "2024-07-23T17:50:15Z"
  },
  "references": [
    {
      "url": "https://encs.eu/news/critical-security-vulnerabilities-discovered-in-mz-automations-mms-client/",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://github.com/mz-automation/libiec61850/commit/ac925fae8e281ac6defcd630e9dd756264e9c5bc",
      "source": "cve@mitre.org",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:09:29.315095",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "libiec61850",
    "owner": "mz-automation",
    "created_at": "2017-02-10T19:10:20Z",
    "updated_at": "2025-01-14T06:52:56Z",
    "pushed_at": "2024-11-22T18:26:49Z",
    "size": 7528,
    "stars": 913,
    "forks": 478,
    "open_issues": 194,
    "watchers": 913,
    "has_security_policy": false,
    "default_branch": "v1.6",
    "protected_branches": [
      "v1.5",
      "v1.6_develop",
      "v1.6"
    ],
    "languages": {
      "C": 3700964,
      "C#": 616664,
      "Java": 253359,
      "CSS": 50382,
      "CMake": 41669,
      "C++": 30506,
      "Python": 15062,
      "Makefile": 10906,
      "SWIG": 5423,
      "HTML": 2788,
      "Shell": 819
    },
    "commit_activity": {
      "total_commits_last_year": 98,
      "avg_commits_per_week": 1.8846153846153846,
      "days_active_last_year": 38
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-3.0"
    },
    "collected_at": "2025-01-14T13:33:28.690742"
  }
}