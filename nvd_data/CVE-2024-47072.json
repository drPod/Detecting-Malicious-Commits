{
  "cve_id": "CVE-2024-47072",
  "github_data": {
    "repository": "x-stream/xstream",
    "fix_commit": "bb838ce2269cac47433e31c77b2b236466e9f266",
    "related_commits": [
      "bb838ce2269cac47433e31c77b2b236466e9f266"
    ],
    "patch_url": "https://github.com/x-stream/xstream/commit/bb838ce2269cac47433e31c77b2b236466e9f266.patch",
    "fix_commit_details": {
      "sha": "bb838ce2269cac47433e31c77b2b236466e9f266",
      "commit_date": "2024-10-18T09:33:48Z",
      "author": {
        "login": "joehni",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Document CVE-2024-47072 and add test case.",
        "length": 42,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 101,
        "additions": 99,
        "deletions": 2
      },
      "files": [
        {
          "filename": "xstream-distribution/src/content/CVE-2024-47072.html",
          "status": "added",
          "additions": 68,
          "deletions": 0,
          "patch": "@@ -0,0 +1,68 @@\n+<html>\n+<!--\n+ Copyright (C) 2024 XStream committers.\n+ All rights reserved.\n+ \n+ The software in this package is published under the terms of the BSD\n+ style license a copy of which has been included with this distribution in\n+ the LICENSE.txt file.\n+ \n+ Created on 19. September 2024 by Joerg Schaible\n+ -->\n+  <head>\n+    <title>CVE-2024-47072</title>\n+  </head>\n+  <body>\n+\n+    <h2 id=\"vulnerability\">Vulnerability</h2>\n+    \n+    <p>CVE-2024-47072: XStream is vulnerable to a Denial of Service attack due to stack overflow from a manipulated\n+\tbinary input stream.</p>\n+    \n+    <h2 id=\"affected_versions\">Affected Versions</h2>\n+    \n+    <p>All versions until and including version 1.4.20 are affected, if using XStream's BinaryStreamDriver.</p>\n+\n+    <h2 id=\"description\">Description</h2>\n+    \n+    <p>XStream provides a BinaryStreamDriver with an own optimized serialization format.  The format uses ids for\n+\tstring values as deduplication.  The mapping for these ids are created on-the-fly at marshalling time.  At\n+\tunmarshalling time the reader's implementation simply used a simple one-time recursion after reading a mapping\n+\ttoken to process the next normal token of the data stream.  However, an endless recursion could be triggered with\n+\tmanipulated input data resulting in a stack overflow causing a denial of service.</p>\n+\n+    <h2 id=\"reproduction\">Steps to Reproduce</h2>\n+\n+    <p>Prepare the manipulated data and provide it as input for a XStream instance using the BinaryDriver:</p>\n+<div class=\"Source Java\"><pre>final byte[] byteArray = new byte[36000];\n+for (int i = 0; i &lt; byteArray.length / 4; i++) {\n+      byteArray[i * 4] = 10;\n+      byteArray[i * 4 + 1] = -127;\n+      byteArray[i * 4 + 2] = 0;\n+      byteArray[i * 4 + 3] = 0;\n+}\n+\n+XStream xstream = new XStream(new BinaryStreamDriver());\n+xstream.fromXML(new ByteArrayInputStream(byteArray));\n+</pre></div>\n+\n+    <p>As soon as the data gets unmarshalled, the endless recursion is entered and the executing thread is aborted with\n+\ta stack overflow error.</p>\n+\n+    <h2 id=\"impact\">Impact</h2>\n+\n+    <p>The vulnerability may allow a remote attacker to terminate the application with a stack overflow error resulting\n+    in a denial of service only by manipulating the processed input stream if the instance is setup with a\n+\tBinaryStreamDriver.</p>\n+\n+    <h2 id=\"workarounds\">Workarounds</h2>\n+\n+\t<p>A simple solution is to catch the StackOverflowError in the client code calling XStream.  There's no other known\n+\tworkaround when using the BinaryStreamDriver.</p>\n+\n+    <h2 id=\"credits\">Credits</h2>\n+    \n+    <p>Alexis Challande of Trail Of Bits found and reported the issue to XStream and provided the required information to reproduce it.</p>\n+    \n+      </body>\n+ </html>"
        },
        {
          "filename": "xstream-distribution/src/content/security.html",
          "status": "modified",
          "additions": 10,
          "deletions": 1,
          "patch": "@@ -1,6 +1,6 @@\n <html>\n <!--\n- Copyright (C) 2014, 2015, 2017, 2019, 2020, 2021, 2022 XStream committers.\n+ Copyright (C) 2014, 2015, 2017, 2019, 2020, 2021, 2022, 2024 XStream committers.\n  All rights reserved.\n  \n  The software in this package is published under the terms of the BSD\n@@ -49,6 +49,15 @@ <h2 id=\"CVEs\">Documented Vulnerabilities</h2>\n         <th>CVE</th>\n         <th>Description</th>\n       </tr>\n+\t  <tr>\n+\t    <th>Version 1.4.21</th>\n+\t    <td></td>\n+\t  </tr>\n+\t  <tr>\n+\t    <th><a href=\"CVE-2024-47072.html\">CVE-2024-47072</a></th>\n+\t    <td>XStream is vulnerable to a Denial of Service attack due to stack overflow from a manipulated binary input\n+\t\tstream.</td>\n+\t  </tr>\n       <tr>\n         <th>Version 1.4.19</th>\n         <td></td>"
        },
        {
          "filename": "xstream-distribution/src/content/website.xml",
          "status": "modified",
          "additions": 2,
          "deletions": 1,
          "patch": "@@ -1,6 +1,6 @@\n <!--\n  Copyright (C) 2005, 2006 Joe Walnes.\n- Copyright (C) 2006, 2007, 2010, 2011, 2014, 2015, 2016, 2017, 2020, 2021, 2022 XStream committers.\n+ Copyright (C) 2006, 2007, 2010, 2011, 2014, 2015, 2016, 2017, 2020, 2021, 2022, 2024 XStream committers.\n  All rights reserved.\n  \n  The software in this package is published under the terms of the BSD\n@@ -63,6 +63,7 @@\n     </section>\n     <section>\n         <name>!Vulnerabilities</name>\n+        <page>CVE-2024-47072.html</page>\n         <page>CVE-2022-41966.html</page>\n         <page>CVE-2022-40151.html</page>\n         <page>CVE-2021-21341.html</page>"
        },
        {
          "filename": "xstream/src/test/com/thoughtworks/acceptance/SecurityVulnerabilityTest.java",
          "status": "modified",
          "additions": 19,
          "deletions": 0,
          "patch": "@@ -26,8 +26,10 @@\n import java.util.Map;\n import java.util.Set;\n \n+import com.thoughtworks.xstream.XStream;\n import com.thoughtworks.xstream.converters.ConversionException;\n import com.thoughtworks.xstream.core.JVM;\n+import com.thoughtworks.xstream.io.binary.BinaryStreamDriver;\n import com.thoughtworks.xstream.security.AnyTypePermission;\n import com.thoughtworks.xstream.security.ForbiddenClassException;\n import com.thoughtworks.xstream.security.InputManipulationException;\n@@ -545,4 +547,21 @@ public void testStackOverflowWithDeeplyNestedStructure() {\n             assertTrue(e.getMessage().indexOf(\"Stack Overflow\") >= 0);\n         }\n     }\n+\n+    public void testStackOverflowInBinaryStreamReaderWithManipulatedInputData() {\n+        final byte[] byteArray = new byte[36000];\n+        for (int i = 0; i < byteArray.length / 4; i++) {\n+            byteArray[i * 4] = 10;\n+            byteArray[i * 4 + 1] = -127;\n+            byteArray[i * 4 + 2] = 0;\n+            byteArray[i * 4 + 3] = 0;\n+        }\n+\n+        try {\n+            xstream = new XStream(new BinaryStreamDriver());\n+            xstream.fromXML(new ByteArrayInputStream(byteArray));\n+        } catch (final InputManipulationException e) {\n+            assertTrue(e.getMessage().indexOf(\"two mapping tokens\") >= 0);\n+        }\n+    }\n }"
        }
      ],
      "file_patterns": {
        "security_files": 2,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 6
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "9cbe8891fe698e4aeec1aca4b13d8ec868ccdf0a",
            "date": "2024-12-27T22:39:35Z",
            "author_login": "joehni"
          },
          {
            "sha": "d987316a7b4d7c48cbf0dd1396dde3853488b80b",
            "date": "2023-05-02T23:25:06Z",
            "author_login": "basil"
          },
          {
            "sha": "ab4a1729543e47f66889d2331ea65cca30dc7138",
            "date": "2024-11-06T20:15:41Z",
            "author_login": "joehni"
          },
          {
            "sha": "43e7156241a8cd176390ae853b472393724b55ed",
            "date": "2024-10-18T09:33:48Z",
            "author_login": "joehni"
          },
          {
            "sha": "9eef78cd85c51d3c77d6ee1061ee6df91f1dd36b",
            "date": "2024-11-06T18:11:09Z",
            "author_login": "joehni"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-121",
    "description": "XStream is a simple library to serialize objects to XML and back again. This vulnerability may allow a remote attacker to terminate the application with a stack overflow error resulting in a denial of service only by manipulating the processed input stream when XStream is configured to use the BinaryStreamDriver. XStream 1.4.21 has been patched to detect the manipulation in the binary input stream causing the the stack overflow and raises an InputManipulationException instead. Users are advised to upgrade. Users unable to upgrade may catch the StackOverflowError in the client code calling XStream if XStream is configured to use the BinaryStreamDriver.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-11-08T00:15:14.937",
    "last_modified": "2024-11-08T19:01:03.880",
    "fix_date": "2024-10-18T09:33:48Z"
  },
  "references": [
    {
      "url": "https://github.com/x-stream/xstream/commit/bb838ce2269cac47433e31c77b2b236466e9f266",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/x-stream/xstream/security/advisories/GHSA-hfq9-hggm-c56q",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://x-stream.github.io/CVE-2024-47072.html",
      "source": "security-advisories@github.com",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:09:29.261261",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "xstream",
    "owner": "x-stream",
    "created_at": "2015-03-14T15:57:12Z",
    "updated_at": "2024-12-27T22:39:45Z",
    "pushed_at": "2024-12-27T22:39:39Z",
    "size": 21741,
    "stars": 749,
    "forks": 228,
    "open_issues": 37,
    "watchers": 749,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Java": 2852082,
      "HTML": 711607,
      "CSS": 7028,
      "Batchfile": 2073,
      "Shell": 1714,
      "XSLT": 1128
    },
    "commit_activity": {
      "total_commits_last_year": 20,
      "avg_commits_per_week": 0.38461538461538464,
      "days_active_last_year": 12
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T13:03:10.131861"
  }
}