{
  "cve_id": "CVE-2024-47077",
  "github_data": {
    "repository": "goauthentik/authentik",
    "fix_commit": "22e586bd8cdc3d1db8a0f18314d76f82371129b2",
    "related_commits": [
      "22e586bd8cdc3d1db8a0f18314d76f82371129b2",
      "57a31b5dd16d4adce716b9878455c0d6f58155fe"
    ],
    "patch_url": "https://github.com/goauthentik/authentik/commit/22e586bd8cdc3d1db8a0f18314d76f82371129b2.patch",
    "fix_commit_details": {
      "sha": "22e586bd8cdc3d1db8a0f18314d76f82371129b2",
      "commit_date": "2024-09-27T14:19:15Z",
      "author": {
        "login": "gcp-cherry-pick-bot[bot]",
        "type": "Bot",
        "stats": {
          "total_commits": 22,
          "average_weekly_commits": 0.06811145510835913,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 4
        }
      },
      "commit_message": {
        "title": "security: fix CVE-2024-47077 (cherry-pick #11535) (#11538)",
        "length": 200,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 66,
        "additions": 63,
        "deletions": 3
      },
      "files": [
        {
          "filename": "authentik/providers/oauth2/tests/test_introspect.py",
          "status": "modified",
          "additions": 35,
          "deletions": 1,
          "patch": "@@ -29,7 +29,6 @@ def setUp(self) -> None:\n         self.app = Application.objects.create(\n             name=generate_id(), slug=generate_id(), provider=self.provider\n         )\n-        self.app.save()\n         self.user = create_test_admin_user()\n         self.auth = b64encode(\n             f\"{self.provider.client_id}:{self.provider.client_secret}\".encode()\n@@ -114,6 +113,41 @@ def test_introspect_invalid_token(self):\n             },\n         )\n \n+    def test_introspect_invalid_provider(self):\n+        \"\"\"Test introspection (mismatched provider and token)\"\"\"\n+        provider: OAuth2Provider = OAuth2Provider.objects.create(\n+            name=generate_id(),\n+            authorization_flow=create_test_flow(),\n+            redirect_uris=\"\",\n+            signing_key=create_test_cert(),\n+        )\n+        auth = b64encode(f\"{provider.client_id}:{provider.client_secret}\".encode()).decode()\n+\n+        token: AccessToken = AccessToken.objects.create(\n+            provider=self.provider,\n+            user=self.user,\n+            token=generate_id(),\n+            auth_time=timezone.now(),\n+            _scope=\"openid user profile\",\n+            _id_token=json.dumps(\n+                asdict(\n+                    IDToken(\"foo\", \"bar\"),\n+                )\n+            ),\n+        )\n+        res = self.client.post(\n+            reverse(\"authentik_providers_oauth2:token-introspection\"),\n+            HTTP_AUTHORIZATION=f\"Basic {auth}\",\n+            data={\"token\": token.token},\n+        )\n+        self.assertEqual(res.status_code, 200)\n+        self.assertJSONEqual(\n+            res.content.decode(),\n+            {\n+                \"active\": False,\n+            },\n+        )\n+\n     def test_introspect_invalid_auth(self):\n         \"\"\"Test introspect (invalid auth)\"\"\"\n         res = self.client.post("
        },
        {
          "filename": "authentik/providers/oauth2/views/introspection.py",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -46,10 +46,10 @@ def from_request(request: HttpRequest) -> \"TokenIntrospectionParams\":\n         if not provider:\n             raise TokenIntrospectionError\n \n-        access_token = AccessToken.objects.filter(token=raw_token).first()\n+        access_token = AccessToken.objects.filter(token=raw_token, provider=provider).first()\n         if access_token:\n             return TokenIntrospectionParams(access_token, provider)\n-        refresh_token = RefreshToken.objects.filter(token=raw_token).first()\n+        refresh_token = RefreshToken.objects.filter(token=raw_token, provider=provider).first()\n         if refresh_token:\n             return TokenIntrospectionParams(refresh_token, provider)\n         LOGGER.debug(\"Token does not exist\", token=raw_token)"
        },
        {
          "filename": "website/docs/security/CVE-2024-47077.md",
          "status": "added",
          "additions": 25,
          "deletions": 0,
          "patch": "@@ -0,0 +1,25 @@\n+# CVE-2024-47077\n+\n+_Reported by [@quentinmit](https://github.com/quentinmit)_\n+\n+## Insufficient cross-provider token validation during introspection\n+\n+### Summary\n+\n+Access tokens issued to one application can be stolen by that application and used to impersonate the user against any other proxy provider. Also, a user can steal an access token they were legitimately issued for one application and use it to access another application that they aren't allowed to access.\n+\n+### Details\n+\n+The proxy provider uses `/application/o/introspect/` to validate bearer tokens provided in the `Authorization` header:\n+\n+The implementation of this endpoint separately validates the `client_id` and `client_secret` (which are that of the proxy provider) and the `token` without validating that they correspond to the same provider.\n+\n+### Patches\n+\n+authentik 2024.6.5 and 2024.8.3 fix this issue.\n+\n+### For more information\n+\n+If you have any questions or comments about this advisory:\n+\n+-   Email us at [security@goauthentik.io](mailto:security@goauthentik.io)"
        },
        {
          "filename": "website/sidebars.js",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -511,6 +511,7 @@ const docsSidebar = {\n             items: [\n                 \"security/security-hardening\",\n                 \"security/policy\",\n+                \"security/CVE-2024-47077\",\n                 \"security/CVE-2024-42490\",\n                 \"security/CVE-2024-38371\",\n                 \"security/CVE-2024-37905\","
        }
      ],
      "file_patterns": {
        "security_files": 3,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 4,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "c19a8873563a5d337bde6865a7a69d4bd1a6d83f",
            "date": "2025-01-14T19:15:02Z",
            "author_login": "BeryJu"
          },
          {
            "sha": "09931bcbc20f4527acfcd9046fe1caeeda446c50",
            "date": "2025-01-14T14:56:03Z",
            "author_login": "BeryJu"
          },
          {
            "sha": "7a4293bf178ac7c6a2222593feef560053e16cbc",
            "date": "2025-01-14T12:40:25Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "6e569acd845bbcc79c50f40542bd729dd2243840",
            "date": "2025-01-14T12:40:17Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "02c69d767f02a9d887a9892128aa8e2e30011c38",
            "date": "2025-01-14T12:39:54Z",
            "author_login": "dependabot[bot]"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N",
    "cwe_id": "CWE-863",
    "description": "authentik is an open-source identity provider. Prior to versions 2024.8.3 and 2024.6.5, access tokens issued to one application can be stolen by that application and used to impersonate the user against any other proxy provider. Also, a user can steal an access token they were legitimately issued for one application and use it to access another application that they aren't allowed to access. Anyone who has more than one proxy provider application with different trust domains or different access control is affected. Versions 2024.8.3 and 2024.6.5 fix the issue.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-09-27T16:15:06.043",
    "last_modified": "2024-09-30T12:45:57.823",
    "fix_date": "2024-09-27T14:19:15Z"
  },
  "references": [
    {
      "url": "https://github.com/goauthentik/authentik/blob/70b5a214f2e7205572f914aaf68682501b9f5945/authentik/providers/oauth2/views/introspection.py#L42-L51",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/goauthentik/authentik/blob/70b5a214f2e7205572f914aaf68682501b9f5945/internal/outpost/proxyv2/application/auth_bearer.go#L30-L36",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/goauthentik/authentik/commit/22e586bd8cdc3d1db8a0f18314d76f82371129b2",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/goauthentik/authentik/commit/57a31b5dd16d4adce716b9878455c0d6f58155fe",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/goauthentik/authentik/security/advisories/GHSA-8gfm-pr6x-pfh9",
      "source": "security-advisories@github.com",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:09:02.089838",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "authentik",
    "owner": "goauthentik",
    "created_at": "2019-12-30T09:19:48Z",
    "updated_at": "2025-01-14T12:40:29Z",
    "pushed_at": "2025-01-14T13:17:29Z",
    "size": 348330,
    "stars": 14458,
    "forks": 984,
    "open_issues": 728,
    "watchers": 14458,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "Python": 3995415,
      "TypeScript": 2892221,
      "Go": 308962,
      "MDX": 124483,
      "JavaScript": 69953,
      "HTML": 24617,
      "Rust": 22748,
      "CSS": 19762,
      "Dockerfile": 15501,
      "Makefile": 9222,
      "Shell": 7042,
      "PHP": 1149
    },
    "commit_activity": {
      "total_commits_last_year": 3169,
      "avg_commits_per_week": 60.94230769230769,
      "days_active_last_year": 295
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T13:32:32.687051"
  }
}