{
  "cve_id": "CVE-2024-47182",
  "github_data": {
    "repository": "amir20/dozzle",
    "fix_commit": "de79f03aa3dbe5bb1e154a7e8d3dccbd229f3ea3",
    "related_commits": [
      "de79f03aa3dbe5bb1e154a7e8d3dccbd229f3ea3"
    ],
    "patch_url": "https://github.com/amir20/dozzle/commit/de79f03aa3dbe5bb1e154a7e8d3dccbd229f3ea3.patch",
    "fix_commit_details": {
      "sha": "de79f03aa3dbe5bb1e154a7e8d3dccbd229f3ea3",
      "commit_date": "2024-09-26T23:40:47Z",
      "author": {
        "login": "amir20",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "feat: uses bcrypt hash instead (#3293)",
        "length": 38,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 56,
        "additions": 37,
        "deletions": 19
      },
      "files": [
        {
          "filename": "docs/guide/authentication.md",
          "status": "modified",
          "additions": 10,
          "deletions": 12,
          "patch": "@@ -18,16 +18,16 @@ The content of the file looks like:\n users:\n   # \"admin\" here is username\n   admin:\n-    name: \"Admin\"\n-    # Just sha-256 which can be computed with \"echo -n password | shasum -a 256\"\n-    password: \"5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8\"\n     email: me@email.net\n+    name: Admin\n+    # Generate with docker run amir20/dozzle generate --name Admin --email me@email.net --password secret admin\n+    password: $2a$11$9ho4vY2LdJ/WBopFcsAS0uORC0x2vuFHQgT/yBqZyzclhHsoaIkzK\n ```\n \n-> [!TIP]\n-> This file can be generated with `docker run amir20/dozzle generate` with v6.6.x. See [below](#generating-users-yml) for more details.\n+Dozzle uses `email` to generate avatars using [Gravatar](https://gravatar.com/). It is optional. The password is hashed using `bcrypt` which can be generated using `docker run amir20/dozzle generate`.\n \n-Dozzle uses `email` to generate avatars using [Gravatar](https://gravatar.com/). It is optional. The password is hashed using `sha256` which can be generated with `echo -n 'secret-password' | shasum -a 256` or `echo -n 'secret-password' | sha256sum` on linux.\n+> [!WARNING]\n+> In previous versions of Dozzle, SHA-256 was used to hash passwords. Bcrypt is now more secure and is recommended for future use. Dozzle will revert to SHA-256 if it does not find a bcrypt hash. It is advisable to update the password hash to bcrypt using `docker run amir20/dozzle generate`. For more details, see [this issue](https://github.com/amir20/dozzle/security/advisories/GHSA-w7qr-q9fh-fj35).\n \n You will need to mount this file for Dozzle to find it. Here is an example:\n \n@@ -52,21 +52,19 @@ services:\n \n ```yaml [users.yml]\n users:\n-  # \"admin\" here is username\n   admin:\n-    name: \"Admin\"\n-    # Just sha-256 which can be computed with \"echo -n password | shasum -a 256\"\n-    password: \"5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8\"\n     email: me@email.net\n+    name: Admin\n+    password: $2a$11$9ho4vY2LdJ/WBopFcsAS0uORC0x2vuFHQgT/yBqZyzclhHsoaIkzK\n ```\n \n :::\n \n Dozzle uses [JWT](https://en.wikipedia.org/wiki/JSON_Web_Token) to generate tokens for authentication. This token is saved in a cookie.\n \n-## Generating users.yml <Badge type=\"tip\" text=\"v6.6.x\" />\n+## Generating users.yml\n \n-Starting with version `v6.6.x`, Dozzle has a builtin `generate` command to generate `users.yml`. Here is an example:\n+Dozzle has a builtin `generate` command to generate `users.yml`. Here is an example:\n \n ```sh\n docker run amir20/dozzle generate admin --password password --email test@email.net --name \"John Doe\" > users.yml"
        },
        {
          "filename": "go.mod",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -32,6 +32,7 @@ require (\n \tgithub.com/samber/lo v1.47.0\n \tgithub.com/wk8/go-ordered-map/v2 v2.1.8\n \tgithub.com/yuin/goldmark v1.7.4\n+\tgolang.org/x/crypto v0.27.0\n \tgolang.org/x/sync v0.8.0\n \tgoogle.golang.org/grpc v1.67.0\n \tgoogle.golang.org/protobuf v1.34.2\n@@ -71,7 +72,6 @@ require (\n \tgo.opentelemetry.io/otel/metric v1.28.0 // indirect\n \tgo.opentelemetry.io/otel/sdk v1.22.0 // indirect\n \tgo.opentelemetry.io/otel/trace v1.28.0 // indirect\n-\tgolang.org/x/crypto v0.27.0 // indirect\n \tgolang.org/x/text v0.18.0 // indirect\n \tgoogle.golang.org/genproto/googleapis/rpc v0.0.0-20240814211410-ddb44dafa142 // indirect\n \tgotest.tools/v3 v3.0.3 // indirect"
        },
        {
          "filename": "go.sum",
          "status": "modified",
          "additions": 0,
          "deletions": 2,
          "patch": "@@ -29,8 +29,6 @@ github.com/decred/dcrd/dcrec/secp256k1/v4 v4.3.0 h1:rpfIENRNNilwHwZeG5+P150SMrnN\n github.com/decred/dcrd/dcrec/secp256k1/v4 v4.3.0/go.mod h1:v57UDF4pDQJcEfFUCRop3lJL149eHGSe9Jvczhzjo/0=\n github.com/distribution/reference v0.6.0 h1:0IXCQ5g4/QMHHkarYzh5l+u8T3t73zM5QvfrDyIgxBk=\n github.com/distribution/reference v0.6.0/go.mod h1:BbU0aIcezP1/5jX/8MP0YiH4SdvB5Y4f/wlDRiLyi3E=\n-github.com/docker/docker v27.3.0+incompatible h1:BNb1QY6o4JdKpqwi9IB+HUYcRRrVN4aGFUTvDmWYK1A=\n-github.com/docker/docker v27.3.0+incompatible/go.mod h1:eEKB0N0r5NX/I1kEveEz05bcu8tLC/8azJZsviup8Sk=\n github.com/docker/docker v27.3.1+incompatible h1:KttF0XoteNTicmUtBO0L2tP+J7FGRFTjaEF4k6WdhfI=\n github.com/docker/docker v27.3.1+incompatible/go.mod h1:eEKB0N0r5NX/I1kEveEz05bcu8tLC/8azJZsviup8Sk=\n github.com/docker/go-connections v0.5.0 h1:USnMq7hx7gwdVZq1L49hLXaFtUdTADjXGp+uj1Br63c="
        },
        {
          "filename": "internal/auth/users.go",
          "status": "modified",
          "additions": 26,
          "deletions": 4,
          "patch": "@@ -13,6 +13,7 @@ import (\n \n \t\"github.com/go-chi/jwtauth/v5\"\n \t\"github.com/rs/zerolog/log\"\n+\t\"golang.org/x/crypto/bcrypt\"\n \t\"gopkg.in/yaml.v3\"\n )\n \n@@ -61,7 +62,11 @@ func GenerateUsers(user User, hashPassword bool) *bytes.Buffer {\n \tbuffer := &bytes.Buffer{}\n \n \tif hashPassword {\n-\t\tuser.Password = sha256sum(user.Password)\n+\t\thash, err := bcrypt.GenerateFromPassword([]byte(user.Password), 11)\n+\t\tif err != nil {\n+\t\t\tlog.Fatal().Err(err).Msg(\"Failed to hash password\")\n+\t\t}\n+\t\tuser.Password = string(hash)\n \t}\n \n \tusers := UserDatabase{\n@@ -93,8 +98,8 @@ func decodeUsersFromFile(path string) (UserDatabase, error) {\n \t\t\tlog.Fatal().Msgf(\"User %s has an empty password\", username)\n \t\t}\n \n-\t\tif len(user.Password) != 64 {\n-\t\t\tlog.Fatal().Str(\"password\", user.Password).Msgf(\"User %s has an invalid password hash\", username)\n+\t\tif !(len(user.Password) == 64 || len(user.Password) == 60) {\n+\t\t\tlog.Fatal().Str(\"password\", user.Password).Str(\"user\", username).Msg(\"Invalid password for user\")\n \t\t}\n \n \t\tif user.Name == \"\" {\n@@ -146,9 +151,10 @@ func (u *UserDatabase) FindByPassword(username, password string) *User {\n \t\treturn nil\n \t}\n \n-\tif user.Password != sha256sum(password) {\n+\tif !CompareHashAndPassword(user.Password, password) {\n \t\treturn nil\n \t}\n+\n \treturn user\n }\n \n@@ -157,6 +163,22 @@ func sha256sum(s string) string {\n \treturn hex.EncodeToString(bytes[:])\n }\n \n+func CompareHashAndPassword(hash, password string) bool {\n+\tif len(hash) == 64 {\n+\t\tlog.Warn().Msg(\"Using sha256sum for password comparison. Consider using a more secure hash algorithm to protected against brute-force attacks. See https://github.com/amir20/dozzle/security/advisories/GHSA-w7qr-q9fh-fj35 for more details.\")\n+\t\treturn hash == sha256sum(password)\n+\t}\n+\n+\tif len(hash) == 60 {\n+\t\terr := bcrypt.CompareHashAndPassword([]byte(hash), []byte(password))\n+\t\treturn err == nil\n+\t}\n+\n+\tlog.Error().Str(\"hash\", hash).Msg(\"Invalid hash length. Expecting 64 or 60 characters.\")\n+\n+\treturn false\n+}\n+\n func UserFromContext(ctx context.Context) *User {\n \tif user, ok := ctx.Value(remoteUser).(User); ok {\n \t\treturn &user"
        }
      ],
      "file_patterns": {
        "security_files": 2,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 3,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "97525040974d9682b4af86fcac266542faa4f027",
            "date": "2025-01-14T16:01:45Z",
            "author_login": "renovate[bot]"
          },
          {
            "sha": "f08f2455de89097951c5b6a353a65601f370a8b1",
            "date": "2025-01-14T03:08:55Z",
            "author_login": "amir20"
          },
          {
            "sha": "b2ea1c592a3e3f796e89bfb3f7511d4cbbb9ecfc",
            "date": "2025-01-14T03:08:08Z",
            "author_login": "amir20"
          },
          {
            "sha": "6f89a1e70b95cd436a1c77382e91c253c9ede5c7",
            "date": "2025-01-14T02:35:59Z",
            "author_login": "amir20"
          },
          {
            "sha": "93ce48ebf31a23c1cb63d4777905d1ead133e79d",
            "date": "2025-01-14T02:35:48Z",
            "author_login": "amir20"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 4.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N",
    "cwe_id": "CWE-328",
    "description": "Dozzle is a realtime log viewer for docker containers. Before version 8.5.3, the app uses sha-256 as the hash for passwords, which leaves users susceptible to rainbow table attacks. The app switches to bcrypt, a more appropriate hash for passwords, in version 8.5.3.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2024-09-27T14:15:04.620",
    "last_modified": "2024-10-04T18:31:29.027",
    "fix_date": "2024-09-26T23:40:47Z"
  },
  "references": [
    {
      "url": "https://github.com/amir20/dozzle/commit/de79f03aa3dbe5bb1e154a7e8d3dccbd229f3ea3",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/amir20/dozzle/security/advisories/GHSA-w7qr-q9fh-fj35",
      "source": "security-advisories@github.com",
      "tags": [
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:09:02.087935",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "dozzle",
    "owner": "amir20",
    "created_at": "2018-10-30T00:05:23Z",
    "updated_at": "2025-01-14T21:52:52Z",
    "pushed_at": "2025-01-14T16:01:46Z",
    "size": 149286,
    "stars": 7305,
    "forks": 339,
    "open_issues": 2,
    "watchers": 7305,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "Go": 226067,
      "Vue": 134460,
      "TypeScript": 63367,
      "CSS": 2943,
      "Makefile": 1871,
      "Dockerfile": 1599,
      "HTML": 1091,
      "JavaScript": 85
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T22:27:22.607015"
  }
}