{
  "cve_id": "CVE-2024-47183",
  "github_data": {
    "repository": "parse-community/parse-server",
    "fix_commit": "13ee52f0d19ef3a3524b3d79aea100e587eb3cfc",
    "related_commits": [
      "13ee52f0d19ef3a3524b3d79aea100e587eb3cfc",
      "1bfbccf9ee7ea77533b2b2aa7c4c69f3bd35e66f"
    ],
    "patch_url": "https://github.com/parse-community/parse-server/commit/13ee52f0d19ef3a3524b3d79aea100e587eb3cfc.patch",
    "fix_commit_details": {
      "sha": "13ee52f0d19ef3a3524b3d79aea100e587eb3cfc",
      "commit_date": "2024-10-03T19:17:14Z",
      "author": {
        "login": "mtrezza",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "fix: Custom object ID allows to acquire role privileges ([GHSA-8xq9-g7ch-35hg](https://github.com/parse-community/parse-server/security/advisories/GHSA-8xq9-g7ch-35hg)) (#9317)",
        "length": 176,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 57,
        "additions": 57,
        "deletions": 0
      },
      "files": [
        {
          "filename": "spec/vulnerabilities.spec.js",
          "status": "modified",
          "additions": 45,
          "deletions": 0,
          "patch": "@@ -1,6 +1,51 @@\n const request = require('../lib/request');\n \n describe('Vulnerabilities', () => {\n+  describe('(GHSA-8xq9-g7ch-35hg) Custom object ID allows to acquire role privilege', () => {\n+    beforeAll(async () => {\n+      await reconfigureServer({ allowCustomObjectId: true });\n+      Parse.allowCustomObjectId = true;\n+    });\n+\n+    afterAll(async () => {\n+      await reconfigureServer({ allowCustomObjectId: false });\n+      Parse.allowCustomObjectId = false;\n+    });\n+\n+    it('denies user creation with poisoned object ID', async () => {\n+      await expectAsync(\n+        new Parse.User({ id: 'role:a', username: 'a', password: '123' }).save()\n+      ).toBeRejectedWith(new Parse.Error(Parse.Error.OPERATION_FORBIDDEN, 'Invalid object ID.'));\n+    });\n+\n+    describe('existing sessions for users with poisoned object ID', () => {\n+      /** @type {Parse.User} */\n+      let poisonedUser;\n+      /** @type {Parse.User} */\n+      let innocentUser;\n+\n+      beforeAll(async () => {\n+        const parseServer = await global.reconfigureServer();\n+        const databaseController = parseServer.config.databaseController;\n+        [poisonedUser, innocentUser] = await Promise.all(\n+          ['role:abc', 'abc'].map(async id => {\n+            // Create the users directly on the db to bypass the user creation check\n+            await databaseController.create('_User', { objectId: id });\n+            // Use the master key to create a session for them to bypass the session check\n+            return Parse.User.loginAs(id);\n+          })\n+        );\n+      });\n+\n+      it('refuses session token of user with poisoned object ID', async () => {\n+        await expectAsync(\n+          new Parse.Query(Parse.User).find({ sessionToken: poisonedUser.getSessionToken() })\n+        ).toBeRejectedWith(new Parse.Error(Parse.Error.INTERNAL_SERVER_ERROR, 'Invalid object ID.'));\n+        await new Parse.Query(Parse.User).find({ sessionToken: innocentUser.getSessionToken() });\n+      });\n+    });\n+  });\n+\n   describe('Object prototype pollution', () => {\n     it('denies object prototype to be polluted with keyword \"constructor\"', async () => {\n       const headers = {"
        },
        {
          "filename": "src/Auth.js",
          "status": "modified",
          "additions": 5,
          "deletions": 0,
          "patch": "@@ -180,6 +180,11 @@ const getAuthForSessionToken = async function ({\n     throw new Parse.Error(Parse.Error.INVALID_SESSION_TOKEN, 'Session token is expired.');\n   }\n   const obj = session.user;\n+\n+  if (typeof obj['objectId'] === 'string' && obj['objectId'].startsWith('role:')) {\n+    throw new Parse.Error(Parse.Error.INTERNAL_SERVER_ERROR, 'Invalid object ID.');\n+  }\n+\n   delete obj.password;\n   obj['className'] = '_User';\n   obj['sessionToken'] = sessionToken;"
        },
        {
          "filename": "src/Routers/ClassesRouter.js",
          "status": "modified",
          "additions": 7,
          "deletions": 0,
          "patch": "@@ -106,6 +106,13 @@ export class ClassesRouter extends PromiseRouter {\n   }\n \n   handleCreate(req) {\n+    if (\n+      this.className(req) === '_User' &&\n+      typeof req.body?.objectId === 'string' &&\n+      req.body.objectId.startsWith('role:')\n+    ) {\n+      throw new Parse.Error(Parse.Error.OPERATION_FORBIDDEN, 'Invalid object ID.');\n+    }\n     return rest.create(\n       req.config,\n       req.auth,"
        }
      ],
      "file_patterns": {
        "security_files": 1,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 3,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "ad0a7bc0ba1823ada299a6476402420fdc4c4467",
            "date": "2025-01-14T18:51:58Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "28b3edee4e76679dedee9fe115283110fd952678",
            "date": "2025-01-13T15:19:51Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "1b61cab81c4206ce135f1239f17a53dabbc698d7",
            "date": "2025-01-13T14:47:17Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "a0efad88d2177f027ee3709beba13282a6ca9d35",
            "date": "2025-01-12T20:55:48Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "bb1daafef0f5f0b6a9c9b33c9d7e0529fd49afbf",
            "date": "2025-01-12T18:53:43Z",
            "author_login": "dependabot[bot]"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.1,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N",
    "cwe_id": "CWE-285",
    "description": "Parse Server is an open source backend that can be deployed to any infrastructure that can run Node.js. If the Parse Server option allowCustomObjectId: true is set, an attacker that is allowed to create a new user can set a custom object ID for that new user that exploits the vulnerability and acquires privileges of a specific role. This vulnerability is fixed in 6.5.9 and 7.3.0.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-10-04T15:15:13.010",
    "last_modified": "2024-11-13T21:15:50.743",
    "fix_date": "2024-10-03T19:17:14Z"
  },
  "references": [
    {
      "url": "https://github.com/parse-community/parse-server/commit/13ee52f0d19ef3a3524b3d79aea100e587eb3cfc",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/parse-community/parse-server/commit/1bfbccf9ee7ea77533b2b2aa7c4c69f3bd35e66f",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/parse-community/parse-server/pull/9317",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/parse-community/parse-server/pull/9318",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/parse-community/parse-server/security/advisories/GHSA-8xq9-g7ch-35hg",
      "source": "security-advisories@github.com",
      "tags": [
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:09:02.108349",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "parse-server",
    "owner": "parse-community",
    "created_at": "2016-01-28T18:29:14Z",
    "updated_at": "2025-01-13T16:51:06Z",
    "pushed_at": "2025-01-14T11:16:34Z",
    "size": 73208,
    "stars": 20994,
    "forks": 4781,
    "open_issues": 474,
    "watchers": 20994,
    "has_security_policy": false,
    "default_branch": "alpha",
    "protected_branches": [
      "alpha",
      "beta",
      "release",
      "release-4.x.x",
      "release-5.x.x",
      "release-6.x.x",
      "release-7.x.x"
    ],
    "languages": {
      "JavaScript": 4248231,
      "HTML": 25876,
      "Shell": 7825,
      "Handlebars": 2113,
      "Dockerfile": 1211
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T13:26:59.166995"
  }
}