{
  "cve_id": "CVE-2024-47814",
  "github_data": {
    "repository": "vim/vim",
    "fix_commit": "51b62387be93c65fa56bbabe1c3",
    "related_commits": [
      "51b62387be93c65fa56bbabe1c3"
    ],
    "patch_url": "https://github.com/vim/vim/commit/51b62387be93c65fa56bbabe1c3.patch",
    "fix_commit_details": {
      "sha": "51b62387be93c65fa56bbabe1c3",
      "commit_date": "2024-10-06T15:31:10Z",
      "author": {
        "login": "chrisbra",
        "type": "User",
        "stats": {
          "total_commits": 629,
          "average_weekly_commits": 0.5851162790697675,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 115
        }
      },
      "commit_message": {
        "title": "patch 9.1.0764: [security]: use-after-free when closing a buffer",
        "length": 438,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 40,
        "additions": 40,
        "deletions": 0
      },
      "files": [
        {
          "filename": "src/buffer.c",
          "status": "modified",
          "additions": 6,
          "deletions": 0,
          "patch": "@@ -497,6 +497,12 @@ can_unload_buffer(buf_T *buf)\n     return can_unload;\n }\n \n+    int\n+buf_locked(buf_T *buf)\n+{\n+    return buf->b_locked || buf->b_locked_split;\n+}\n+\n /*\n  * Close the link to a buffer.\n  * \"action\" is used when there is no longer a window for the buffer."
        },
        {
          "filename": "src/ex_cmds.c",
          "status": "modified",
          "additions": 12,
          "deletions": 0,
          "patch": "@@ -2743,6 +2743,18 @@ do_ecmd(\n \t}\n \tif (buf == NULL)\n \t    goto theend;\n+\t// autocommands try to edit a file that is goind to be removed,\n+\t// abort\n+\tif (buf_locked(buf))\n+\t{\n+\t    // window was split, but not editing the new buffer,\n+\t    // reset b_nwindows again\n+\t    if (oldwin == NULL\n+\t\t    && curwin->w_buffer != NULL\n+\t\t    && curwin->w_buffer->b_nwindows > 1)\n+\t\t--curwin->w_buffer->b_nwindows;\n+\t    goto theend;\n+\t}\n \tif (curwin->w_alt_fnum == buf->b_fnum && prev_alt_fnum != 0)\n \t    // reusing the buffer, keep the old alternate file\n \t    curwin->w_alt_fnum = prev_alt_fnum;"
        },
        {
          "filename": "src/proto/buffer.pro",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -70,4 +70,5 @@ char_u *buf_get_fname(buf_T *buf);\n void set_buflisted(int on);\n int buf_contents_changed(buf_T *buf);\n void wipe_buffer(buf_T *buf, int aucmd);\n+int buf_locked(buf_T *buf);\n /* vim: set ft=c : */"
        },
        {
          "filename": "src/testdir/test_autocmd.vim",
          "status": "modified",
          "additions": 19,
          "deletions": 0,
          "patch": "@@ -4883,4 +4883,23 @@ func Test_GuiEnter_Turkish_locale()\n   endtry\n endfunc\n \n+\" This was using freed memory\n+func Test_autocmd_BufWinLeave_with_vsp()\n+  new\n+  let fname = 'XXXBufWinLeaveUAF.txt'\n+  let dummy = 'XXXDummy.txt'\n+  call writefile([], fname)\n+  call writefile([], dummy)\n+  defer delete(fname)\n+  defer delete(dummy)\n+  exe \"e \" fname\n+  vsp\n+  augroup testing\n+    exe \"au BufWinLeave \" .. fname .. \" :e \" dummy .. \"| vsp \" .. fname\n+  augroup END\n+  bw\n+  call CleanUpTestAuGroup()\n+  exe \"bw! \" .. dummy\n+endfunc\n+\n \" vim: shiftwidth=2 sts=2 expandtab"
        },
        {
          "filename": "src/version.c",
          "status": "modified",
          "additions": 2,
          "deletions": 0,
          "patch": "@@ -704,6 +704,8 @@ static char *(features[]) =\n \n static int included_patches[] =\n {   /* Add new patch number below this line */\n+/**/\n+    764,\n /**/\n     763,\n /**/"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 3,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "1aefe1de0b20fe4966863e07efa14b6aa87323ee",
            "date": "2025-01-14T16:29:42Z",
            "author_login": "yegappan"
          },
          {
            "sha": "1ac53b84ada3a992f320566737e66fa00d48611f",
            "date": "2025-01-14T16:25:02Z",
            "author_login": "chrisbra"
          },
          {
            "sha": "57f0119358ed7f060d5020309b9043463121435f",
            "date": "2025-01-14T16:21:42Z",
            "author_login": "h-east"
          },
          {
            "sha": "045564d0a73218594691953c0c8bf2035e1e176e",
            "date": "2025-01-14T16:15:59Z",
            "author_login": "habamax"
          },
          {
            "sha": "6289f9159102e0855bedc566636b5e7ca6ced72c",
            "date": "2025-01-14T16:13:36Z",
            "author_login": "yegappan"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 3.9,
    "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:R/S:U/C:N/I:L/A:L",
    "cwe_id": "CWE-416",
    "description": "Vim is an open source, command line text editor. A use-after-free was found in Vim < 9.1.0764. When closing a buffer (visible in a window) a BufWinLeave auto command can cause an use-after-free if this auto command happens to re-open the same buffer in a new split window. Impact is low since the user must have intentionally set up such a strange auto command and run some buffer unload commands. However this may lead to a crash. This issue has been addressed in version 9.1.0764 and all users are advised to upgrade. There are no known workarounds for this vulnerability.",
    "attack_vector": "LOCAL",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-10-07T22:15:03.657",
    "last_modified": "2024-10-10T12:57:21.987",
    "fix_date": "2024-10-06T15:31:10Z"
  },
  "references": [
    {
      "url": "https://github.com/vim/vim/commit/51b62387be93c65fa56bbabe1c3",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/vim/vim/security/advisories/GHSA-rj48-v4mq-j4vg",
      "source": "security-advisories@github.com",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:09:02.118952",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "vim",
    "owner": "vim",
    "created_at": "2015-08-18T21:03:56Z",
    "updated_at": "2025-01-14T08:58:33Z",
    "pushed_at": "2025-01-13T07:25:13Z",
    "size": 153925,
    "stars": 37215,
    "forks": 5529,
    "open_issues": 1516,
    "watchers": 37215,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Vim Script": 20025864,
      "C": 14374546,
      "Roff": 576344,
      "Makefile": 490522,
      "C++": 246793,
      "NSIS": 180936,
      "M4": 159971,
      "Java": 85446,
      "Shell": 71333,
      "PostScript": 64070,
      "Module Management System": 56375,
      "Python": 51761,
      "XS": 51261,
      "Ruby": 40309,
      "JavaScript": 37774,
      "NewLisp": 37431,
      "Raku": 34258,
      "Emacs Lisp": 30304,
      "Perl": 29735,
      "SystemVerilog": 27883,
      "Smalltalk": 25762,
      "Awk": 19481,
      "Batchfile": 18475,
      "Objective-C": 13147,
      "DIGITAL Command Language": 10835,
      "HTML": 6885,
      "Prolog": 4336,
      "KRL": 4206,
      "MATLAB": 1970,
      "Thrift": 1670,
      "OpenEdge ABL": 1490,
      "sed": 826,
      "Tcl": 745,
      "Lua": 738,
      "BitBake": 388
    },
    "commit_activity": {
      "total_commits_last_year": 1872,
      "avg_commits_per_week": 36.0,
      "days_active_last_year": 324
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "vim"
    },
    "collected_at": "2025-01-14T12:54:52.772009"
  }
}