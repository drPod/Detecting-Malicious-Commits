{
  "cve_id": "CVE-2024-47823",
  "github_data": {
    "repository": "livewire/livewire",
    "fix_commit": "70503b79f5db75a1eac9bf55826038a6ee5a16d5",
    "related_commits": [
      "70503b79f5db75a1eac9bf55826038a6ee5a16d5",
      "cd168c6212ea13d13b82b3132485741f82d9fad9"
    ],
    "patch_url": "https://github.com/livewire/livewire/commit/70503b79f5db75a1eac9bf55826038a6ee5a16d5.patch",
    "fix_commit_details": {
      "sha": "70503b79f5db75a1eac9bf55826038a6ee5a16d5",
      "commit_date": "2024-07-03T15:50:41Z",
      "author": {
        "login": "calebporzio",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Fix image upload extension validation (#8624)",
        "length": 45,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 33,
        "additions": 32,
        "deletions": 1
      },
      "files": [
        {
          "filename": "src/Features/SupportFileUploads/TemporaryUploadedFile.php",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -168,7 +168,7 @@ public static function generateHashNameWithOriginalNameEmbedded($file)\n     {\n         $hash = str()->random(30);\n         $meta = str('-meta'.base64_encode($file->getClientOriginalName()).'-')->replace('/', '_');\n-        $extension = '.'.$file->guessExtension();\n+        $extension = '.'.$file->getClientOriginalExtension();\n \n         return $hash.$meta.$extension;\n     }"
        },
        {
          "filename": "src/Features/SupportFileUploads/UnitTest.php",
          "status": "modified",
          "additions": 31,
          "deletions": 0,
          "patch": "@@ -13,6 +13,7 @@\n use Illuminate\\Support\\Facades\\Storage;\n use Illuminate\\Http\\UploadedFile;\n use Facades\\Livewire\\Features\\SupportFileUploads\\GenerateSignedUploadUrl;\n+use Illuminate\\Http\\Testing\\FileFactory;\n use Tests\\TestComponent;\n \n class UnitTest extends \\Tests\\TestCase\n@@ -788,6 +789,20 @@ public function test_validation_of_file_uploads_while_time_traveling()\n \n         Storage::disk('avatars')->assertExists('uploaded-avatar.png');\n     }\n+\n+    public function test_extension_validation_cant_be_spoofed_by_manipulating_the_mime_type()\n+    {\n+        Storage::fake('avatars');\n+\n+        $file = (new \\Illuminate\\Http\\Testing\\FileFactory)->create('malicious.php', 0, 'image/png');\n+\n+        Livewire::test(FileExtensionValidatorComponent::class)\n+            ->set('photo', $file)\n+            ->call('save')\n+            ->assertHasErrors('photo');\n+\n+        Storage::disk('avatars')->assertMissing('malicious.php');\n+    }\n }\n \n class DummyMiddleware\n@@ -908,3 +923,19 @@ public function updatedFile()\n     }\n }\n \n+class FileExtensionValidatorComponent extends FileUploadComponent\n+{\n+    use WithFileUploads;\n+\n+    public $photo;\n+\n+    public function save()\n+    {\n+        $this->validate([\n+            'photo' => 'extensions:png',\n+        ]);\n+\n+        $this->photo->storeAs('/', 'malicious.'.$this->photo->getClientOriginalExtension(), $disk = 'avatars');\n+    }\n+}\n+"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 1,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "0baadc767c9469b6e3229c49d2dff578617a0fcc",
            "date": "2025-01-05T19:20:55Z",
            "author_login": "mike-healy"
          },
          {
            "sha": "62f0fa6b340a467c25baa590a567d9a134b357da",
            "date": "2024-12-23T15:05:02Z",
            "author_login": "calebporzio"
          },
          {
            "sha": "e50fe0c787410a2a1b719c74d0f718cee0a7f3aa",
            "date": "2024-12-23T14:50:03Z",
            "author_login": "joshhanley"
          },
          {
            "sha": "09b31608892f119194d3fecceaf1b0ff404e73ea",
            "date": "2024-12-23T14:14:07Z",
            "author_login": "joshhanley"
          },
          {
            "sha": "54791b87e856cf5da56a612c73ee512121a13d85",
            "date": "2024-12-18T23:07:24Z",
            "author_login": "angelej"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-20",
    "description": "Livewire is a full-stack framework for Laravel that allows for dynamic UI components without leaving PHP. In livewire/livewire prior to `2.12.7` and `v3.5.2`, the file extension of an uploaded file is guessed based on the MIME type. As a result, the actual file extension from the file name is not validated. An attacker can therefore bypass the validation by uploading a file with a valid MIME type (e.g., `image/png`) and a \u201c.php\u201d file extension. If the following criteria are met, the attacker can carry out an RCE attack: 1. Filename is composed of the original file name using `$file->getClientOriginalName()`. 2. Files stored directly on your server in a public storage disk. 3. Webserver is configured to execute \u201c.php\u201d files. This issue has been addressed in release versions `2.12.7` and `3.5.2`. All users are advised to upgrade. There are no known workarounds for this vulnerability.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2024-10-08T18:15:31.370",
    "last_modified": "2024-10-10T12:56:30.817",
    "fix_date": "2024-07-03T15:50:41Z"
  },
  "references": [
    {
      "url": "https://github.com/livewire/livewire/commit/70503b79f5db75a1eac9bf55826038a6ee5a16d5",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/livewire/livewire/commit/cd168c6212ea13d13b82b3132485741f82d9fad9",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/livewire/livewire/pull/8624",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/livewire/livewire/security/advisories/GHSA-f3cx-396f-7jqp",
      "source": "security-advisories@github.com",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:09:02.121887",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "livewire",
    "owner": "livewire",
    "created_at": "2019-02-12T16:53:29Z",
    "updated_at": "2025-01-14T14:54:09Z",
    "pushed_at": "2025-01-07T03:03:08Z",
    "size": 21284,
    "stars": 22563,
    "forks": 1586,
    "open_issues": 43,
    "watchers": 22563,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main"
    ],
    "languages": {
      "PHP": 1590154,
      "JavaScript": 165390,
      "Blade": 65286,
      "Shell": 680
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T17:08:12.545460"
  }
}