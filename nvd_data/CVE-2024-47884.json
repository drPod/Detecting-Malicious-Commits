{
  "cve_id": "CVE-2024-47884",
  "github_data": {
    "repository": "zefr0x/foxmarks",
    "fix_commit": "c3706bd882b3d61b353e4193f7d2dcfabd0c9a8e",
    "related_commits": [
      "c3706bd882b3d61b353e4193f7d2dcfabd0c9a8e"
    ],
    "patch_url": "https://github.com/zefr0x/foxmarks/commit/c3706bd882b3d61b353e4193f7d2dcfabd0c9a8e.patch",
    "fix_commit_details": {
      "sha": "c3706bd882b3d61b353e4193f7d2dcfabd0c9a8e",
      "commit_date": "2024-10-11T13:46:10Z",
      "author": {
        "login": "zefr0x",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "database: use a user directory to store the temp file",
        "length": 53,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 14,
        "additions": 11,
        "deletions": 3
      },
      "files": [
        {
          "filename": "src/database.rs",
          "status": "modified",
          "additions": 11,
          "deletions": 3,
          "patch": "@@ -125,11 +125,19 @@ impl DataBase<NotConnected> {\n     /// Since the database is locked when firefox is running, we need to copy it to a tmpfile to use it.\n     fn get_temp_database(&self) -> NamedTempFile {\n         #[expect(clippy::unwrap_used, reason = \"Should panic if failed\")]\n-        let temp_database_file = NamedTempFile::new().unwrap();\n+        let temp_database_file = NamedTempFile::new_in(dirs::cache_dir().unwrap()).unwrap();\n \n-        // Copy the whole database file to a temp file.\n         #[expect(clippy::unwrap_used, reason = \"Should panic if failed\")]\n-        std::fs::copy(self.database_location.as_path(), temp_database_file.path()).unwrap();\n+        let mut original_database_file =\n+            std::fs::File::open(self.database_location.as_path()).unwrap();\n+\n+        // Copy the whole database file to the temp file.\n+        #[expect(clippy::unwrap_used, reason = \"Should panic if failed\")]\n+        std::io::copy(\n+            &mut original_database_file,\n+            &mut temp_database_file.as_file(),\n+        )\n+        .unwrap();\n \n         temp_database_file\n     }"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "50919f1ee38323119f67957879539e19d39f13c5",
            "date": "2024-10-11T15:17:06Z",
            "author_login": "zefr0x"
          },
          {
            "sha": "dac225ccb70692750daa19ff4c75a20825871245",
            "date": "2024-10-11T13:54:35Z",
            "author_login": "zefr0x"
          },
          {
            "sha": "c3706bd882b3d61b353e4193f7d2dcfabd0c9a8e",
            "date": "2024-10-11T13:46:10Z",
            "author_login": "zefr0x"
          },
          {
            "sha": "d1075fb8d3859dfad0ef88f5150bc982a03bd4d7",
            "date": "2024-10-11T13:19:21Z",
            "author_login": "zefr0x"
          },
          {
            "sha": "4162a53425e841cf80f9f35b09956e183f06e2ce",
            "date": "2024-10-11T08:00:28Z",
            "author_login": "zefr0x"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-378",
    "description": "foxmarks is a CLI read-only interface for Firefox's bookmarks and history. A temporary file was created under the /tmp directory with read permissions for all users containing a copy of Firefox's database of bookmarks, history, input history, visits counter, use counter, view counter and more confidential information about the history of using Firefox. Permissions default to 0o600 for NamedTempFile. However, after copying the database, its permissions were copied with it resulting in an insecure file with 0x644 permissions. A malicious user is able to read the database when the targeted user executes foxmarks bookmarks or foxmarks history. This vulnerability is patched in v2.1.0.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2024-10-11T20:15:04.993",
    "last_modified": "2024-10-15T12:57:46.880",
    "fix_date": "2024-10-11T13:46:10Z"
  },
  "references": [
    {
      "url": "https://github.com/zefr0x/foxmarks/commit/c3706bd882b3d61b353e4193f7d2dcfabd0c9a8e",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/zefr0x/foxmarks/security/advisories/GHSA-8rh2-6pwm-5vvq",
      "source": "security-advisories@github.com",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:09:02.135920",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "foxmarks",
    "owner": "zefr0x",
    "created_at": "2022-08-19T01:44:10Z",
    "updated_at": "2025-01-13T18:35:08Z",
    "pushed_at": "2024-10-11T16:30:30Z",
    "size": 101,
    "stars": 32,
    "forks": 1,
    "open_issues": 2,
    "watchers": 32,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "Rust": 17944,
      "Just": 162
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-3.0"
    },
    "collected_at": "2025-01-14T17:02:14.608766"
  }
}