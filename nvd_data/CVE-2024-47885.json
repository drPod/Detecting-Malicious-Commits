{
  "cve_id": "CVE-2024-47885",
  "github_data": {
    "repository": "withastro/astro",
    "fix_commit": "a4ffbfaa5cb460c12bd486fd75e36147f51d3e5e",
    "related_commits": [
      "a4ffbfaa5cb460c12bd486fd75e36147f51d3e5e"
    ],
    "patch_url": "https://github.com/withastro/astro/commit/a4ffbfaa5cb460c12bd486fd75e36147f51d3e5e.patch",
    "fix_commit_details": {
      "sha": "a4ffbfaa5cb460c12bd486fd75e36147f51d3e5e",
      "commit_date": "2024-10-11T13:37:06Z",
      "author": {
        "login": "matthewp",
        "type": "User",
        "stats": {
          "total_commits": 1535,
          "average_weekly_commits": 7.63681592039801,
          "total_additions": 549030,
          "total_deletions": 156645,
          "weeks_active": 176
        }
      },
      "commit_message": {
        "title": "Ensure router only targets scripts for execution (#12177)",
        "length": 299,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 21,
        "additions": 17,
        "deletions": 4
      },
      "files": [
        {
          "filename": ".changeset/nervous-peaches-sort.md",
          "status": "added",
          "additions": 7,
          "deletions": 0,
          "patch": "@@ -0,0 +1,7 @@\n+---\n+'astro': patch\n+---\n+\n+Ensure we target scripts for execution in the router\n+\n+Using `document.scripts` is unsafe because if the application has a `name=\"scripts\"` this will shadow the built-in `document.scripts`. Fix is to use `getElementsByTagName` to ensure we're only grabbing real scripts."
        },
        {
          "filename": "packages/astro/e2e/fixtures/view-transitions/src/assets/astro-build.mp4",
          "status": "added",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "packages/astro/e2e/fixtures/view-transitions/src/components/Video.astro",
          "status": "modified",
          "additions": 5,
          "deletions": 2,
          "patch": "@@ -1,3 +1,6 @@\n-<video controls=\"\" autoplay=\"\" name=\"media\" transition:persist transition:name=\"video\" autoplay>\n-\t<source src=\"https://ia804502.us.archive.org/33/items/GoldenGa1939_3/GoldenGa1939_3_512kb.mp4\" type=\"video/mp4\">\n+---\n+import vidUrl from '../assets/astro-build.mp4';\n+---\n+<video controls=\"\" autoplay=\"\" transition:persist transition:name=\"video\" autoplay>\n+\t<source src={vidUrl} type=\"video/mp4\">\n </video>"
        },
        {
          "filename": "packages/astro/e2e/fixtures/view-transitions/src/pages/one.astro",
          "status": "modified",
          "additions": 3,
          "deletions": 0,
          "patch": "@@ -20,4 +20,7 @@ import Layout from '../components/Layout.astro';\n \t</custom-a>\n \n \t<div id=\"test\">test content</div>\n+\n+\t<!-- This ensures we're correctly grabbing just scripts for execution -->\n+\t<div name=\"scripts\"></div>\n </Layout>"
        },
        {
          "filename": "packages/astro/src/transitions/router.ts",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -134,7 +134,7 @@ export function getFallback(): Fallback {\n \n function runScripts() {\n \tlet wait = Promise.resolve();\n-\tfor (const script of Array.from(document.scripts)) {\n+\tfor (const script of document.getElementsByTagName('script')) {\n \t\tif (script.dataset.astroExec === '') continue;\n \t\tconst type = script.getAttribute('type');\n \t\tif (type && type !== 'module' && type !== 'text/javascript') continue;\n@@ -643,7 +643,7 @@ if (inBrowser) {\n \t\t\t);\n \t\t}\n \t}\n-\tfor (const script of document.scripts) {\n+\tfor (const script of document.getElementsByTagName('script')) {\n \t\tscript.dataset.astroExec = '';\n \t}\n }"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 5,
        "max_directory_depth": 7
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "1a026afb427cd4b472c8f1174a08f10086f4fb89",
            "date": "2025-01-14T16:58:07Z",
            "author_login": "florian-lefebvre"
          },
          {
            "sha": "1072c76703b725919cf52f63cf254a3fba90c030",
            "date": "2025-01-14T11:53:40Z",
            "author_login": "ematipico"
          },
          {
            "sha": "ea603aec80531205d38fed11c525b3faa0271903",
            "date": "2025-01-14T11:52:51Z",
            "author_login": "louisescher"
          },
          {
            "sha": "c30070b9271e4c494e7cbf3a1c45515782034911",
            "date": "2025-01-13T16:05:44Z",
            "author_login": "braden-w"
          },
          {
            "sha": "0ef1613ea36439a76965290053ccc3f8afb9f400",
            "date": "2025-01-13T15:59:56Z",
            "author_login": "bluwy"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.9,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:U/C:L/I:L/A:H",
    "cwe_id": "CWE-79",
    "description": "The Astro web framework has a DOM Clobbering gadget in the client-side router starting in version 3.0.0 and prior to version 4.16.1. It can lead to cross-site scripting (XSS) in websites enables Astro's client-side routing and has *stored* attacker-controlled scriptless HTML elements (i.e., `iframe` tags with unsanitized `name` attributes) on the destination pages. This vulnerability can result in cross-site scripting (XSS) attacks on websites that built with Astro that enable the client-side routing with `ViewTransitions` and store the user-inserted scriptless HTML tags without properly sanitizing the `name` attributes on the page. Version 4.16.1 contains a patch for this issue.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2024-10-14T19:15:10.903",
    "last_modified": "2024-10-15T12:57:46.880",
    "fix_date": "2024-10-11T13:37:06Z"
  },
  "references": [
    {
      "url": "https://github.com/withastro/astro/blob/7814a6cad15f06931f963580176d9b38aa7819f2/packages/astro/src/transitions/router.ts#L135-L156",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/withastro/astro/commit/a4ffbfaa5cb460c12bd486fd75e36147f51d3e5e",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/withastro/astro/security/advisories/GHSA-m85w-3h95-hcf9",
      "source": "security-advisories@github.com",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:09:02.145108",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "astro",
    "owner": "withastro",
    "created_at": "2021-03-15T17:19:47Z",
    "updated_at": "2025-01-14T14:39:31Z",
    "pushed_at": "2025-01-14T15:11:37Z",
    "size": 188605,
    "stars": 48375,
    "forks": 2571,
    "open_issues": 169,
    "watchers": 48375,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "TypeScript": 2171722,
      "JavaScript": 1641594,
      "Astro": 137642,
      "CSS": 8457,
      "Vue": 7948,
      "Svelte": 5814,
      "MDX": 5673,
      "Shell": 943,
      "Dockerfile": 682,
      "Roff": 630,
      "SCSS": 13
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T15:57:03.343467"
  }
}