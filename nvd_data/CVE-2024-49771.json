{
  "cve_id": "CVE-2024-49771",
  "github_data": {
    "repository": "joniles/mpxj",
    "fix_commit": "8002802890dfdc8bc74259f37e053e15b827eea0",
    "related_commits": [
      "8002802890dfdc8bc74259f37e053e15b827eea0"
    ],
    "patch_url": "https://github.com/joniles/mpxj/commit/8002802890dfdc8bc74259f37e053e15b827eea0.patch",
    "fix_commit_details": {
      "sha": "8002802890dfdc8bc74259f37e053e15b827eea0",
      "commit_date": "2024-10-17T09:21:19Z",
      "author": {
        "login": "LQxdu",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Improve the checks for relative traversal.",
        "length": 104,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 4,
        "additions": 1,
        "deletions": 3
      },
      "files": [
        {
          "filename": "src/main/java/net/sf/mpxj/common/InputStreamHelper.java",
          "status": "modified",
          "additions": 1,
          "deletions": 3,
          "patch": "@@ -174,7 +174,6 @@ public static byte[] read(InputStream is, byte[] data, int size) throws IOExcept\n     */\n    private static void processZipStream(File dir, InputStream inputStream) throws IOException\n    {\n-      String canonicalDestinationDirPath = dir.getCanonicalPath();\n       ZipInputStream zip = new ZipInputStream(inputStream);\n       while (true)\n       {\n@@ -187,8 +186,7 @@ private static void processZipStream(File dir, InputStream inputStream) throws I\n          File file = new File(dir, entry.getName());\n \n          // https://snyk.io/research/zip-slip-vulnerability\n-         String canonicalDestinationFile = file.getCanonicalPath();\n-         if (!canonicalDestinationFile.startsWith(canonicalDestinationDirPath + File.separator))\n+         if (!file.getCanonicalFile().toPath().startsWith(dir.getCanonicalFile().toPath()))\n          {\n             throw new IOException(\"Entry is outside of the target dir: \" + entry.getName());\n          }"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 7
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "ffa0c002297c07e2ea92731d93f6bdcc37fc3afb",
            "date": "2025-01-09T19:37:48Z",
            "author_login": "joniles"
          },
          {
            "sha": "2e130ff381e56ddf83dd36805ae616e42f853714",
            "date": "2025-01-09T15:18:49Z",
            "author_login": "joniles"
          },
          {
            "sha": "6947f548c2a0cc893a8dda9bd3eb304ce0eb5424",
            "date": "2025-01-09T15:05:13Z",
            "author_login": "joniles"
          },
          {
            "sha": "12f62054d104fcdaf31ab5e388fcedbe95433466",
            "date": "2025-01-09T14:40:11Z",
            "author_login": "joniles"
          },
          {
            "sha": "77568f8289eb06641c5c18524486d6163e175911",
            "date": "2025-01-09T10:50:03Z",
            "author_login": "joniles"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
    "cwe_id": "CWE-22",
    "description": "MPXJ is an open source library to read and write project plans from a variety of file formats and databases. The patch for the historical vulnerability CVE-2020-35460 in MPXJ is incomplete as there is still a possibility that a malicious path could be constructed which would not be picked up by the original fix and allow files to be written to arbitrary locations. The issue is addressed in MPXJ version 13.5.1.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-10-28T17:15:04.540",
    "last_modified": "2024-10-29T14:34:50.257",
    "fix_date": "2024-10-17T09:21:19Z"
  },
  "references": [
    {
      "url": "https://github.com/joniles/mpxj/commit/8002802890dfdc8bc74259f37e053e15b827eea0",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/joniles/mpxj/security/advisories/GHSA-j945-c44v-97g6",
      "source": "security-advisories@github.com",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:09:27.100454",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "mpxj",
    "owner": "joniles",
    "created_at": "2015-06-07T10:45:11Z",
    "updated_at": "2025-01-11T16:27:03Z",
    "pushed_at": "2025-01-14T14:15:14Z",
    "size": 459316,
    "stars": 253,
    "forks": 105,
    "open_issues": 18,
    "watchers": 253,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Java": 14704319,
      "Ruby": 524731,
      "C#": 55518,
      "VBA": 35875,
      "Visual Basic .NET": 14934,
      "Batchfile": 3947,
      "CSS": 2622,
      "Python": 1196,
      "Shell": 353
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "lgpl-2.1"
    },
    "collected_at": "2025-01-14T14:23:00.371697"
  }
}