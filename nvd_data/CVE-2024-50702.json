{
  "cve_id": "CVE-2024-50702",
  "github_data": {
    "repository": "nilsteampassnet/TeamPass",
    "fix_commit": "35e2b479f2379545b4132bc30a9d052ba7018bf9",
    "related_commits": [
      "35e2b479f2379545b4132bc30a9d052ba7018bf9"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "35e2b479f2379545b4132bc30a9d052ba7018bf9",
      "commit_date": "2024-10-08T07:59:40Z",
      "author": {
        "login": "corentin-soriano",
        "type": "User",
        "stats": {
          "total_commits": 193,
          "average_weekly_commits": 0.2821637426900585,
          "total_additions": 5354,
          "total_deletions": 57449,
          "weeks_active": 21
        }
      },
      "commit_message": {
        "title": "Fix mailHandler permissions.",
        "length": 28,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 109,
        "additions": 84,
        "deletions": 25
      },
      "files": [
        {
          "filename": "sources/main.queries.php",
          "status": "modified",
          "additions": 84,
          "deletions": 25,
          "patch": "@@ -425,26 +425,69 @@ function userHandler(string $post_type, array|null|string $dataReceived, array $\n  */\n function mailHandler(string $post_type, /*php8 array|null|string */$dataReceived, array $SETTINGS): string\n {\n+    $session = SessionManager::getSession();\n+\n     switch ($post_type) {\n         /*\n-        * CASE\n-        * Send email\n-        */\n+         * CASE\n+         * Send email\n+         */\n         case 'mail_me'://action_mail\n-            return sendMailToUser(\n-                filter_var($dataReceived['receipt'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n-                $dataReceived['body'],\n-                (string) filter_var($dataReceived['subject'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n-                (array) filter_var_array(\n-                    $dataReceived['pre_replace'],\n-                    FILTER_SANITIZE_FULL_SPECIAL_CHARS\n+            // Get info about user to send email\n+            $data_user = DB::queryfirstrow(\n+                'SELECT admin, gestionnaire, can_manage_all_users, isAdministratedByRole FROM ' . prefixTable('users') . '\n+                WHERE email = %s',\n+                $post_id\n+            );\n+\n+            // Only administrators and managers can send mails\n+            if (\n+                // Administrator user\n+                (int) $session->get('user-admin') === 1\n+                // Manager of basic/ro users in this role but don't allow promote user to admin or managers roles\n+                || ((int) $session->get('user-manager') === 1\n+                    && in_array($data_user['isAdministratedByRole'], $session->get('user-roles_array'))\n+                    && (int) $post_is_admin !== 1 && (int) $data_user['admin'] !== 1\n+                    && (int) $post_is_hr !== 1 && (int) $data_user['can_manage_all_users'] !== 1\n+                    && (int) $post_is_manager !== 1 && (int) $data_user['gestionnaire'] !== 1)\n+                // Manager of all basic/ro users but don't allow promote user to admin or managers roles\n+                || ((int) $session->get('user-can_manage_all_users') === 1\n+                    && (int) $post_is_admin !== 1 && (int) $data_user['admin'] !== 1\n+                    && (int) $post_is_hr !== 1 && (int) $data_user['can_manage_all_users'] !== 1\n+                    && (int) $post_is_manager !== 1 && (int) $data_user['gestionnaire'] !== 1)\n+            ) {\n+                return sendMailToUser(\n+                    filter_var($dataReceived['receipt'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n+                    $dataReceived['body'],\n+                    (string) filter_var($dataReceived['subject'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n+                    (array) filter_var_array(\n+                        $dataReceived['pre_replace'],\n+                        FILTER_SANITIZE_FULL_SPECIAL_CHARS\n+                    ),\n+                    true\n+                );\n+            }\n+\n+            return prepareExchangedData(\n+                array(\n+                    'error' => true,\n                 ),\n-                true\n+                'encode'\n             );\n         /*\n         * Send emails not sent\n         */\n         case 'send_waiting_emails'://mail\n+            // Administrative task\n+            if ((int) $session->get('user-admin') !== 1) {\n+                return prepareExchangedData(\n+                    array(\n+                        'error' => true,\n+                    ),\n+                    'encode'\n+                );\n+            }\n+\n             sendEmailsNotSent(\n                 $SETTINGS\n             );\n@@ -658,8 +701,8 @@ function systemHandler(string $post_type, array|null|string $dataReceived, array\n             );\n \n         /*\n-        * Sending statistics\n-        */\n+         * Sending statistics\n+         */\n         case 'sending_statistics'://action_system\n             sendingStatistics(\n                 $SETTINGS\n@@ -675,6 +718,17 @@ function systemHandler(string $post_type, array|null|string $dataReceived, array\n             * Generate BUG report\n             */\n         case 'generate_bug_report'://action_system\n+\n+            // Only administrators can see this confidential informations.\n+            if ((int) $session->get('user-admin') !== 1) {\n+                return prepareExchangedData(\n+                    array(\n+                        'error' => false,\n+                    ),\n+                    'encode'\n+                );\n+            }\n+\n             return generateBugReport(\n                 (array) $dataReceived,\n                 $SETTINGS\n@@ -684,6 +738,17 @@ function systemHandler(string $post_type, array|null|string $dataReceived, array\n         * get_teampass_settings\n         */\n         case 'get_teampass_settings'://action_system\n+\n+            // Only administrators can see this confidential informations.\n+            if ((int) $session->get('user-admin') !== 1) {\n+                return prepareExchangedData(\n+                    array(\n+                        'error' => false,\n+                    ),\n+                    'encode'\n+                );\n+            }\n+\n             // Encrypt data to return\n             return prepareExchangedData(\n                 array_intersect_key(\n@@ -709,8 +774,8 @@ function systemHandler(string $post_type, array|null|string $dataReceived, array\n             );\n \n         /*\n-            * Generates a TOKEN with CRYPT\n-            */\n+         * Generates a TOKEN with CRYPT\n+         */\n         case 'save_token'://action_system\n             $token = GenerateCryptKey(\n                 null !== filter_input(INPUT_POST, 'size', FILTER_SANITIZE_NUMBER_INT) ? (int) filter_input(INPUT_POST, 'size', FILTER_SANITIZE_NUMBER_INT) : 20,\n@@ -753,8 +818,8 @@ function utilsHandler(string $post_type, array|null|string $dataReceived, array\n {\n     switch ($post_type) {\n         /*\n-        * generate_an_otp\n-        */\n+         * generate_an_otp\n+         */\n         case 'generate_an_otp'://action_utils\n             return generateAnOTP(\n                 (string) filter_var($dataReceived['label'], FILTER_SANITIZE_FULL_SPECIAL_CHARS),\n@@ -764,8 +829,8 @@ function utilsHandler(string $post_type, array|null|string $dataReceived, array\n \n \n         /*\n-        * Default case\n-        */\n+         * Default case\n+         */\n         default :\n             return prepareExchangedData(\n                 array(\n@@ -1441,12 +1506,6 @@ function generateBugReport(\n     // Load user's language\n     $session = SessionManager::getSession();\n     $lang = new Language($session->get('user-language') ?? 'english');\n-    \n-    // Only administrators can see this confidential informations.\n-    if ($session->get('user-admin') !== 1) {\n-        http_response_code(403);\n-        return \"\";\n-    }\n \n     // Read config file\n     $list_of_options = '';"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "aacdf6a3f2daf9b52a826d4b3d8a39873e2e2062",
            "date": "2025-01-13T17:24:23Z",
            "author_login": "nilsteampassnet"
          },
          {
            "sha": "eb95bc3e37f6e1f19fce98aa4c44c251f2084cd7",
            "date": "2025-01-13T17:20:31Z",
            "author_login": "nilsteampassnet"
          },
          {
            "sha": "9969d0ef636e28c1afcdb047aac2d2a5387b62b5",
            "date": "2025-01-12T17:29:37Z",
            "author_login": "nilsteampassnet"
          },
          {
            "sha": "4963736272bc4b281586f8ad4dcee70015d595b1",
            "date": "2025-01-12T17:22:24Z",
            "author_login": "nilsteampassnet"
          },
          {
            "sha": "b5a997952a43e4760c9eaceedfd9a7ba4a5683d2",
            "date": "2025-01-10T16:06:22Z",
            "author_login": "nilsteampassnet"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.4,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:N",
    "cwe_id": "CWE-266",
    "description": "TeamPass before 3.1.3.1 does not properly check whether a mail_me (aka action_mail) operation is on behalf of an administrator or manager.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-12-30T15:15:10.567",
    "last_modified": "2024-12-30T16:15:11.550",
    "fix_date": "2024-10-08T07:59:40Z"
  },
  "references": [
    {
      "url": "https://github.com/nilsteampassnet/TeamPass/commit/35e2b479f2379545b4132bc30a9d052ba7018bf9",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://github.com/nilsteampassnet/TeamPass/compare/3.1.2...3.1.3.1",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://github.com/nilsteampassnet/TeamPass/compare/3.1.3...3.1.3.1",
      "source": "cve@mitre.org",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:09:52.932837",
    "processing_status": "enhanced"
  }
}