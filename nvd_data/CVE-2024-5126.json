{
  "cve_id": "CVE-2024-5126",
  "github_data": {
    "repository": "lunary-ai/lunary",
    "fix_commit": "b7bd3a830a0f47ba07d0fd57bf78c4dd8a216297",
    "related_commits": [
      "b7bd3a830a0f47ba07d0fd57bf78c4dd8a216297",
      "b7bd3a830a0f47ba07d0fd57bf78c4dd8a216297"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "b7bd3a830a0f47ba07d0fd57bf78c4dd8a216297",
      "commit_date": "2024-05-19T17:35:54Z",
      "author": {
        "login": "hughcrt",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "fix: backend plan check (#329)",
        "length": 30,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 66,
        "additions": 50,
        "deletions": 16
      },
      "files": [
        {
          "filename": "packages/backend/src/api/v1/template-versions.ts",
          "status": "modified",
          "additions": 38,
          "deletions": 16,
          "patch": "@@ -4,6 +4,7 @@ import { Context } from \"koa\"\n import postgres from \"postgres\"\n import { unCamelObject } from \"@/src/utils/misc\"\n import { checkAccess } from \"@/src/utils/authorization\"\n+import { z } from \"zod\"\n \n const versions = new Router({\n   prefix: \"/template_versions\",\n@@ -68,25 +69,46 @@ versions.patch(\n   \"/:id\",\n   checkAccess(\"prompts\", \"update\"),\n   async (ctx: Context) => {\n-    const { content, extra, testValues, isDraft } = ctx.request.body as {\n-      id: string\n-      content: any[]\n-      extra: any\n-      testValues: any\n-      isDraft: boolean\n-    }\n+    const bodySchema = z.object({\n+      content: z.array(z.any()),\n+      extra: z.any(),\n+      testValues: z.any(),\n+      isDraft: z.boolean(),\n+    })\n+\n+    const { content, extra, testValues, isDraft } = bodySchema.parse(\n+      ctx.request.body,\n+    )\n \n     const [templateVersion] = await sql`\n-    update template_version set\n-      content = ${sql.json(content)},\n-      extra = ${sql.json(unCamelObject(extra))},\n-      test_values = ${sql.json(testValues)},\n-      is_draft = ${isDraft}\n-    where id = ${ctx.params.id}\n-    returning *\n-  `\n+      select\n+        *\n+      from\n+        template_version tv\n+        left join template t on tv.template_id = t.id\n+        left join project p on t.project_id = p.id \n+      where\n+        tv.id = ${ctx.params.id}\n+        and p.org_id = ${ctx.state.orgId}\n+    `\n+\n+    if (!templateVersion) {\n+      ctx.throw(401, \"You don't have access to this template\")\n+    }\n \n-    ctx.body = templateVersion\n+    const [updatedTemplateVersion] = await sql`\n+      update template_version \n+      set\n+        content = ${sql.json(content)},\n+        extra = ${sql.json(unCamelObject(extra))},\n+        test_values = ${sql.json(testValues)},\n+        is_draft = ${isDraft}\n+      where \n+        id = ${ctx.params.id}\n+      returning *\n+    `\n+\n+    ctx.body = updatedTemplateVersion\n   },\n )\n "
        },
        {
          "filename": "packages/backend/src/api/v1/users.ts",
          "status": "modified",
          "additions": 12,
          "deletions": 0,
          "patch": "@@ -183,9 +183,21 @@ users.post(\"/\", checkAccess(\"teamMembers\", \"create\"), async (ctx: Context) => {\n     select name, plan from org where id = ${orgId}\n   `\n \n+  if (\n+    role !== \"member\" &&\n+    role !== \"admin\" &&\n+    (org.plan === \"free\" || org.plan === \"pro\")\n+  ) {\n+    ctx.throw(\n+      401,\n+      \"Your plan doesn't allow you to access granular access control.\",\n+    )\n+  }\n+\n   const [orgUserCountResult] = await sql`\n     select count(*) from account where org_id = ${orgId}\n   `\n+\n   const orgUserCount = orgUserCountResult.count\n \n   const token = await signJWT({ email, orgId }, FIFTEEN_DAYS)"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 5
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "99985bb470da9b5cbf56dfe62a0e301f6154fb7a",
            "date": "2025-01-23T21:22:40Z",
            "author_login": "hughcrt"
          },
          {
            "sha": "85f99ba794be50ce8e88487c275711f38c99bc86",
            "date": "2025-01-23T13:00:12Z",
            "author_login": "hughcrt"
          },
          {
            "sha": "f335865aadb46ac3d0a8985d4ed3a58e01f233ab",
            "date": "2025-01-21T17:40:16Z",
            "author_login": "hughcrt"
          },
          {
            "sha": "eb27f0b6f2686655434df484a9f567682488f934",
            "date": "2025-01-21T17:12:39Z",
            "author_login": "hughcrt"
          },
          {
            "sha": "4866a25298d8e588e1e48c6cb85c7564a125ce2b",
            "date": "2025-01-20T19:14:11Z",
            "author_login": "hughcrt"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N",
    "cwe_id": "CWE-284",
    "description": "An improper access control vulnerability exists in the lunary-ai/lunary repository, specifically within the versions.patch functionality for updating prompts. Affected versions include 1.2.2 up to but not including 1.2.25. The vulnerability allows unauthorized users to update prompt details due to insufficient access control checks. This issue was addressed and fixed in version 1.2.25.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-06-06T19:16:04.090",
    "last_modified": "2024-11-21T09:47:01.690",
    "fix_date": "2024-05-19T17:35:54Z"
  },
  "references": [
    {
      "url": "https://github.com/lunary-ai/lunary/commit/b7bd3a830a0f47ba07d0fd57bf78c4dd8a216297",
      "source": "security@huntr.dev",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://huntr.com/bounties/8e7e1267-ea6c-4789-b9dc-3410dfac6ec6",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/lunary-ai/lunary/commit/b7bd3a830a0f47ba07d0fd57bf78c4dd8a216297",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://huntr.com/bounties/8e7e1267-ea6c-4789-b9dc-3410dfac6ec6",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:26.350560",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "lunary",
    "owner": "lunary-ai",
    "created_at": "2023-05-12T10:03:05Z",
    "updated_at": "2025-01-25T12:59:23Z",
    "pushed_at": "2025-01-23T21:23:23Z",
    "size": 5454,
    "stars": 1145,
    "forks": 140,
    "open_issues": 0,
    "watchers": 1145,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "llm-1533-allow-filtering-by-feedback-in-thread-and-trace-page",
      "llm-1666-improve-exports-for-traces-enable-export-for-threads",
      "llm-1708-when-clicking-on-a-trace-row-theres-a-quick-render-bug-that",
      "llm-1711-save-row-sorting-in-views",
      "llm-1906-allow-a-team-owner-to-make-another-user-owner-instead-of",
      "llm-1910-prompts-settings-bug",
      "llm-1911-invite-button-doesnt-show-a-success-notification",
      "llm-1922-button-next-to-metadata-that-redirects-to-search",
      "llm-1939-integer-out-of-range-error-on-lunary-app",
      "llm-1942-implement-streaming-from-database-for-csvjsonl-exports",
      "llm-1966-long-project-names-are-croped-in-project-drowndopre",
      "llm-2101-sign-in-with-github",
      "main",
      "playwright_test_feedback_comment_dataset_user"
    ],
    "languages": {
      "TypeScript": 1198476,
      "Python": 113257,
      "CSS": 8283,
      "JavaScript": 3378,
      "Shell": 522
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-26T07:56:25.929748"
  }
}