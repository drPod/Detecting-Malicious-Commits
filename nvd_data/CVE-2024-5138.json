{
  "cve_id": "CVE-2024-5138",
  "github_data": {
    "repository": "snapcore/snapd",
    "fix_commit": "68ee9c6aa916ab87dbfd9a26030690f2cabf1e14",
    "related_commits": [
      "68ee9c6aa916ab87dbfd9a26030690f2cabf1e14",
      "68ee9c6aa916ab87dbfd9a26030690f2cabf1e14"
    ],
    "patch_url": "https://github.com/snapcore/snapd/commit/68ee9c6aa916ab87dbfd9a26030690f2cabf1e14.patch",
    "fix_commit_details": {
      "sha": "68ee9c6aa916ab87dbfd9a26030690f2cabf1e14",
      "commit_date": "2024-05-24T11:48:46Z",
      "author": {
        "login": "zyga",
        "type": "User",
        "stats": {
          "total_commits": 8231,
          "average_weekly_commits": 15.589015151515152,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 294
        }
      },
      "commit_message": {
        "title": "Merge pull request from GHSA-p9v8-q5m4-pf46",
        "length": 543,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 91,
        "additions": 82,
        "deletions": 9
      },
      "files": [
        {
          "filename": "overlord/hookstate/ctlcmd/ctlcmd.go",
          "status": "modified",
          "additions": 31,
          "deletions": 9,
          "patch": "@@ -180,14 +180,36 @@ func Run(context *hookstate.Context, args []string, uid uint32) (stdout, stderr\n \treturn stdoutBuffer.Bytes(), stderrBuffer.Bytes(), err\n }\n \n+// isAllowedToRun returns true if the user with the given UID can run the given snapctl command vector.\n+//\n+// Commands still need valid context and snaps can only access own config.\n func isAllowedToRun(uid uint32, args []string) bool {\n-\t// A command can run if any of the following are true:\n-\t//\t* It runs as root\n-\t//\t* It's contained in nonRootAllowed\n-\t//\t* It's used with the -h or --help flags\n-\t// note: commands still need valid context and snaps can only access own config.\n-\treturn uid == 0 ||\n-\t\tstrutil.ListContains(nonRootAllowed, args[0]) ||\n-\t\tstrutil.ListContains(args, \"-h\") ||\n-\t\tstrutil.ListContains(args, \"--help\")\n+\t// Root can run all snapctl commands.\n+\tif uid == 0 {\n+\t\treturn true\n+\t}\n+\n+\tfor idx, arg := range args {\n+\t\t// A number of sub-commands are allowed to be executed by non-root users.\n+\t\tif idx == 0 && strutil.ListContains(nonRootAllowed, arg) {\n+\t\t\treturn true\n+\t\t}\n+\n+\t\t// Invoking help is always allowed.\n+\t\tif arg == \"-h\" || arg == \"--help\" {\n+\t\t\treturn true\n+\t\t}\n+\n+\t\t// Note that we are not interrupting parsing after the first non-option\n+\t\t// argument (POSIX style), because we want to cater to the use case of\n+\t\t// the user appending --help or -h at the end of the command and still\n+\t\t// getting something useful. The only exception is the condition below.\n+\n+\t\t// The explicit termination argument terminates parsing.\n+\t\tif arg == \"--\" {\n+\t\t\tbreak\n+\t\t}\n+\t}\n+\n+\treturn false\n }"
        },
        {
          "filename": "overlord/hookstate/ctlcmd/ctlcmd_test.go",
          "status": "modified",
          "additions": 7,
          "deletions": 0,
          "patch": "@@ -121,6 +121,13 @@ func (s *ctlcmdSuite) TestRootRequiredCommandFailure(c *C) {\n \tc.Check(err.Error(), Equals, `cannot use \"start\" with uid 1000, try with sudo`)\n }\n \n+func (s *ctlcmdSuite) TestRootRequiredCommandFailureParsingTweak(c *C) {\n+\t_, _, err := ctlcmd.Run(s.mockContext, []string{\"start\", \"--\", \"--help\"}, 1000)\n+\n+\tc.Check(err, FitsTypeOf, &ctlcmd.ForbiddenCommandError{})\n+\tc.Check(err.Error(), Equals, `cannot use \"start\" with uid 1000, try with sudo`)\n+}\n+\n func (s *ctlcmdSuite) TestRunNoArgsFailure(c *C) {\n \t_, _, err := ctlcmd.Run(s.mockContext, []string{}, 0)\n \tc.Check(err, NotNil)"
        },
        {
          "filename": "tests/regression/lp-2065077/task.yaml",
          "status": "added",
          "additions": 26,
          "deletions": 0,
          "patch": "@@ -0,0 +1,26 @@\n+summary: Ensure that snapctl argument parser handles --\n+\n+details: |\n+    Snapctl argument parser used to have a flaw related to parsing -- which\n+    might have lead to incorrect interpretation of the following arguments.\n+\n+systems:\n+    - -ubuntu-14.04-* # systemd is too old for generated mount units\n+\n+prepare: |\n+    \"$TESTSTOOLS\"/snaps-state install-local test-snapd-sh\n+    tests.cleanup defer snap remove --purge test-snapd-sh\n+\n+    snap connect test-snapd-sh:mount-control\n+\n+    mkdir -p /var/snap/test-snapd-sh/common/base-files\n+    echo 'snapctl mount -o ro,bind,noatime,noexec /usr/share/base-files /var/snap/test-snapd-sh/common/base-files' | snap run --shell test-snapd-sh.sh\n+    mountpoint /var/snap/test-snapd-sh/common/base-files\n+    tests.cleanup defer umount /var/snap/test-snapd-sh/common/base-files\n+\n+    tests.session prepare -u test\n+    tests.cleanup defer tests.session restore -u test\n+\n+execute: |\n+    tests.session -u test exec snap run --shell test-snapd-sh.sh -c 'snapctl umount /var/snap/test-snapd-sh/common/base-files -- --help' 2>&1 | MATCH 'error: cannot use \"umount\" with uid 12345, try with sudo'\n+    mountpoint /var/snap/test-snapd-sh/common/base-files"
        },
        {
          "filename": "tests/regression/lp-2065077/test-snapd-sh/bin/sh",
          "status": "added",
          "additions": 3,
          "deletions": 0,
          "patch": "@@ -0,0 +1,3 @@\n+#!/bin/sh\n+PS1='$ '\n+exec /bin/sh \"$@\""
        },
        {
          "filename": "tests/regression/lp-2065077/test-snapd-sh/meta/snap.yaml",
          "status": "added",
          "additions": 15,
          "deletions": 0,
          "patch": "@@ -0,0 +1,15 @@\n+name: test-snapd-sh\n+version: 1.0\n+apps:\n+    sh:\n+        command: bin/sh\n+plugs:\n+  mount-control:\n+    mount:\n+    - what: /usr/share/base-files\n+      where: $SNAP_COMMON/base-files\n+      options:\n+      - ro\n+      - bind\n+      - noatime\n+      - noexec"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 4,
        "unique_directories": 4,
        "max_directory_depth": 5
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "0a0cebb56ba688002917b423dca84f9e90a4e31d",
            "date": "2025-01-14T16:44:29Z",
            "author_login": "maykathm"
          },
          {
            "sha": "29cf0e069786b38071499bee50bdee67bd1874a3",
            "date": "2025-01-14T15:03:35Z",
            "author_login": "andrewphelpsj"
          },
          {
            "sha": "41b3b2be04842e08322713e36638684a0c74bb0b",
            "date": "2025-01-14T12:43:22Z",
            "author_login": "bboozzoo"
          },
          {
            "sha": "e2ff00fea3578c22103487f8e851a913e0c135c5",
            "date": "2025-01-14T08:04:48Z",
            "author_login": "maykathm"
          },
          {
            "sha": "3b68396cb05f389d9094addaefdef18363beae8f",
            "date": "2025-01-13T21:55:56Z",
            "author_login": "alfonsosanchezbeato"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.1,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:H",
    "cwe_id": "CWE-20",
    "description": "The snapctl component within snapd allows a confined snap to interact with the snapd daemon to take certain privileged actions on behalf of the snap. It was found that snapctl did not properly parse command-line arguments, allowing an unprivileged user to trigger an authorised action on behalf of the snap that would normally require administrator privileges to perform. This could possibly allow an unprivileged user to perform a denial of service or similar.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-05-31T21:15:09.930",
    "last_modified": "2024-11-21T09:47:03.263",
    "fix_date": "2024-05-24T11:48:46Z"
  },
  "references": [
    {
      "url": "https://bugs.launchpad.net/snapd/+bug/2065077",
      "source": "security@ubuntu.com",
      "tags": []
    },
    {
      "url": "https://github.com/snapcore/snapd/commit/68ee9c6aa916ab87dbfd9a26030690f2cabf1e14",
      "source": "security@ubuntu.com",
      "tags": []
    },
    {
      "url": "https://github.com/snapcore/snapd/security/advisories/GHSA-p9v8-q5m4-pf46",
      "source": "security@ubuntu.com",
      "tags": []
    },
    {
      "url": "https://www.cve.org/CVERecord?id=CVE-2024-5138",
      "source": "security@ubuntu.com",
      "tags": []
    },
    {
      "url": "https://bugs.launchpad.net/snapd/+bug/2065077",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/snapcore/snapd/commit/68ee9c6aa916ab87dbfd9a26030690f2cabf1e14",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/snapcore/snapd/security/advisories/GHSA-p9v8-q5m4-pf46",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://www.cve.org/CVERecord?id=CVE-2024-5138",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:26.331909",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "snapd",
    "owner": "snapcore",
    "created_at": "2015-10-21T11:51:46Z",
    "updated_at": "2025-01-14T12:43:28Z",
    "pushed_at": "2025-01-14T12:43:23Z",
    "size": 161408,
    "stars": 1915,
    "forks": 591,
    "open_issues": 142,
    "watchers": 1915,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "fde-manager-features",
      "master",
      "release/2.16",
      "release/2.17",
      "release/2.17.1",
      "release/2.18",
      "release/2.18.1",
      "release/2.19.1",
      "release/2.20",
      "release/2.20.1",
      "release/2.21",
      "release/2.22",
      "release/2.23",
      "release/2.24",
      "release/2.25",
      "release/2.26",
      "release/2.27"
    ],
    "languages": {
      "Go": 27089545,
      "C": 807343,
      "Shell": 615686,
      "Python": 226099,
      "Makefile": 104313,
      "M4": 13227,
      "Tcl": 1269,
      "HTML": 980,
      "Meson": 295,
      "Roff": 12
    },
    "commit_activity": {
      "total_commits_last_year": 1621,
      "avg_commits_per_week": 31.173076923076923,
      "days_active_last_year": 250
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": false,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-3.0"
    },
    "collected_at": "2025-01-14T14:16:07.730623"
  }
}