{
  "cve_id": "CVE-2024-51498",
  "github_data": {
    "repository": "imputnet/cobalt",
    "fix_commit": "66bac03e3078e4e781d2d3903c05ad66a883a354",
    "related_commits": [
      "66bac03e3078e4e781d2d3903c05ad66a883a354",
      "97977efabd92375f270d1818f38de3b0682c2f19",
      "c4be1d3a37b0deb6b6087ec7a815262ac942daf1"
    ],
    "patch_url": "https://github.com/imputnet/cobalt/commit/66bac03e3078e4e781d2d3903c05ad66a883a354.patch",
    "fix_commit_details": {
      "sha": "66bac03e3078e4e781d2d3903c05ad66a883a354",
      "commit_date": "2024-07-22T08:33:43Z",
      "author": {
        "login": "wukko",
        "type": "User",
        "stats": {
          "total_commits": 1721,
          "average_weekly_commits": 12.93984962406015,
          "total_additions": 78731,
          "total_deletions": 59104,
          "weeks_active": 116
        }
      },
      "commit_message": {
        "title": "web/dialogs: add picker dialog & clean up small dialog",
        "length": 54,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 783,
        "additions": 584,
        "deletions": 199
      },
      "files": [
        {
          "filename": "web/i18n/en/a11y/dialog.json",
          "status": "added",
          "additions": 3,
          "deletions": 0,
          "patch": "@@ -0,0 +1,3 @@\n+{\n+    \"picker.item.generic\": \"media thumbnail\"\n+}"
        },
        {
          "filename": "web/i18n/en/dialog.json",
          "status": "modified",
          "additions": 8,
          "deletions": 1,
          "patch": "@@ -2,7 +2,14 @@\n     \"button.gotit\": \"got it\",\n     \"button.cancel\": \"cancel\",\n     \"button.reset\": \"reset\",\n+    \"button.done\": \"done\",\n+    \"button.downloadAudio\": \"download audio\",\n \n     \"reset.title\": \"reset all settings?\",\n-    \"reset.body\": \"are you sure you want to reset all settings? this action is immediate and irreversible.\"\n+    \"reset.body\": \"are you sure you want to reset all settings? this action is immediate and irreversible.\",\n+\n+    \"picker.title\": \"select what to save\",\n+    \"picker.description.desktop\": \"click an item to save it. images can also be saved via the right click menu.\",\n+    \"picker.description.phone\": \"press an item to save it. images can also be saved with a long press.\",\n+    \"picker.description.ios\": \"press an item to save it with a shortcut. images can also be saved with a long press.\"\n }"
        },
        {
          "filename": "web/src/components/dialog/DialogBackdropClose.svelte",
          "status": "added",
          "additions": 18,
          "deletions": 0,
          "patch": "@@ -0,0 +1,18 @@\n+<script lang=\"ts\">\n+    export let closeFunc: () => void;\n+</script>\n+\n+<div\n+    id=\"dialog-backdrop-close\"\n+    aria-hidden=\"true\"\n+    on:click={() => closeFunc()}\n+></div>\n+\n+<style>\n+    #dialog-backdrop-close {\n+        position: inherit;\n+        height: 100%;\n+        width: 100%;\n+        z-index: -1;\n+    }\n+</style>"
        },
        {
          "filename": "web/src/components/dialog/DialogButtons.svelte",
          "status": "added",
          "additions": 61,
          "deletions": 0,
          "patch": "@@ -0,0 +1,61 @@\n+<script lang=\"ts\">\n+    import type { DialogButton } from \"$lib/types/dialog\";\n+\n+    export let buttons: DialogButton[];\n+    export let closeFunc: () => void;\n+</script>\n+\n+<div class=\"popup-buttons\">\n+    {#each buttons as button}\n+        <button\n+            class=\"button popup-button {button.color}\"\n+            class:active={button.main}\n+            on:click={async () => {\n+                await button.action();\n+                closeFunc();\n+            }}\n+        >\n+            {button.text}\n+        </button>\n+    {/each}\n+</div>\n+\n+<style>\n+    .popup-buttons {\n+        display: flex;\n+        flex-direction: row;\n+        width: 100%;\n+        gap: calc(var(--padding) / 2);\n+        overflow: scroll;\n+        border-radius: var(--border-radius);\n+        min-height: 40px;\n+    }\n+\n+    .popup-button {\n+        width: 100%;\n+        height: 40px;\n+    }\n+\n+    .popup-button.red {\n+        background-color: var(--red);\n+        color: var(--white);\n+    }\n+\n+    .popup-button:not(.active) {\n+        background-color: var(--button-elevated);\n+    }\n+\n+    .popup-button:not(.active):active {\n+        background-color: var(--button-elevated-hover);\n+    }\n+\n+    .popup-button:not(:focus-visible) {\n+        box-shadow: none;\n+    }\n+\n+    @media (hover: hover) {\n+        .popup-button:not(.active):hover {\n+            background-color: var(--button-elevated-hover);\n+        }\n+    }\n+</style>"
        },
        {
          "filename": "web/src/components/dialog/DialogHolder.svelte",
          "status": "modified",
          "additions": 106,
          "deletions": 1,
          "patch": "@@ -1,7 +1,9 @@\n <script lang=\"ts\">\n-    import SmallDialog from \"$components/dialog/SmallDialog.svelte\";\n     import dialogs from \"$lib/dialogs\";\n \n+    import SmallDialog from \"$components/dialog/SmallDialog.svelte\";\n+    import PickerDialog from \"$components/dialog/PickerDialog.svelte\";\n+\n     $: backdropVisible = $dialogs.length > 0;\n </script>\n \n@@ -18,11 +20,56 @@\n                 buttons={dialog.buttons}\n             />\n         {/if}\n+\n+        {#if dialog.type === \"picker\"}\n+            <PickerDialog\n+                id={dialog.id}\n+                items={dialog.items}\n+                buttons={dialog.buttons}\n+            />\n+        {/if}\n     {/each}\n     <div id=\"dialog-backdrop\" class:visible={backdropVisible}></div>\n </div>\n \n <style>\n+    :global(dialog) {\n+        display: flex;\n+        flex-direction: column;\n+        justify-content: center;\n+        align-items: center;\n+        background: none;\n+\n+        max-height: 100%;\n+        max-width: 100%;\n+        height: 100%;\n+        width: 100%;\n+        margin: 0;\n+        padding: 0;\n+        border: none;\n+        pointer-events: all;\n+\n+        inset-inline-start: unset;\n+        inset-inline-end: unset;\n+\n+        overflow: hidden;\n+    }\n+\n+    :global(dialog:modal) {\n+        inset-block-start: 0;\n+        inset-block-end: 0;\n+    }\n+\n+    :global(dialog:modal::backdrop) {\n+        display: none;\n+    }\n+\n+    @media screen and (max-width: 535px) {\n+        :global(dialog) {\n+            justify-content: end;\n+        }\n+    }\n+\n     #dialog-holder {\n         position: absolute;\n         padding-top: env(safe-area-inset-bottom);\n@@ -60,4 +107,62 @@\n         backdrop-filter: none !important;\n         -webkit-backdrop-filter: none !important;\n     }\n+\n+    :global(.open .dialog-body) {\n+        animation: modal-in 0.35s;\n+    }\n+\n+    :global(.closing .dialog-body) {\n+        animation: modal-out 0.15s;\n+        opacity: 0;\n+    }\n+\n+    @media screen and (max-width: 535px) {\n+        :global(.open .dialog-body) {\n+            animation: modal-in-mobile 0.4s;\n+        }\n+    }\n+\n+    @keyframes modal-in {\n+        from {\n+            transform: scale(0.8);\n+            opacity: 0;\n+        }\n+        30% {\n+            opacity: 1;\n+        }\n+        50% {\n+            transform: scale(1.005);\n+        }\n+        100% {\n+            transform: scale(1);\n+        }\n+    }\n+\n+    @keyframes modal-out {\n+        from {\n+            opacity: 1;\n+        }\n+        to {\n+            opacity: 0;\n+            transform: scale(0.9);\n+            visibility: hidden;\n+        }\n+    }\n+\n+    @keyframes modal-in-mobile {\n+        from {\n+            transform: translateY(200px);\n+            opacity: 0;\n+        }\n+        30% {\n+            opacity: 1;\n+        }\n+        50% {\n+            transform: translateY(-5px);\n+        }\n+        100% {\n+            transform: translateY(0px);\n+        }\n+    }\n </style>"
        },
        {
          "filename": "web/src/components/dialog/PickerDialog.svelte",
          "status": "added",
          "additions": 231,
          "deletions": 0,
          "patch": "@@ -0,0 +1,231 @@\n+<script lang=\"ts\">\n+    import { tick } from \"svelte\";\n+    import { device } from \"$lib/device\";\n+    import { killDialog } from \"$lib/dialogs\";\n+    import { t } from \"$lib/i18n/translations\";\n+\n+    import type { Optional } from \"$lib/types/generic\";\n+    import type { DialogButton } from \"$lib/types/dialog\";\n+    import type { DialogPickerItem } from \"$lib/types/dialog\";\n+\n+    import PickerItem from \"$components/dialog/PickerItem.svelte\";\n+    import DialogButtons from \"$components/dialog/DialogButtons.svelte\";\n+    import DialogBackdropClose from \"$components/dialog/DialogBackdropClose.svelte\";\n+\n+    import IconBoxMultiple from \"@tabler/icons-svelte/IconBoxMultiple.svelte\";\n+\n+    export let id: string;\n+    export let items: Optional<DialogPickerItem[]>;\n+    export let buttons: Optional<DialogButton[]>;\n+\n+    let dialogDescription = \"dialog.picker.description.\";\n+\n+    if (device.is.iOS) {\n+        dialogDescription += \"ios\";\n+    } else if (device.is.mobile) {\n+        dialogDescription += \"mobile\";\n+    } else {\n+        dialogDescription += \"desktop\";\n+    }\n+\n+    let dialogParent: HTMLDialogElement;\n+\n+    let closing = false;\n+    let open = false;\n+\n+    const close = () => {\n+        if (dialogParent) {\n+            closing = true;\n+            open = false;\n+            setTimeout(() => {\n+                dialogParent.close();\n+                killDialog();\n+            }, 150);\n+        }\n+    };\n+\n+    $: if (dialogParent) {\n+        dialogParent.showModal();\n+        tick().then(() => {\n+            open = true;\n+        });\n+    }\n+</script>\n+\n+<dialog\n+    id=\"dialog-{id}\"\n+    bind:this={dialogParent}\n+    class:closing\n+    class:open\n+    class:three-columns={items && items.length <= 3}\n+>\n+    <div class=\"dialog-body picker-dialog\">\n+        <div class=\"popup-header\">\n+            <div class=\"popup-title-container\">\n+                <IconBoxMultiple />\n+                <h2 class=\"popup-title\" tabindex=\"-1\">\n+                    {$t(\"dialog.picker.title\")}\n+                </h2>\n+            </div>\n+            <div class=\"subtext popup-description\">\n+                {$t(dialogDescription)}\n+            </div>\n+        </div>\n+        <div class=\"picker-body\">\n+            {#if items}\n+                {#each items as item}\n+                    <PickerItem {item} />\n+                {/each}\n+            {/if}\n+        </div>\n+        {#if buttons}\n+            <DialogButtons {buttons} closeFunc={close} />\n+        {/if}\n+    </div>\n+\n+    <DialogBackdropClose closeFunc={close} />\n+</dialog>\n+\n+<style>\n+    .picker-dialog {\n+        --dialog-padding: 18px;\n+        --picker-item-size: 120px;\n+\n+        display: flex;\n+        flex-direction: column;\n+        align-items: center;\n+        gap: var(--padding);\n+        max-height: calc(\n+            90% - env(safe-area-inset-bottom) - env(safe-area-inset-top)\n+        );\n+\n+        width: auto;\n+        background: var(--popup-bg);\n+        box-shadow:\n+            0 0 0 2px var(--popup-stroke) inset,\n+            0 0 60px 10px var(--popup-bg);\n+        padding: var(--dialog-padding);\n+        position: relative;\n+        will-change: transform;\n+\n+        border-radius: 29px;\n+    }\n+\n+    .popup-header {\n+        display: flex;\n+        flex-direction: column;\n+        align-items: flex-start;\n+        gap: 3px;\n+        max-width: calc(var(--picker-item-size) * 4);\n+    }\n+\n+    .popup-title-container {\n+        display: flex;\n+        flex-direction: row;\n+        align-items: center;\n+        gap: calc(var(--padding) / 2);\n+        color: var(--secondary);\n+    }\n+\n+    .popup-title-container :global(svg) {\n+        height: 21px;\n+        width: 21px;\n+    }\n+\n+    .popup-title {\n+        font-size: 18px;\n+        line-height: 1.1;\n+    }\n+\n+    .popup-description {\n+        font-size: 13px;\n+        padding: 0;\n+    }\n+\n+    .popup-title:focus-visible {\n+        box-shadow: none !important;\n+    }\n+\n+    .picker-body {\n+        overflow-y: scroll;\n+        display: grid;\n+        justify-items: center;\n+        grid-template-columns: 1fr 1fr 1fr 1fr;\n+    }\n+\n+    .three-columns .picker-body {\n+        grid-template-columns: 1fr 1fr 1fr;\n+    }\n+\n+    .three-columns .popup-header {\n+        max-width: calc(var(--picker-item-size) * 3);\n+    }\n+\n+    :global(.picker-item) {\n+        width: var(--picker-item-size);\n+        height: var(--picker-item-size);\n+    }\n+\n+    @media screen and (max-width: 535px) {\n+        .picker-dialog {\n+            margin-bottom: calc(\n+                var(--dialog-padding) + env(safe-area-inset-bottom)\n+            );\n+            box-shadow: 0 0 0 2px var(--popup-stroke) inset;\n+        }\n+\n+        .picker-body {\n+            grid-template-columns: 1fr 1fr 1fr;\n+        }\n+\n+        .popup-header {\n+            max-width: calc(var(--picker-item-size) * 3);\n+        }\n+    }\n+\n+    @media screen and (max-width: 400px) {\n+        .picker-dialog {\n+            --picker-item-size: 115px;\n+        }\n+    }\n+\n+    @media screen and (max-width: 380px) {\n+        .picker-dialog {\n+            --picker-item-size: 110px;\n+        }\n+    }\n+\n+    @media screen and (max-width: 365px) {\n+        .picker-dialog {\n+            --picker-item-size: 105px;\n+        }\n+    }\n+\n+    @media screen and (max-width: 350px) {\n+        .picker-dialog {\n+            --picker-item-size: 100px;\n+        }\n+    }\n+\n+    @media screen and (max-width: 335px) {\n+        .picker-body,\n+        .three-columns .picker-body {\n+            grid-template-columns: 1fr 1fr;\n+        }\n+\n+        .popup-header {\n+            max-width: calc(var(--picker-item-size) * 3);\n+        }\n+    }\n+\n+    @media screen and (max-width: 255px) {\n+        .picker-dialog {\n+            --picker-item-size: 120px;\n+        }\n+\n+        .picker-body,\n+        .three-columns .picker-body {\n+            grid-template-columns: 1fr;\n+        }\n+    }\n+</style>"
        },
        {
          "filename": "web/src/components/dialog/PickerItem.svelte",
          "status": "added",
          "additions": 65,
          "deletions": 0,
          "patch": "@@ -0,0 +1,65 @@\n+<script lang=\"ts\">\n+    import { t } from \"$lib/i18n/translations\";\n+\n+    import { downloadFile } from \"$lib/download\";\n+    import type { DialogPickerItem } from \"$lib/types/dialog\";\n+\n+    import Skeleton from \"$components/misc/Skeleton.svelte\";\n+\n+    export let item: DialogPickerItem;\n+\n+    let imageLoaded = false;\n+</script>\n+\n+<button\n+    class=\"picker-item\"\n+    on:click={() => {\n+        downloadFile(item.url);\n+    }}\n+>\n+    <img\n+        class=\"picker-image\"\n+        src={item.thumb ? item.thumb : item.url}\n+        class:loading={!imageLoaded}\n+        on:load={() => (imageLoaded = true)}\n+        alt={$t(\"a11y.dialog.picker.item.generic\")}\n+        height=\"100\"\n+        width=\"100\"\n+    />\n+    <Skeleton class=\"picker-image\" hidden={imageLoaded} />\n+</button>\n+\n+<style>\n+    .picker-item {\n+        background: none;\n+        padding: 2px;\n+        box-shadow: none;\n+        border-radius: calc(var(--border-radius) / 2 + 2px);\n+    }\n+\n+    :global(.picker-image) {\n+        display: block;\n+        width: 100%;\n+        height: 100%;\n+\n+        aspect-ratio: 1/1;\n+        pointer-events: all;\n+\n+        object-fit: cover;\n+        border-radius: calc(var(--border-radius) / 2);\n+    }\n+\n+    .picker-image.loading {\n+        display: none;\n+    }\n+\n+    .picker-item:active .picker-image {\n+        opacity: 0.8;\n+    }\n+\n+    @media (hover: hover) {\n+        .picker-item:hover .picker-image {\n+            opacity: 0.8;\n+        }\n+    }\n+</style>"
        },
        {
          "filename": "web/src/components/dialog/SmallDialog.svelte",
          "status": "modified",
          "additions": 16,
          "deletions": 160,
          "patch": "@@ -1,12 +1,14 @@\n <script lang=\"ts\">\n     import { tick } from \"svelte\";\n-\n     import { killDialog } from \"$lib/dialogs\";\n-    import type { DialogButton, SmallDialogIcons } from \"$lib/types/dialog\";\n-    import type { MeowbaltEmotions } from \"$lib/types/meowbalt\";\n+\n     import type { Optional } from \"$lib/types/generic\";\n+    import type { MeowbaltEmotions } from \"$lib/types/meowbalt\";\n+    import type { DialogButton, SmallDialogIcons } from \"$lib/types/dialog\";\n \n     import Meowbalt from \"$components/misc/Meowbalt.svelte\";\n+    import DialogButtons from \"$components/dialog/DialogButtons.svelte\";\n+    import DialogBackdropClose from \"$components/dialog/DialogBackdropClose.svelte\";\n \n     import IconAlertTriangle from \"@tabler/icons-svelte/IconAlertTriangle.svelte\";\n \n@@ -16,7 +18,7 @@\n     export let title: string = \"\";\n     export let bodyText: string = \"\";\n     export let bodySubText: string = \"\";\n-    export let buttons: DialogButton[];\n+    export let buttons: Optional<DialogButton[]>;\n \n     let dialogParent: HTMLDialogElement;\n \n@@ -58,7 +60,7 @@\n                         </div>\n                     {/if}\n                     {#if title}\n-                        <h2 id=\"popup-title\" tabindex=\"-1\">{title}</h2>\n+                        <h2 class=\"popup-title\" tabindex=\"-1\">{title}</h2>\n                     {/if}\n                 </div>\n             {/if}\n@@ -69,57 +71,15 @@\n                 <div class=\"subtext\">{bodySubText}</div>\n             {/if}\n         </div>\n-        <div class=\"popup-buttons\">\n-            {#each buttons as button}\n-                <button\n-                    class=\"button popup-button {button.color}\"\n-                    class:active={button.main}\n-                    on:click={async () => {\n-                        await button.action();\n-                        close();\n-                    }}\n-                >\n-                    {button.text}\n-                </button>\n-            {/each}\n-        </div>\n+        {#if buttons}\n+            <DialogButtons {buttons} closeFunc={close} />\n+        {/if}\n     </div>\n \n-    <div id=\"dialog-backdrop-close\" aria-hidden=\"true\" on:click={() => close()}></div>\n+    <DialogBackdropClose closeFunc={close} />\n </dialog>\n \n <style>\n-    dialog {\n-        display: flex;\n-        flex-direction: column;\n-        justify-content: center;\n-        align-items: center;\n-        background: none;\n-\n-        max-height: 100%;\n-        max-width: 100%;\n-        height: 100%;\n-        width: 100%;\n-        margin: 0;\n-        padding: 0;\n-        border: none;\n-        pointer-events: all;\n-\n-        inset-inline-start: unset;\n-        inset-inline-end: unset;\n-\n-        overflow: hidden;\n-    }\n-\n-    dialog:modal {\n-        inset-block-start: 0;\n-        inset-block-end: 0;\n-    }\n-\n-    dialog:modal::backdrop {\n-        display: none;\n-    }\n-\n     .small-dialog,\n     .popup-body {\n         display: flex;\n@@ -132,34 +92,25 @@\n     }\n \n     .small-dialog {\n-        --small-dialog-padding: 18px;\n+        --dialog-padding: 18px;\n \n         align-items: center;\n         text-align: center;\n         max-width: 340px;\n         width: calc(\n-            100% - var(--padding) * 2 - var(--small-dialog-padding) * 2\n+            100% - var(--padding) * 2 - var(--dialog-padding) * 2\n         );\n         background: var(--popup-bg);\n         box-shadow:\n             0 0 0 2px var(--popup-stroke) inset,\n             0 0 60px 10px var(--popup-bg);\n-        padding: var(--small-dialog-padding);\n+        padding: var(--dialog-padding);\n         margin: var(--padding);\n         border-radius: 29px;\n         position: relative;\n         will-change: transform;\n     }\n \n-    .open .small-dialog {\n-        animation: modal-in 0.35s;\n-    }\n-\n-    .closing .small-dialog {\n-        animation: modal-out 0.15s;\n-        opacity: 0;\n-    }\n-\n     .small-dialog.meowbalt-visible {\n         padding-top: calc(var(--padding) * 4);\n     }\n@@ -169,7 +120,7 @@\n         top: -120px;\n     }\n \n-    .popup-header h2 {\n+    .popup-title {\n         color: var(--secondary);\n         font-size: 19px;\n     }\n@@ -191,109 +142,14 @@\n     }\n \n     .body-text:focus-visible,\n-    h2:focus-visible {\n+    .popup-title:focus-visible {\n         box-shadow: none !important;\n     }\n \n-    .popup-buttons {\n-        display: flex;\n-        flex-direction: row;\n-        width: 100%;\n-        gap: calc(var(--padding) / 2);\n-        overflow: scroll;\n-        border-radius: var(--border-radius);\n-    }\n-\n-    .popup-button {\n-        width: 100%;\n-        height: 40px;\n-    }\n-\n-    .popup-button.red {\n-        background-color: var(--red);\n-        color: var(--white);\n-    }\n-\n-    .popup-button:not(.active) {\n-        background-color: var(--button-elevated);\n-    }\n-\n-    .popup-button:not(.active):active {\n-        background-color: var(--button-elevated-hover);\n-    }\n-\n-    .popup-button:not(:focus-visible) {\n-        box-shadow: none;\n-    }\n-\n-    @media (hover: hover) {\n-        .popup-button:not(.active):hover {\n-            background-color: var(--button-elevated-hover);\n-        }\n-    }\n-\n-    #dialog-backdrop-close {\n-        position: inherit;\n-        height: 100%;\n-        width: 100%;\n-        z-index: -1;\n-    }\n-\n-    @keyframes modal-in {\n-        from {\n-            transform: scale(0.8);\n-            opacity: 0;\n-        }\n-        30% {\n-            opacity: 1;\n-        }\n-        50% {\n-            transform: scale(1.005);\n-        }\n-        100% {\n-            transform: scale(1);\n-        }\n-    }\n-\n-    @keyframes modal-out {\n-        from {\n-            opacity: 1;\n-        }\n-        to {\n-            opacity: 0;\n-            transform: scale(0.9);\n-            visibility: hidden;\n-        }\n-    }\n-\n     @media screen and (max-width: 535px) {\n-        dialog {\n-            justify-content: end;\n-        }\n-\n         .small-dialog {\n             margin-bottom: calc(var(--padding) + env(safe-area-inset-bottom));\n             box-shadow: 0 0 0 2px var(--popup-stroke) inset;\n         }\n-\n-        .open .small-dialog {\n-            animation: modal-in-mobile 0.4s;\n-        }\n-\n-        @keyframes modal-in-mobile {\n-            from {\n-                transform: translateY(200px);\n-                opacity: 0;\n-            }\n-            30% {\n-                opacity: 1;\n-            }\n-            50% {\n-                transform: translateY(-5px);\n-            }\n-            100% {\n-                transform: translateY(0px);\n-            }\n-        }\n     }\n </style>"
        },
        {
          "filename": "web/src/components/save/buttons/DownloadButton.svelte",
          "status": "modified",
          "additions": 58,
          "deletions": 35,
          "patch": "@@ -2,49 +2,50 @@\n     import \"@fontsource-variable/noto-sans-mono\";\n \n     import API from \"$lib/api\";\n-    import { device } from \"$lib/device\";\n-\n     import { t } from \"$lib/i18n/translations\";\n-\n     import { createDialog } from \"$lib/dialogs\";\n+    import { downloadFile } from \"$lib/download\";\n+\n     import type { DialogInfo } from \"$lib/types/dialog\";\n \n     export let url: string;\n     export let isDisabled = false;\n \n     $: buttonText = \">>\";\n-    $: buttonAltText = $t('a11y.save.download');\n+    $: buttonAltText = $t(\"a11y.save.download\");\n     $: isDisabled = false;\n \n     let defaultErrorPopup: DialogInfo = {\n         id: \"save-error\",\n         type: \"small\",\n         meowbalt: \"error\",\n-        buttons: [{\n-            text: $t(\"dialog.button.gotit\"),\n-            main: true,\n-            action: () => {},\n-        }]\n-    }\n+        buttons: [\n+            {\n+                text: $t(\"dialog.button.gotit\"),\n+                main: true,\n+                action: () => {},\n+            },\n+        ],\n+    };\n \n     const changeDownloadButton = (state: string) => {\n         isDisabled = true;\n         switch (state) {\n             case \"think\":\n                 buttonText = \"...\";\n-                buttonAltText = $t('a11y.save.downloadThink');\n+                buttonAltText = $t(\"a11y.save.downloadThink\");\n                 break;\n             case \"check\":\n                 buttonText = \"..?\";\n-                buttonAltText = $t('a11y.save.downloadCheck');\n+                buttonAltText = $t(\"a11y.save.downloadCheck\");\n                 break;\n             case \"done\":\n                 buttonText = \">>>\";\n-                buttonAltText = $t('a11y.save.downloadDone');\n+                buttonAltText = $t(\"a11y.save.downloadDone\");\n                 break;\n             case \"error\":\n                 buttonText = \"!!\";\n-                buttonAltText = $t('a11y.save.downloadError');\n+                buttonAltText = $t(\"a11y.save.downloadError\");\n                 break;\n         }\n     };\n@@ -53,18 +54,10 @@\n         setTimeout(() => {\n             buttonText = \">>\";\n             isDisabled = false;\n-            buttonAltText = $t('a11y.save.download');\n+            buttonAltText = $t(\"a11y.save.download\");\n         }, 2500);\n     };\n \n-    const downloadFile = (url: string) => {\n-        if (device.is.iOS) {\n-            return navigator?.share({ url }).catch(() => {});\n-        } else {\n-            return window.open(url, \"_blank\");\n-        }\n-    };\n-\n     // alerts are temporary, we don't have an error popup yet >_<\n     export const download = async (link: string) => {\n         changeDownloadButton(\"think\");\n@@ -76,19 +69,19 @@\n             restoreDownloadButton();\n \n             return createDialog({\n-                ...defaultErrorPopup as DialogInfo,\n-                bodyText: \"couldn't access the api\"\n-            })\n+                ...(defaultErrorPopup as DialogInfo),\n+                bodyText: \"couldn't access the api\",\n+            });\n         }\n \n         if (response.status === \"error\" || response.status === \"rate-limit\") {\n             changeDownloadButton(\"error\");\n             restoreDownloadButton();\n \n             return createDialog({\n-                ...defaultErrorPopup as DialogInfo,\n-                bodyText: response.text\n-            })\n+                ...(defaultErrorPopup as DialogInfo),\n+                bodyText: response.text,\n+            });\n         }\n \n         if (response.status === \"redirect\") {\n@@ -113,19 +106,49 @@\n                 restoreDownloadButton();\n \n                 return createDialog({\n-                    ...defaultErrorPopup as DialogInfo,\n-                    bodyText: \"couldn't probe the stream\"\n-                })\n+                    ...(defaultErrorPopup as DialogInfo),\n+                    bodyText: \"couldn't probe the stream\",\n+                });\n             }\n         }\n \n+        if (response.status === \"picker\") {\n+            restoreDownloadButton();\n+\n+            let pickerButtons = [\n+                {\n+                    text: $t(\"dialog.button.done\"),\n+                    main: true,\n+                    action: () => {},\n+                },\n+            ];\n+\n+            if (response.audio) {\n+                const pickerAudio = response.audio;\n+                pickerButtons.unshift({\n+                    text: $t(\"dialog.button.downloadAudio\"),\n+                    main: false,\n+                    action: () => {\n+                        downloadFile(pickerAudio);\n+                    },\n+                });\n+            }\n+\n+            return createDialog({\n+                id: \"download-picker\",\n+                type: \"picker\",\n+                items: response.picker,\n+                buttons: pickerButtons,\n+            });\n+        }\n+\n         changeDownloadButton(\"error\");\n         restoreDownloadButton();\n \n         return createDialog({\n-            ...defaultErrorPopup as DialogInfo,\n-            bodyText: \"unknown/unsupported status\"\n-        })\n+            ...(defaultErrorPopup as DialogInfo),\n+            bodyText: \"unknown/unsupported status\",\n+        });\n     };\n </script>\n "
        },
        {
          "filename": "web/src/lib/download.ts",
          "status": "added",
          "additions": 9,
          "deletions": 0,
          "patch": "@@ -0,0 +1,9 @@\n+import { device } from \"$lib/device\";\n+\n+export const downloadFile = (url: string) => {\n+    if (device.is.iOS) {\n+        return navigator?.share({ url }).catch(() => {});\n+    } else {\n+        return window.open(url, \"_blank\");\n+    }\n+};"
        },
        {
          "filename": "web/src/lib/types/dialog.ts",
          "status": "modified",
          "additions": 9,
          "deletions": 2,
          "patch": "@@ -9,13 +9,20 @@ export type DialogButton = {\n \n export type SmallDialogIcons = \"warn-red\";\n \n+export type DialogPickerItem = {\n+    type?: 'photo' | 'video',\n+    url: string,\n+    thumb?: string,\n+}\n+\n export type DialogInfo = {\n     id: string,\n-    type: \"small\",\n+    type: \"small\" | \"picker\",\n     meowbalt?: MeowbaltEmotions,\n     icon?: SmallDialogIcons,\n     title?: string,\n     bodyText?: string,\n     bodySubText?: string,\n-    buttons: DialogButton[],\n+    buttons?: DialogButton[],\n+    items?: DialogPickerItem[],\n }"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 2,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 6,
        "max_directory_depth": 5
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "ce7d553beb75647993e7bcab694fa00bfb8a75d9",
            "date": "2025-01-12T16:43:55Z",
            "author_login": "dumbmoron"
          },
          {
            "sha": "50db4d342ab58c27b3f093b2f9681d3778df5ccb",
            "date": "2025-01-08T05:22:05Z",
            "author_login": "wukko"
          },
          {
            "sha": "7db31851d07f86aca29de7ee090bd7a80b017510",
            "date": "2025-01-08T04:58:49Z",
            "author_login": "wukko"
          },
          {
            "sha": "b47987754a96022ba25cd1fe6e84205986ea368f",
            "date": "2025-01-08T04:56:59Z",
            "author_login": "wukko"
          },
          {
            "sha": "ec019a1b500405a506bc6b9754e7937fec51c79f",
            "date": "2025-01-08T04:54:07Z",
            "author_login": "wukko"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-79",
    "description": "cobalt is a media downloader that doesn't piss you off. A malicious cobalt instance could serve links with the `javascript:` protocol, resulting in Cross-site Scripting (XSS) when the user tries to download an item from a picker. This issue has been present since commit `66bac03e`, was mitigated in commit `97977efa` (correctly configured web instances were no longer vulnerable) and fully fixed in commit `c4be1d3a` (included in release version 10.2.1). Users are advised to upgrade. Users unable to upgrade should enable a content-security-policy.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2024-11-05T00:15:04.680",
    "last_modified": "2024-11-05T16:04:26.053",
    "fix_date": "2024-07-22T08:33:43Z"
  },
  "references": [
    {
      "url": "https://github.com/imputnet/cobalt/commit/66bac03e3078e4e781d2d3903c05ad66a883a354",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/imputnet/cobalt/commit/97977efabd92375f270d1818f38de3b0682c2f19",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/imputnet/cobalt/commit/c4be1d3a37b0deb6b6087ec7a815262ac942daf1",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/imputnet/cobalt/security/advisories/GHSA-cm4c-v4cm-3735",
      "source": "security-advisories@github.com",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:09:29.206471",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "cobalt",
    "owner": "imputnet",
    "created_at": "2022-07-08T18:12:55Z",
    "updated_at": "2025-01-14T20:27:48Z",
    "pushed_at": "2025-01-14T12:31:32Z",
    "size": 16500,
    "stars": 26156,
    "forks": 2095,
    "open_issues": 152,
    "watchers": 26156,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "7",
      "main"
    ],
    "languages": {
      "Svelte": 238551,
      "JavaScript": 200967,
      "TypeScript": 61739,
      "HTML": 2275,
      "Dockerfile": 534
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "agpl-3.0"
    },
    "collected_at": "2025-01-14T20:39:02.365305"
  }
}