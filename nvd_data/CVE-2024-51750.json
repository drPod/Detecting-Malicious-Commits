{
  "cve_id": "CVE-2024-51750",
  "github_data": {
    "repository": "element-hq/element-web",
    "fix_commit": "231073c578d5f92b33cde7aa2b0b9c5836b2dc48",
    "related_commits": [
      "231073c578d5f92b33cde7aa2b0b9c5836b2dc48"
    ],
    "patch_url": "https://github.com/element-hq/element-web/commit/231073c578d5f92b33cde7aa2b0b9c5836b2dc48.patch",
    "fix_commit_details": {
      "sha": "231073c578d5f92b33cde7aa2b0b9c5836b2dc48",
      "commit_date": "2024-11-12T09:08:32Z",
      "author": {
        "login": "t3chguy",
        "type": "User",
        "stats": {
          "total_commits": 1818,
          "average_weekly_commits": 3.6215139442231075,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 250
        }
      },
      "commit_message": {
        "title": "Merge commit from fork",
        "length": 63,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 76,
        "additions": 57,
        "deletions": 19
      },
      "files": [
        {
          "filename": "src/components/views/messages/DateSeparator.tsx",
          "status": "modified",
          "additions": 23,
          "deletions": 19,
          "patch": "@@ -96,25 +96,29 @@ export default class DateSeparator extends React.Component<IProps, IState> {\n     }\n \n     private getLabel(): string {\n-        const date = new Date(this.props.ts);\n-        const disableRelativeTimestamps = !SettingsStore.getValue(UIFeature.TimelineEnableRelativeDates);\n-\n-        // During the time the archive is being viewed, a specific day might not make sense, so we return the full date\n-        if (this.props.forExport || disableRelativeTimestamps) return formatFullDateNoTime(date);\n-\n-        const today = new Date();\n-        const yesterday = new Date();\n-        const days = getDaysArray(\"long\");\n-        yesterday.setDate(today.getDate() - 1);\n-\n-        if (date.toDateString() === today.toDateString()) {\n-            return this.relativeTimeFormat.format(0, \"day\"); // Today\n-        } else if (date.toDateString() === yesterday.toDateString()) {\n-            return this.relativeTimeFormat.format(-1, \"day\"); // Yesterday\n-        } else if (today.getTime() - date.getTime() < 6 * 24 * 60 * 60 * 1000) {\n-            return days[date.getDay()]; // Sunday-Saturday\n-        } else {\n-            return formatFullDateNoTime(date);\n+        try {\n+            const date = new Date(this.props.ts);\n+            const disableRelativeTimestamps = !SettingsStore.getValue(UIFeature.TimelineEnableRelativeDates);\n+\n+            // During the time the archive is being viewed, a specific day might not make sense, so we return the full date\n+            if (this.props.forExport || disableRelativeTimestamps) return formatFullDateNoTime(date);\n+\n+            const today = new Date();\n+            const yesterday = new Date();\n+            const days = getDaysArray(\"long\");\n+            yesterday.setDate(today.getDate() - 1);\n+\n+            if (date.toDateString() === today.toDateString()) {\n+                return this.relativeTimeFormat.format(0, \"day\"); // Today\n+            } else if (date.toDateString() === yesterday.toDateString()) {\n+                return this.relativeTimeFormat.format(-1, \"day\"); // Yesterday\n+            } else if (today.getTime() - date.getTime() < 6 * 24 * 60 * 60 * 1000) {\n+                return days[date.getDay()]; // Sunday-Saturday\n+            } else {\n+                return formatFullDateNoTime(date);\n+            }\n+        } catch {\n+            return _t(\"common|message_timestamp_invalid\");\n         }\n     }\n "
        },
        {
          "filename": "src/i18n/strings/en_EN.json",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -506,6 +506,7 @@\n         \"matrix\": \"Matrix\",\n         \"message\": \"Message\",\n         \"message_layout\": \"Message layout\",\n+        \"message_timestamp_invalid\": \"Invalid timestamp\",\n         \"microphone\": \"Microphone\",\n         \"model\": \"Model\",\n         \"modern\": \"Modern\","
        },
        {
          "filename": "test/unit-tests/components/views/messages/DateSeparator-test.tsx",
          "status": "modified",
          "additions": 6,
          "deletions": 0,
          "patch": "@@ -91,6 +91,12 @@ describe(\"DateSeparator\", () => {\n         expect(getComponent({ ts, forExport: false }).container.textContent).toEqual(result);\n     });\n \n+    it(\"renders invalid date separator correctly\", () => {\n+        const ts = new Date(-8640000000000004).getTime();\n+        const { asFragment } = getComponent({ ts });\n+        expect(asFragment()).toMatchSnapshot();\n+    });\n+\n     describe(\"when forExport is true\", () => {\n         it.each(testCases)(\"formats date in full when current time is %s\", (_d, ts) => {\n             expect(getComponent({ ts, forExport: true }).container.textContent).toEqual("
        },
        {
          "filename": "test/unit-tests/components/views/messages/__snapshots__/DateSeparator-test.tsx.snap",
          "status": "modified",
          "additions": 27,
          "deletions": 0,
          "patch": "@@ -1,5 +1,32 @@\n // Jest Snapshot v1, https://goo.gl/fbAQLP\n \n+exports[`DateSeparator renders invalid date separator correctly 1`] = `\n+<DocumentFragment>\n+  <div\n+    aria-label=\"Invalid timestamp\"\n+    class=\"mx_TimelineSeparator\"\n+    role=\"separator\"\n+  >\n+    <hr\n+      role=\"none\"\n+    />\n+    <div\n+      class=\"mx_DateSeparator_dateContent\"\n+    >\n+      <h2\n+        aria-hidden=\"true\"\n+        class=\"mx_DateSeparator_dateHeading\"\n+      >\n+        Invalid timestamp\n+      </h2>\n+    </div>\n+    <hr\n+      role=\"none\"\n+    />\n+  </div>\n+</DocumentFragment>\n+`;\n+\n exports[`DateSeparator renders the date separator correctly 1`] = `\n <DocumentFragment>\n   <div"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 1,
        "dependency_files": 0,
        "test_files": 2,
        "unique_directories": 4,
        "max_directory_depth": 6
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "dbce48b23d5c553836e064b49165397f638d28e7",
            "date": "2025-01-14T18:00:30Z",
            "author_login": "t3chguy"
          },
          {
            "sha": "bb41616d5f9fc6d47c735d4794de1fa46766cb7a",
            "date": "2025-01-14T14:18:55Z",
            "author_login": "RiotRobot"
          },
          {
            "sha": "c75f6dc3a1b7c6b93cb88ac38d695c237301ecbd",
            "date": "2025-01-14T14:18:36Z",
            "author_login": "RiotRobot"
          },
          {
            "sha": "880048d998aa170b73007f4b19508724530f367b",
            "date": "2025-01-14T14:13:47Z",
            "author_login": "RiotRobot"
          },
          {
            "sha": "24685dc7d17e1942255ed15c3e9696b0819523ff",
            "date": "2025-01-14T14:10:44Z",
            "author_login": "RiotRobot"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.0,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:N/I:N/A:L",
    "cwe_id": "CWE-248",
    "description": "Element is a Matrix web client built using the Matrix React SDK. A malicious homeserver can send invalid messages over federation which can prevent Element Web and Desktop from rendering single messages or the entire room containing them. This was patched in Element Web and Desktop 1.11.85.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-11-12T17:15:10.130",
    "last_modified": "2024-11-13T17:01:58.603",
    "fix_date": "2024-11-12T09:08:32Z"
  },
  "references": [
    {
      "url": "https://github.com/element-hq/element-web/commit/231073c578d5f92b33cde7aa2b0b9c5836b2dc48",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/element-hq/element-web/security/advisories/GHSA-w36j-v56h-q9pc",
      "source": "security-advisories@github.com",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:09:29.286750",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "element-web",
    "owner": "element-hq",
    "created_at": "2015-07-22T05:32:15Z",
    "updated_at": "2025-01-14T18:13:28Z",
    "pushed_at": "2025-01-14T18:13:25Z",
    "size": 412456,
    "stars": 11362,
    "forks": 2056,
    "open_issues": 3368,
    "watchers": 11362,
    "has_security_policy": false,
    "default_branch": "develop",
    "protected_branches": [],
    "languages": {
      "TypeScript": 12426920,
      "CSS": 846182,
      "HTML": 185989,
      "JavaScript": 160494,
      "Python": 12205,
      "Shell": 8743,
      "Perl": 8613,
      "Dockerfile": 1605
    },
    "commit_activity": {
      "total_commits_last_year": 2661,
      "avg_commits_per_week": 51.17307692307692,
      "days_active_last_year": 259
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "agpl-3.0"
    },
    "collected_at": "2025-01-14T18:27:41.565517"
  }
}