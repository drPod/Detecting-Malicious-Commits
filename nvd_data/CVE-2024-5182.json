{
  "cve_id": "CVE-2024-5182",
  "github_data": {
    "repository": "mudler/localai",
    "fix_commit": "1a3dedece06cab1acc3332055d285ac540a47f0e",
    "related_commits": [
      "1a3dedece06cab1acc3332055d285ac540a47f0e",
      "1a3dedece06cab1acc3332055d285ac540a47f0e"
    ],
    "patch_url": "https://github.com/mudler/localai/commit/1a3dedece06cab1acc3332055d285ac540a47f0e.patch",
    "fix_commit_details": {
      "sha": "1a3dedece06cab1acc3332055d285ac540a47f0e",
      "commit_date": "2024-05-21T12:33:47Z",
      "author": {
        "login": "mudler",
        "type": "User",
        "stats": {
          "total_commits": 2445,
          "average_weekly_commits": 25.20618556701031,
          "total_additions": 190123,
          "total_deletions": 69471,
          "weeks_active": 97
        }
      },
      "commit_message": {
        "title": "dependencies(grpcio): bump to fix CI issues (#2362)",
        "length": 145,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 206,
        "additions": 159,
        "deletions": 47
      },
      "files": [
        {
          "filename": ".github/workflows/generate_grpc_cache.yaml",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -84,7 +84,7 @@ jobs:\n           build-args: |\n             GRPC_BASE_IMAGE=${{ matrix.grpc-base-image }}\n             GRPC_MAKEFLAGS=--jobs=4 --output-sync=target\n-            GRPC_VERSION=v1.63.0\n+            GRPC_VERSION=v1.64.0\n           context: .\n           file: ./Dockerfile\n           cache-to: type=gha,ignore-error=true"
        },
        {
          "filename": ".github/workflows/image_build.yml",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -218,7 +218,7 @@ jobs:\n             BASE_IMAGE=${{ inputs.base-image }}\n             GRPC_BASE_IMAGE=${{ inputs.grpc-base-image || inputs.base-image }}\n             GRPC_MAKEFLAGS=--jobs=4 --output-sync=target\n-            GRPC_VERSION=v1.63.0\n+            GRPC_VERSION=v1.64.0\n             MAKEFLAGS=${{ inputs.makeflags }}\n           context: .\n           file: ./Dockerfile"
        },
        {
          "filename": ".github/workflows/release.yaml",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -5,7 +5,7 @@ on:\n - pull_request\n \n env:\n-  GRPC_VERSION: v1.63.0\n+  GRPC_VERSION: v1.64.0\n \n permissions:\n   contents: write"
        },
        {
          "filename": ".github/workflows/test-extra.yml",
          "status": "modified",
          "additions": 12,
          "deletions": 12,
          "patch": "@@ -29,7 +29,7 @@ jobs:\n           curl -LsSf https://astral.sh/uv/install.sh | sh\n           sudo apt-get install -y ca-certificates cmake curl patch python3-pip\n           sudo apt-get install -y libopencv-dev\n-          pip install --user grpcio-tools==1.63.0\n+          pip install --user grpcio-tools==1.64.0\n           \n       - name: Test transformers\n         run: |\n@@ -51,7 +51,7 @@ jobs:\n           curl -LsSf https://astral.sh/uv/install.sh | sh\n           sudo apt-get install -y ca-certificates cmake curl patch python3-pip\n           sudo apt-get install -y libopencv-dev\n-          pip install --user grpcio-tools==1.63.0\n+          pip install --user grpcio-tools==1.64.0\n           \n       - name: Test sentencetransformers\n         run: |\n@@ -74,7 +74,7 @@ jobs:\n           curl -LsSf https://astral.sh/uv/install.sh | sh\n           sudo apt-get install -y ca-certificates cmake curl patch python3-pip\n           sudo apt-get install -y libopencv-dev\n-          pip install --user grpcio-tools==1.63.0\n+          pip install --user grpcio-tools==1.64.0\n \n       - name: Test rerankers\n         run: |\n@@ -96,7 +96,7 @@ jobs:\n           sudo apt-get install -y libopencv-dev\n           # Install UV\n           curl -LsSf https://astral.sh/uv/install.sh | sh\n-          pip install --user grpcio-tools==1.63.0\n+          pip install --user grpcio-tools==1.64.0\n       - name: Test diffusers\n         run: |\n           make --jobs=5 --output-sync=target -C backend/python/diffusers\n@@ -117,7 +117,7 @@ jobs:\n           curl -LsSf https://astral.sh/uv/install.sh | sh\n           sudo apt-get install -y ca-certificates cmake curl patch python3-pip\n           sudo apt-get install -y libopencv-dev\n-          pip install --user grpcio-tools==1.63.0\n+          pip install --user grpcio-tools==1.64.0\n \n       - name: Test parler-tts\n         run: |\n@@ -139,7 +139,7 @@ jobs:\n           curl -LsSf https://astral.sh/uv/install.sh | sh\n           sudo apt-get install -y ca-certificates cmake curl patch python3-pip\n           sudo apt-get install -y libopencv-dev\n-          pip install --user grpcio-tools==1.63.0\n+          pip install --user grpcio-tools==1.64.0\n \n       - name: Test openvoice\n         run: |\n@@ -161,7 +161,7 @@ jobs:\n           curl -LsSf https://astral.sh/uv/install.sh | sh\n           sudo apt-get install -y ca-certificates cmake curl patch python3-pip\n           sudo apt-get install -y libopencv-dev\n-          pip install --user grpcio-tools==1.63.0\n+          pip install --user grpcio-tools==1.64.0\n \n       - name: Test transformers-musicgen\n         run: |\n@@ -185,7 +185,7 @@ jobs:\n   #         curl -LsSf https://astral.sh/uv/install.sh | sh\n   #         sudo apt-get install -y ca-certificates cmake curl patch python3-pip\n   #         sudo apt-get install -y libopencv-dev\n-  #         pip install --user grpcio-tools==1.63.0\n+  #         pip install --user grpcio-tools==1.64.0\n \n   #     - name: Test petals\n   #       run: |\n@@ -249,7 +249,7 @@ jobs:\n   #         curl -LsSf https://astral.sh/uv/install.sh | sh\n   #         sudo apt-get install -y ca-certificates cmake curl patch python3-pip\n   #         sudo apt-get install -y libopencv-dev\n-  #         pip install --user grpcio-tools==1.63.0\n+  #         pip install --user grpcio-tools==1.64.0\n \n   #     - name: Test bark\n   #       run: |\n@@ -274,7 +274,7 @@ jobs:\n   #         curl -LsSf https://astral.sh/uv/install.sh | sh\n   #         sudo apt-get install -y ca-certificates cmake curl patch python3-pip\n   #         sudo apt-get install -y libopencv-dev\n-  #         pip install --user grpcio-tools==1.63.0\n+  #         pip install --user grpcio-tools==1.64.0\n   #     - name: Test vllm\n   #       run: |\n   #          make --jobs=5 --output-sync=target -C backend/python/vllm\n@@ -294,7 +294,7 @@ jobs:\n           curl -LsSf https://astral.sh/uv/install.sh | sh\n           sudo apt-get install -y ca-certificates cmake curl patch python3-pip\n           sudo apt-get install -y libopencv-dev\n-          pip install --user grpcio-tools==1.63.0\n+          pip install --user grpcio-tools==1.64.0\n       - name: Test vall-e-x\n         run: |\n            make --jobs=5 --output-sync=target -C backend/python/vall-e-x\n@@ -314,7 +314,7 @@ jobs:\n           sudo apt-get install -y ca-certificates cmake curl patch espeak espeak-ng python3-pip\n           # Install UV\n           curl -LsSf https://astral.sh/uv/install.sh | sh\n-          pip install --user grpcio-tools==1.63.0\n+          pip install --user grpcio-tools==1.64.0\n       - name: Test coqui\n         run: |\n           make --jobs=5 --output-sync=target -C backend/python/coqui"
        },
        {
          "filename": ".github/workflows/test.yml",
          "status": "modified",
          "additions": 2,
          "deletions": 2,
          "patch": "@@ -10,7 +10,7 @@ on:\n       - '*'\n \n env:\n-  GRPC_VERSION: v1.63.0\n+  GRPC_VERSION: v1.64.0\n \n concurrency:\n   group: ci-tests-${{ github.head_ref || github.ref }}-${{ github.repository }}\n@@ -213,7 +213,7 @@ jobs:\n       - name: Dependencies\n         run: |\n           brew install protobuf grpc make protoc-gen-go protoc-gen-go-grpc\n-          pip install --user grpcio-tools==1.63.0\n+          pip install --user grpcio-tools==1.64.0\n       - name: Test\n         run: |\n           export C_INCLUDE_PATH=/usr/local/include"
        },
        {
          "filename": "backend/python/autogptq/requirements.txt",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -1,6 +1,6 @@\n accelerate\n auto-gptq==0.7.1\n-grpcio==1.63.0\n+grpcio==1.64.0\n protobuf\n torch\n certifi"
        },
        {
          "filename": "backend/python/bark/requirements.txt",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -1,6 +1,6 @@\n accelerate\n bark==0.1.5\n-grpcio==1.63.0\n+grpcio==1.64.0\n protobuf\n certifi\n transformers\n\\ No newline at end of file"
        },
        {
          "filename": "backend/python/common/template/requirements.txt",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -1,2 +1,2 @@\n-grpcio==1.63.0\n+grpcio==1.64.0\n protobuf\n\\ No newline at end of file"
        },
        {
          "filename": "backend/python/coqui/requirements.txt",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -1,6 +1,6 @@\n accelerate\n TTS==0.22.0\n-grpcio==1.63.0\n+grpcio==1.64.0\n protobuf\n certifi\n transformers\n\\ No newline at end of file"
        },
        {
          "filename": "backend/python/diffusers/requirements.txt",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -1,7 +1,7 @@\n accelerate\n compel\n diffusers\n-grpcio==1.63.0\n+grpcio==1.64.0\n opencv-python\n pillow\n protobuf"
        },
        {
          "filename": "backend/python/exllama/requirements.txt",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -1,4 +1,4 @@\n-grpcio==1.63.0\n+grpcio==1.64.0\n protobuf\n torch\n transformers"
        },
        {
          "filename": "backend/python/exllama2/requirements.txt",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -1,5 +1,5 @@\n accelerate\n-grpcio==1.63.0\n+grpcio==1.64.0\n protobuf\n certifi\n torch"
        },
        {
          "filename": "backend/python/mamba/requirements.txt",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -1,6 +1,6 @@\n causal-conv1d==1.2.0.post2\n mamba-ssm==1.2.0.post1\n-grpcio==1.63.0\n+grpcio==1.64.0\n protobuf\n certifi\n transformers\n\\ No newline at end of file"
        },
        {
          "filename": "backend/python/openvoice/requirements-intel.txt",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -2,7 +2,7 @@\n intel-extension-for-pytorch\n torch\n optimum[openvino]\n-grpcio==1.63.0\n+grpcio==1.64.0\n protobuf\n librosa==0.9.1\n faster-whisper==0.9.0"
        },
        {
          "filename": "backend/python/openvoice/requirements.txt",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -1,4 +1,4 @@\n-grpcio==1.63.0\n+grpcio==1.64.0\n protobuf\n librosa==0.9.1\n faster-whisper==0.9.0"
        },
        {
          "filename": "backend/python/parler-tts/requirements.txt",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -1,5 +1,5 @@\n accelerate\n-grpcio==1.63.0\n+grpcio==1.64.0\n protobuf\n torch\n git+https://github.com/huggingface/parler-tts.git@10016fb0300c0dc31a0fb70e26f3affee7b62f16"
        },
        {
          "filename": "backend/python/rerankers/requirements.txt",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -1,6 +1,6 @@\n accelerate\n rerankers[transformers]\n-grpcio==1.63.0\n+grpcio==1.64.0\n protobuf\n certifi\n transformers\n\\ No newline at end of file"
        },
        {
          "filename": "backend/python/sentencetransformers/requirements.txt",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -1,6 +1,6 @@\n accelerate\n sentence-transformers==2.5.1\n transformers\n-grpcio==1.63.0\n+grpcio==1.64.0\n protobuf\n certifi\n\\ No newline at end of file"
        },
        {
          "filename": "backend/python/transformers-musicgen/requirements.txt",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -1,6 +1,6 @@\n accelerate\n transformers\n-grpcio==1.63.0\n+grpcio==1.64.0\n protobuf\n torch\n scipy==1.13.0"
        },
        {
          "filename": "backend/python/transformers/requirements.txt",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -1,6 +1,6 @@\n accelerate\n transformers\n-grpcio==1.63.0\n+grpcio==1.64.0\n protobuf\n torch\n certifi\n\\ No newline at end of file"
        },
        {
          "filename": "backend/python/vall-e-x/requirements.txt",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -1,4 +1,4 @@\n accelerate\n-grpcio==1.63.0\n+grpcio==1.64.0\n protobuf\n certifi\n\\ No newline at end of file"
        },
        {
          "filename": "backend/python/vllm/requirements.txt",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -1,6 +1,6 @@\n accelerate\n vllm\n-grpcio==1.63.0\n+grpcio==1.64.0\n protobuf\n certifi\n transformers"
        },
        {
          "filename": "core/config/backend_config.go",
          "status": "modified",
          "additions": 24,
          "deletions": 0,
          "patch": "@@ -2,6 +2,8 @@ package config\n \n import (\n \t\"os\"\n+\t\"regexp\"\n+\t\"strings\"\n \n \t\"github.com/go-skynet/LocalAI/core/schema\"\n \t\"github.com/go-skynet/LocalAI/pkg/downloader\"\n@@ -356,3 +358,25 @@ func (cfg *BackendConfig) SetDefaults(opts ...ConfigLoaderOption) {\n \t\tcfg.Debug = &trueV\n \t}\n }\n+\n+func (c *BackendConfig) Validate() bool {\n+\t// Simple validation to make sure the model can be correctly loaded\n+\tfor _, n := range []string{c.Backend, c.Model} {\n+\t\tif strings.HasPrefix(n, string(os.PathSeparator)) ||\n+\t\t\tstrings.Contains(n, \"..\") {\n+\t\t\treturn false\n+\t\t}\n+\t}\n+\n+\tif c.Name == \"\" {\n+\t\treturn false\n+\t}\n+\n+\tif c.Backend != \"\" {\n+\t\t// a regex that checks that is a string name with no special characters, except '-' and '_'\n+\t\tre := regexp.MustCompile(`^[a-zA-Z0-9-_]+$`)\n+\t\treturn re.MatchString(c.Backend)\n+\t}\n+\n+\treturn true\n+}"
        },
        {
          "filename": "core/config/backend_config_loader.go",
          "status": "modified",
          "additions": 17,
          "deletions": 4,
          "patch": "@@ -143,7 +143,9 @@ func (cm *BackendConfigLoader) LoadBackendConfigFile(file string, opts ...Config\n \t}\r\n \r\n \tfor _, cc := range c {\r\n-\t\tcm.configs[cc.Name] = *cc\r\n+\t\tif cc.Validate() {\r\n+\t\t\tcm.configs[cc.Name] = *cc\r\n+\t\t}\r\n \t}\r\n \treturn nil\r\n }\r\n@@ -156,7 +158,12 @@ func (cl *BackendConfigLoader) LoadBackendConfig(file string, opts ...ConfigLoad\n \t\treturn fmt.Errorf(\"cannot read config file: %w\", err)\r\n \t}\r\n \r\n-\tcl.configs[c.Name] = *c\r\n+\tif c.Validate() {\r\n+\t\tcl.configs[c.Name] = *c\r\n+\t} else {\r\n+\t\treturn fmt.Errorf(\"config is not valid\")\r\n+\t}\r\n+\r\n \treturn nil\r\n }\r\n \r\n@@ -297,7 +304,7 @@ func (cm *BackendConfigLoader) LoadBackendConfigsFromPath(path string, opts ...C\n \tdefer cm.Unlock()\r\n \tentries, err := os.ReadDir(path)\r\n \tif err != nil {\r\n-\t\treturn err\r\n+\t\treturn fmt.Errorf(\"cannot read directory '%s': %w\", path, err)\r\n \t}\r\n \tfiles := make([]fs.FileInfo, 0, len(entries))\r\n \tfor _, entry := range entries {\r\n@@ -314,8 +321,14 @@ func (cm *BackendConfigLoader) LoadBackendConfigsFromPath(path string, opts ...C\n \t\t\tcontinue\r\n \t\t}\r\n \t\tc, err := ReadBackendConfig(filepath.Join(path, file.Name()), opts...)\r\n-\t\tif err == nil {\r\n+\t\tif err != nil {\r\n+\t\t\tlog.Error().Err(err).Msgf(\"cannot read config file: %s\", file.Name())\r\n+\t\t\tcontinue\r\n+\t\t}\r\n+\t\tif c.Validate() {\r\n \t\t\tcm.configs[c.Name] = *c\r\n+\t\t} else {\r\n+\t\t\tlog.Error().Err(err).Msgf(\"config is not valid\")\r\n \t\t}\r\n \t}\r\n \r"
        },
        {
          "filename": "core/config/backend_config_test.go",
          "status": "added",
          "additions": 65,
          "deletions": 0,
          "patch": "@@ -0,0 +1,65 @@\n+package config_test\n+\n+import (\n+\t\"io\"\n+\t\"net/http\"\n+\t\"os\"\n+\n+\t. \"github.com/go-skynet/LocalAI/core/config\"\n+\n+\t. \"github.com/onsi/ginkgo/v2\"\n+\t. \"github.com/onsi/gomega\"\n+)\n+\n+var _ = Describe(\"Test cases for config related functions\", func() {\n+\tContext(\"Test Read configuration functions\", func() {\n+\t\tIt(\"Test Validate\", func() {\n+\t\t\ttmp, err := os.CreateTemp(\"\", \"config.yaml\")\n+\t\t\tExpect(err).To(BeNil())\n+\t\t\tdefer os.Remove(tmp.Name())\n+\t\t\t_, err = tmp.WriteString(\n+\t\t\t\t`backend: \"foo-bar\"\n+parameters:\n+  model: \"foo-bar\"`)\n+\t\t\tExpect(err).ToNot(HaveOccurred())\n+\t\t\tconfig, err := ReadBackendConfig(tmp.Name())\n+\t\t\tExpect(err).To(BeNil())\n+\t\t\tExpect(config).ToNot(BeNil())\n+\t\t\tExpect(config.Validate()).To(BeFalse())\n+\t\t})\n+\t\tIt(\"Test Validate\", func() {\n+\t\t\ttmp, err := os.CreateTemp(\"\", \"config.yaml\")\n+\t\t\tExpect(err).To(BeNil())\n+\t\t\tdefer os.Remove(tmp.Name())\n+\t\t\t_, err = tmp.WriteString(\n+\t\t\t\t`name: bar-baz\n+backend: \"foo-bar\"\n+parameters:\n+  model: \"foo-bar\"`)\n+\t\t\tExpect(err).ToNot(HaveOccurred())\n+\t\t\tconfig, err := ReadBackendConfig(tmp.Name())\n+\t\t\tExpect(err).To(BeNil())\n+\t\t\tExpect(config).ToNot(BeNil())\n+\t\t\t// two configs in config.yaml\n+\t\t\tExpect(config.Name).To(Equal(\"bar-baz\"))\n+\t\t\tExpect(config.Validate()).To(BeTrue())\n+\n+\t\t\t// download https://raw.githubusercontent.com/mudler/LocalAI/master/embedded/models/hermes-2-pro-mistral.yaml\n+\t\t\thttpClient := http.Client{}\n+\t\t\tresp, err := httpClient.Get(\"https://raw.githubusercontent.com/mudler/LocalAI/master/embedded/models/hermes-2-pro-mistral.yaml\")\n+\t\t\tExpect(err).To(BeNil())\n+\t\t\tdefer resp.Body.Close()\n+\t\t\ttmp, err = os.CreateTemp(\"\", \"config.yaml\")\n+\t\t\tExpect(err).To(BeNil())\n+\t\t\tdefer os.Remove(tmp.Name())\n+\t\t\t_, err = io.Copy(tmp, resp.Body)\n+\t\t\tExpect(err).To(BeNil())\n+\t\t\tconfig, err = ReadBackendConfig(tmp.Name())\n+\t\t\tExpect(err).To(BeNil())\n+\t\t\tExpect(config).ToNot(BeNil())\n+\t\t\t// two configs in config.yaml\n+\t\t\tExpect(config.Name).To(Equal(\"hermes-2-pro-mistral\"))\n+\t\t\tExpect(config.Validate()).To(BeTrue())\n+\t\t})\n+\t})\n+})"
        },
        {
          "filename": "core/config/config_suite_test.go",
          "status": "added",
          "additions": 13,
          "deletions": 0,
          "patch": "@@ -0,0 +1,13 @@\n+package config_test\n+\n+import (\n+\t\"testing\"\n+\n+\t. \"github.com/onsi/ginkgo/v2\"\n+\t. \"github.com/onsi/gomega\"\n+)\n+\n+func TestConfig(t *testing.T) {\n+\tRegisterFailHandler(Fail)\n+\tRunSpecs(t, \"Config test suite\")\n+}"
        },
        {
          "filename": "core/config/config_test.go",
          "status": "modified",
          "additions": 2,
          "deletions": 7,
          "patch": "@@ -28,16 +28,11 @@ var _ = Describe(\"Test cases for config related functions\", func() {\n \n \t\tIt(\"Test LoadConfigs\", func() {\n \t\t\tcm := NewBackendConfigLoader()\n-\t\t\topts := NewApplicationConfig()\n-\t\t\terr := cm.LoadBackendConfigsFromPath(opts.ModelPath)\n+\t\t\terr := cm.LoadBackendConfigsFromPath(os.Getenv(\"MODELS_PATH\"))\n \t\t\tExpect(err).To(BeNil())\n \t\t\tExpect(cm.ListBackendConfigs()).ToNot(BeNil())\n \n-\t\t\t// config should includes gpt4all models's api.config\n-\t\t\tExpect(cm.ListBackendConfigs()).To(ContainElements(\"gpt4all\"))\n-\n-\t\t\t// config should includes gpt2 models's api.config\n-\t\t\tExpect(cm.ListBackendConfigs()).To(ContainElements(\"gpt4all-2\"))\n+\t\t\tExpect(cm.ListBackendConfigs()).To(ContainElements(\"code-search-ada-code-001\"))\n \n \t\t\t// config should includes text-embedding-ada-002 models's api.config\n \t\t\tExpect(cm.ListBackendConfigs()).To(ContainElements(\"text-embedding-ada-002\"))"
        },
        {
          "filename": "pkg/model/process.go",
          "status": "modified",
          "additions": 4,
          "deletions": 2,
          "patch": "@@ -30,8 +30,10 @@ func (ml *ModelLoader) StopAllExcept(s string) error {\n }\n \n func (ml *ModelLoader) deleteProcess(s string) error {\n-\tif err := ml.grpcProcesses[s].Stop(); err != nil {\n-\t\treturn err\n+\tif _, exists := ml.grpcProcesses[s]; exists {\n+\t\tif err := ml.grpcProcesses[s].Stop(); err != nil {\n+\t\t\treturn err\n+\t\t}\n \t}\n \tdelete(ml.grpcProcesses, s)\n \tdelete(ml.models, s)"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 8,
        "dependency_files": 16,
        "test_files": 5,
        "unique_directories": 19,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "d7dee3a5ecd7d3e60ba699ed6f12bc8d75213ffd",
            "date": "2025-01-14T10:13:16Z",
            "author_login": "mudler"
          },
          {
            "sha": "b8d74e52b1e400a52a747a3a89ac3f6338c6ad4b",
            "date": "2025-01-14T08:41:30Z",
            "author_login": "mudler"
          },
          {
            "sha": "62abe0d2c9c6492213039a7ccbbecaa40808791d",
            "date": "2025-01-14T08:33:19Z",
            "author_login": "mudler"
          },
          {
            "sha": "5414c294c4d2e57f1f0e09da14e341a5cd846e2b",
            "date": "2025-01-14T08:29:25Z",
            "author_login": "mudler"
          },
          {
            "sha": "1b3e89c89c1e82b98cdfd231d4c44ae491f3cd83",
            "date": "2025-01-14T08:27:18Z",
            "author_login": "mudler"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.1,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:H",
    "cwe_id": "CWE-22",
    "description": "A path traversal vulnerability exists in mudler/localai version 2.14.0, where an attacker can exploit the `model` parameter during the model deletion process to delete arbitrary files. Specifically, by crafting a request with a manipulated `model` parameter, an attacker can traverse the directory structure and target files outside of the intended directory, leading to the deletion of sensitive data. This vulnerability is due to insufficient input validation and sanitization of the `model` parameter.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-06-20T00:15:09.487",
    "last_modified": "2024-11-21T09:47:08.590",
    "fix_date": "2024-05-21T12:33:47Z"
  },
  "references": [
    {
      "url": "https://github.com/mudler/localai/commit/1a3dedece06cab1acc3332055d285ac540a47f0e",
      "source": "security@huntr.dev",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://huntr.com/bounties/f7a87f29-c22a-48e8-9fce-b6d5a273e545",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch"
      ]
    },
    {
      "url": "https://github.com/mudler/localai/commit/1a3dedece06cab1acc3332055d285ac540a47f0e",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://huntr.com/bounties/f7a87f29-c22a-48e8-9fce-b6d5a273e545",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Issue Tracking",
        "Patch"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:28.845776",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "LocalAI",
    "owner": "mudler",
    "created_at": "2023-03-18T22:58:02Z",
    "updated_at": "2025-01-14T15:10:10Z",
    "pushed_at": "2025-01-14T10:13:18Z",
    "size": 12471,
    "stars": 28386,
    "forks": 2132,
    "open_issues": 404,
    "watchers": 28386,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "Go": 806615,
      "Python": 148488,
      "JavaScript": 145729,
      "C++": 105310,
      "HTML": 81769,
      "Makefile": 56001,
      "Shell": 32621,
      "Dockerfile": 19776,
      "CSS": 4436,
      "CMake": 3102,
      "C": 405,
      "Earthly": 110
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T15:13:52.451028"
  }
}