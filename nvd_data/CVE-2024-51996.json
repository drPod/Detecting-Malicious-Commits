{
  "cve_id": "CVE-2024-51996",
  "github_data": {
    "repository": "symfony/symfony",
    "fix_commit": "81354d392c5f0b7a52bcbd729d6f82501e94135a",
    "related_commits": [
      "81354d392c5f0b7a52bcbd729d6f82501e94135a"
    ],
    "patch_url": "https://github.com/symfony/symfony/commit/81354d392c5f0b7a52bcbd729d6f82501e94135a.patch",
    "fix_commit_details": {
      "sha": "81354d392c5f0b7a52bcbd729d6f82501e94135a",
      "commit_date": "2024-11-07T08:29:25Z",
      "author": {
        "login": "jderusse",
        "type": "User",
        "stats": {
          "total_commits": 367,
          "average_weekly_commits": 0.467515923566879,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 118
        }
      },
      "commit_message": {
        "title": "[security-http] Check owner of persisted remember-me cookie",
        "length": 59,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 53,
        "additions": 48,
        "deletions": 5
      },
      "files": [
        {
          "filename": "src/Symfony/Component/Security/Http/RememberMe/PersistentRememberMeHandler.php",
          "status": "modified",
          "additions": 16,
          "deletions": 3,
          "patch": "@@ -66,9 +66,16 @@ public function consumeRememberMeCookie(RememberMeDetails $rememberMeDetails): U\n             throw new AuthenticationException('The cookie is incorrectly formatted.');\n         }\n \n-        [$series, $tokenValue] = explode(':', $rememberMeDetails->getValue());\n+        [$series, $tokenValue] = explode(':', $rememberMeDetails->getValue(), 2);\n         $persistentToken = $this->tokenProvider->loadTokenBySeries($series);\n \n+        if ($persistentToken->getUserIdentifier() !== $rememberMeDetails->getUserIdentifier() || $persistentToken->getClass() !== $rememberMeDetails->getUserFqcn()) {\n+            throw new AuthenticationException('The cookie\\'s hash is invalid.');\n+        }\n+\n+        // content of $rememberMeDetails is not trustable. this prevents use of this class\n+        unset($rememberMeDetails);\n+\n         if ($this->tokenVerifier) {\n             $isTokenValid = $this->tokenVerifier->verifyToken($persistentToken, $tokenValue);\n         } else {\n@@ -78,11 +85,17 @@ public function consumeRememberMeCookie(RememberMeDetails $rememberMeDetails): U\n             throw new CookieTheftException('This token was already used. The account is possibly compromised.');\n         }\n \n-        if ($persistentToken->getLastUsed()->getTimestamp() + $this->options['lifetime'] < time()) {\n+        $expires = $persistentToken->getLastUsed()->getTimestamp() + $this->options['lifetime'];\n+        if ($expires < time()) {\n             throw new AuthenticationException('The cookie has expired.');\n         }\n \n-        return parent::consumeRememberMeCookie($rememberMeDetails->withValue($persistentToken->getLastUsed()->getTimestamp().':'.$rememberMeDetails->getValue().':'.$persistentToken->getClass()));\n+        return parent::consumeRememberMeCookie(new RememberMeDetails(\n+            $persistentToken->getClass(),\n+            $persistentToken->getUserIdentifier(),\n+            $expires,\n+            $persistentToken->getLastUsed()->getTimestamp().':'.$series.':'.$tokenValue.':'.$persistentToken->getClass()\n+        ));\n     }\n \n     public function processRememberMe(RememberMeDetails $rememberMeDetails, UserInterface $user): void"
        },
        {
          "filename": "src/Symfony/Component/Security/Http/Tests/RememberMe/PersistentRememberMeHandlerTest.php",
          "status": "modified",
          "additions": 32,
          "deletions": 2,
          "patch": "@@ -80,7 +80,7 @@ public function testConsumeRememberMeCookieValid()\n         $this->tokenProvider->expects($this->any())\n             ->method('loadTokenBySeries')\n             ->with('series1')\n-            ->willReturn(new PersistentToken(InMemoryUser::class, 'wouter', 'series1', 'tokenvalue', new \\DateTime('-10 min')))\n+            ->willReturn(new PersistentToken(InMemoryUser::class, 'wouter', 'series1', 'tokenvalue', $lastUsed = new \\DateTime('-10 min')))\n         ;\n \n         $this->tokenProvider->expects($this->once())->method('updateToken')->with('series1');\n@@ -98,11 +98,41 @@ public function testConsumeRememberMeCookieValid()\n \n         $this->assertSame($rememberParts[0], $cookieParts[0]); // class\n         $this->assertSame($rememberParts[1], $cookieParts[1]); // identifier\n-        $this->assertSame($rememberParts[2], $cookieParts[2]); // expire\n+        $this->assertEqualsWithDelta($lastUsed->getTimestamp() + 31536000, (int) $cookieParts[2], 2); // expire\n         $this->assertNotSame($rememberParts[3], $cookieParts[3]); // value\n         $this->assertSame(explode(':', $rememberParts[3])[0], explode(':', $cookieParts[3])[0]); // series\n     }\n \n+    public function testConsumeRememberMeCookieInvalidOwner()\n+    {\n+        $this->tokenProvider->expects($this->any())\n+            ->method('loadTokenBySeries')\n+            ->with('series1')\n+            ->willReturn(new PersistentToken(InMemoryUser::class, 'wouter', 'series1', 'tokenvalue', new \\DateTime('-10 min')))\n+        ;\n+\n+        $rememberMeDetails = new RememberMeDetails(InMemoryUser::class, 'jeremy', 360, 'series1:tokenvalue');\n+\n+        $this->expectException(AuthenticationException::class);\n+        $this->expectExceptionMessage('The cookie\\'s hash is invalid.');\n+        $this->handler->consumeRememberMeCookie($rememberMeDetails);\n+    }\n+\n+    public function testConsumeRememberMeCookieInvalidValue()\n+    {\n+        $this->tokenProvider->expects($this->any())\n+            ->method('loadTokenBySeries')\n+            ->with('series1')\n+            ->willReturn(new PersistentToken(InMemoryUser::class, 'wouter', 'series1', 'tokenvalue', new \\DateTime('-10 min')))\n+        ;\n+\n+        $rememberMeDetails = new RememberMeDetails(InMemoryUser::class, 'wouter', 360, 'series1:tokenvalue:somethingelse');\n+\n+        $this->expectException(AuthenticationException::class);\n+        $this->expectExceptionMessage('This token was already used. The account is possibly compromised.');\n+        $this->handler->consumeRememberMeCookie($rememberMeDetails);\n+    }\n+\n     public function testConsumeRememberMeCookieValidByValidatorWithoutUpdate()\n     {\n         $verifier = $this->createMock(TokenVerifierInterface::class);"
        }
      ],
      "file_patterns": {
        "security_files": 2,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 7
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "f6312d3f3313afc62c5b1e920b2cbfe62fcf3f8e",
            "date": "2025-01-13T09:20:08Z",
            "author_login": "nicolas-grekas"
          },
          {
            "sha": "7b338721ca42ba1d5544658b39359916715170f4",
            "date": "2025-01-12T22:16:37Z",
            "author_login": "derrabus"
          },
          {
            "sha": "1a76f128845de80fe6644c7de12e0dcdad8197f1",
            "date": "2025-01-12T20:19:12Z",
            "author_login": "derrabus"
          },
          {
            "sha": "0d0758e87be2e990d7744e4e66b59e6609a2b3c9",
            "date": "2025-01-12T17:25:07Z",
            "author_login": "fabpot"
          },
          {
            "sha": "946278f9f8cd1bc40c075d37b1d6c2a289c8eb4c",
            "date": "2025-01-12T12:57:08Z",
            "author_login": "alamirault"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
    "cwe_id": "CWE-287",
    "description": "Symphony process is a module for the Symphony PHP framework which executes commands in sub-processes. When consuming a persisted remember-me cookie, Symfony does not check if the username persisted in the database matches the username attached with the cookie, leading to authentication bypass. This vulnerability is fixed in 5.4.47, 6.4.15, and 7.1.8.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-11-13T17:15:11.870",
    "last_modified": "2024-11-15T14:00:09.720",
    "fix_date": "2024-11-07T08:29:25Z"
  },
  "references": [
    {
      "url": "https://github.com/symfony/symfony/commit/81354d392c5f0b7a52bcbd729d6f82501e94135a",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/symfony/symfony/security/advisories/GHSA-cg23-qf8f-62rr",
      "source": "security-advisories@github.com",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:09:29.292385",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "symfony",
    "owner": "symfony",
    "created_at": "2010-01-04T14:21:21Z",
    "updated_at": "2025-01-14T09:56:31Z",
    "pushed_at": "2025-01-13T13:22:56Z",
    "size": 290479,
    "stars": 29917,
    "forks": 9510,
    "open_issues": 879,
    "watchers": 29917,
    "has_security_policy": false,
    "default_branch": "7.3",
    "protected_branches": [
      "2.0",
      "2.1",
      "2.2",
      "2.3",
      "2.4",
      "2.5",
      "2.6",
      "2.7",
      "2.8",
      "3.0",
      "3.1",
      "3.2",
      "3.3",
      "3.4",
      "4.0",
      "4.1",
      "4.2",
      "4.3",
      "4.4",
      "5.0",
      "5.1",
      "5.2",
      "5.3",
      "5.4",
      "6.0",
      "6.1",
      "6.2",
      "6.3",
      "6.4",
      "7.0"
    ],
    "languages": {
      "PHP": 30007525,
      "Twig": 527335,
      "CSS": 56186,
      "JavaScript": 28225,
      "HTML": 16804,
      "Shell": 9654,
      "Makefile": 1612,
      "Hack": 26
    },
    "commit_activity": {
      "total_commits_last_year": 4163,
      "avg_commits_per_week": 80.0576923076923,
      "days_active_last_year": 343
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T13:44:47.171985"
  }
}