{
  "cve_id": "CVE-2024-52286",
  "github_data": {
    "repository": "Stirling-Tools/Stirling-PDF",
    "fix_commit": "404e31468ec98413f1906cc7ee3d49091638c693",
    "related_commits": [
      "404e31468ec98413f1906cc7ee3d49091638c693"
    ],
    "patch_url": "https://github.com/Stirling-Tools/Stirling-PDF/commit/404e31468ec98413f1906cc7ee3d49091638c693.patch",
    "fix_commit_details": {
      "sha": "404e31468ec98413f1906cc7ee3d49091638c693",
      "commit_date": "2024-11-05T21:44:24Z",
      "author": {
        "login": "Hotanya",
        "type": "User",
        "stats": {
          "total_commits": 2,
          "average_weekly_commits": 0.019230769230769232,
          "total_additions": 337,
          "total_deletions": 14,
          "weeks_active": 2
        }
      },
      "commit_message": {
        "title": "Added input sanitization to fix self-xss issue (#2189)",
        "length": 54,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 54,
        "additions": 41,
        "deletions": 13
      },
      "files": [
        {
          "filename": "src/main/resources/static/js/merge.js",
          "status": "modified",
          "additions": 41,
          "deletions": 13,
          "patch": "@@ -21,27 +21,55 @@ async function displayFiles(files) {\n   for (let i = 0; i < files.length; i++) {\n     const pageCount = await getPDFPageCount(files[i]);\n     const pageLabel = pageCount === 1 ? pageTranslation : pagesTranslation;\n+    \n+    // Create list item\n     const item = document.createElement(\"li\");\n     item.className = \"list-group-item\";\n-    item.innerHTML = `\n-            <div class=\"d-flex justify-content-between align-items-center w-100\">\n-                <div class=\"filename\">${files[i].name}</div>\n-                <div class=\"page-info\">\n-                    <span class=\"page-count\">${pageCount} ${pageLabel}</span>\n-                </div>\n-                <div class=\"arrows d-flex\">\n-                    <button class=\"btn btn-secondary move-up\"><span>&uarr;</span></button>\n-                    <button class=\"btn btn-secondary move-down\"><span>&darr;</span></button>\n-                    <button class=\"btn btn-danger remove-file\"><span>&times;</span></button>\n-                </div>\n-            </div>\n-        `;\n+\n+    // Create filename div and set textContent to sanitize\n+    const fileNameDiv = document.createElement(\"div\");\n+    fileNameDiv.className = \"filename\";\n+    fileNameDiv.textContent = files[i].name;\n+\n+    // Create page info div and set textContent to sanitize\n+    const pageInfoDiv = document.createElement(\"div\");\n+    pageInfoDiv.className = \"page-info\";\n+    const pageCountSpan = document.createElement(\"span\");\n+    pageCountSpan.className = \"page-count\";\n+    pageCountSpan.textContent = `${pageCount} ${pageLabel}`;\n+    pageInfoDiv.appendChild(pageCountSpan);\n+\n+    // Create arrows div with buttons\n+    const arrowsDiv = document.createElement(\"div\");\n+    arrowsDiv.className = \"arrows d-flex\";\n+\n+    const moveUpButton = document.createElement(\"button\");\n+    moveUpButton.className = \"btn btn-secondary move-up\";\n+    moveUpButton.innerHTML = \"<span>&uarr;</span>\";\n+\n+    const moveDownButton = document.createElement(\"button\");\n+    moveDownButton.className = \"btn btn-secondary move-down\";\n+    moveDownButton.innerHTML = \"<span>&darr;</span>\";\n+\n+    const removeButton = document.createElement(\"button\");\n+    removeButton.className = \"btn btn-danger remove-file\";\n+    removeButton.innerHTML = \"<span>&times;</span>\";\n+\n+    arrowsDiv.append(moveUpButton, moveDownButton, removeButton);\n+\n+    // Append elements to item and then to list\n+    const itemContainer = document.createElement(\"div\");\n+    itemContainer.className = \"d-flex justify-content-between align-items-center w-100\";\n+    itemContainer.append(fileNameDiv, pageInfoDiv, arrowsDiv);\n+\n+    item.appendChild(itemContainer);\n     list.appendChild(item);\n   }\n \n   attachMoveButtons();\n }\n \n+\n async function getPDFPageCount(file) {\n   const blobUrl = URL.createObjectURL(file);\n   const pdf = await pdfjsLib.getDocument(blobUrl).promise;"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 5
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "06a53de350d8da55098ad382ab0240aee8fd264c",
            "date": "2025-01-14T15:57:45Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "bb99f9ff8325363cdae7cf567e394804e9a545e3",
            "date": "2025-01-14T15:51:33Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "72b7b1b83869fa3bfd9e1b0bbaae2599ae56b8a0",
            "date": "2025-01-14T15:32:15Z",
            "author_login": "Frooodle"
          },
          {
            "sha": "cbaea9cca9a5d8aac37251ce07ddfed4700ea8cf",
            "date": "2025-01-14T14:06:00Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "5605e4d3bbd0189469ca205a27fc104a34983ed8",
            "date": "2025-01-14T13:55:46Z",
            "author_login": "github-actions[bot]"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-20",
    "description": "Stirling-PDF is a locally hosted web application that allows you to perform various operations on PDF files. In affected versions the Merge functionality takes untrusted user input (file name) and uses it directly in the creation of HTML pages allowing any unauthenticated to execute JavaScript code in the context of the user. The issue stems to the code starting at `Line 24` in `src/main/resources/static/js/merge.js`. The file name is directly being input into InnerHTML with no sanitization on the file name, allowing a malicious user to be able to upload files with names containing HTML tags. As HTML tags can include JavaScript code, this can be used to execute JavaScript code in the context of the user. This is a self-injection style attack and relies on a user uploading the malicious file themselves and it impact only them, not other users. A user might be social engineered into running this to launch a phishing attack. Nevertheless, this breaks the expected security restrictions in place by the application. This issue has been addressed in version 0.32.0 and all users are advised to upgrade. There are no known workarounds for this vulnerability.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2024-11-11T20:15:19.867",
    "last_modified": "2025-01-09T15:15:18.347",
    "fix_date": "2024-11-05T21:44:24Z"
  },
  "references": [
    {
      "url": "https://github.com/Stirling-Tools/Stirling-PDF/commit/404e31468ec98413f1906cc7ee3d49091638c693",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/Stirling-Tools/Stirling-PDF/security/advisories/GHSA-9j55-gvf2-cqwv",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://hotanya.fyi/blog/self-xss-in-stirling-pdf-cve-2024-52286/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:09:29.282753",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "Stirling-PDF",
    "owner": "Stirling-Tools",
    "created_at": "2023-01-27T18:22:42Z",
    "updated_at": "2025-01-14T17:06:43Z",
    "pushed_at": "2025-01-14T15:58:42Z",
    "size": 79268,
    "stars": 48864,
    "forks": 4015,
    "open_issues": 222,
    "watchers": 48864,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main"
    ],
    "languages": {
      "Java": 1108505,
      "HTML": 497195,
      "JavaScript": 374445,
      "CSS": 85597,
      "Rich Text Format": 41703,
      "Python": 35585,
      "Gherkin": 18273,
      "Shell": 18164,
      "Dockerfile": 3107
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T17:13:07.969051"
  }
}