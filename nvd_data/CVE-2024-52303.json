{
  "cve_id": "CVE-2024-52303",
  "github_data": {
    "repository": "aio-libs/aiohttp",
    "fix_commit": "bc15db61615079d1b6327ba42c682f758fa96936",
    "related_commits": [
      "bc15db61615079d1b6327ba42c682f758fa96936"
    ],
    "patch_url": "https://github.com/aio-libs/aiohttp/commit/bc15db61615079d1b6327ba42c682f758fa96936.patch",
    "fix_commit_details": {
      "sha": "bc15db61615079d1b6327ba42c682f758fa96936",
      "commit_date": "2024-11-13T14:44:23Z",
      "author": {
        "login": "bdraco",
        "type": "User",
        "stats": {
          "total_commits": 872,
          "average_weekly_commits": 1.4779661016949153,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 45
        }
      },
      "commit_message": {
        "title": "[PR #9852/249855a backport][3.10] Fix system routes polluting the middleware cache (#9855)",
        "length": 90,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 44,
        "additions": 39,
        "deletions": 5
      },
      "files": [
        {
          "filename": "CHANGES/9852.bugfix.rst",
          "status": "added",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -0,0 +1 @@\n+Fixed system routes polluting the middleware cache -- by :user:`bdraco`."
        },
        {
          "filename": "aiohttp/web_app.py",
          "status": "modified",
          "additions": 11,
          "deletions": 3,
          "patch": "@@ -54,6 +54,7 @@\n     MaskDomain,\n     MatchedSubAppResource,\n     PrefixedSubAppResource,\n+    SystemRoute,\n     UrlDispatcher,\n )\n \n@@ -79,7 +80,6 @@\n _Resource = TypeVar(\"_Resource\", bound=AbstractResource)\n \n \n-@lru_cache(None)\n def _build_middlewares(\n     handler: Handler, apps: Tuple[\"Application\", ...]\n ) -> Callable[[Request], Awaitable[StreamResponse]]:\n@@ -90,6 +90,9 @@ def _build_middlewares(\n     return handler\n \n \n+_cached_build_middleware = lru_cache(maxsize=1024)(_build_middlewares)\n+\n+\n class Application(MutableMapping[Union[str, AppKey[Any]], Any]):\n     ATTRS = frozenset(\n         [\n@@ -544,8 +547,13 @@ async def _handle(self, request: Request) -> StreamResponse:\n         handler = match_info.handler\n \n         if self._run_middlewares:\n-            if not self._has_legacy_middlewares:\n-                handler = _build_middlewares(handler, match_info.apps)\n+            # If its a SystemRoute, don't cache building the middlewares since\n+            # they are constructed for every MatchInfoError as a new handler\n+            # is made each time.\n+            if not self._has_legacy_middlewares and not isinstance(\n+                match_info.route, SystemRoute\n+            ):\n+                handler = _cached_build_middleware(handler, match_info.apps)\n             else:\n                 for app in match_info.apps[::-1]:\n                     for m, new_style in app._middlewares_handlers:  # type: ignore[union-attr]"
        },
        {
          "filename": "tests/test_web_middleware.py",
          "status": "modified",
          "additions": 27,
          "deletions": 2,
          "patch": "@@ -1,10 +1,11 @@\n import re\n-from typing import Any\n+from typing import Any, NoReturn\n \n import pytest\n from yarl import URL\n \n-from aiohttp import web\n+from aiohttp import web, web_app\n+from aiohttp.pytest_plugin import AiohttpClient\n from aiohttp.typedefs import Handler\n \n \n@@ -520,3 +521,27 @@ async def call(self, request, handler: Handler):\n     assert 201 == resp.status\n     txt = await resp.text()\n     assert \"OK[new style middleware]\" == txt\n+\n+\n+async def test_middleware_does_not_leak(aiohttp_client: AiohttpClient) -> None:\n+    async def any_handler(request: web.Request) -> NoReturn:\n+        assert False\n+\n+    class Middleware:\n+        @web.middleware\n+        async def call(\n+            self, request: web.Request, handler: Handler\n+        ) -> web.StreamResponse:\n+            return await handler(request)\n+\n+    app = web.Application()\n+    app.router.add_route(\"POST\", \"/any\", any_handler)\n+    app.middlewares.append(Middleware().call)\n+\n+    client = await aiohttp_client(app)\n+\n+    web_app._cached_build_middleware.cache_clear()\n+    for _ in range(10):\n+        resp = await client.get(\"/any\")\n+        assert resp.status == 405\n+    assert web_app._cached_build_middleware.cache_info().currsize < 10"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 3,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "9482755b40ce69814eea6f65bfbd4c12d1878174",
            "date": "2025-01-10T10:46:29Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "76f4309a6cbfc12d918c65b5bffdcf0d4bb691c6",
            "date": "2025-01-10T10:39:38Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "c5c204f8b661bb1c9d183e17b37013ee222b2cbd",
            "date": "2025-01-10T10:37:48Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "a91dc8f78e97f9be30e13c39e457e8e2a2651702",
            "date": "2025-01-08T10:27:45Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "237d46722a0e56363c4a07dcf31e73fe4c2ea392",
            "date": "2025-01-07T11:14:58Z",
            "author_login": "dependabot[bot]"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-772",
    "description": "aiohttp is an asynchronous HTTP client/server framework for asyncio and Python. In versions starting with 3.10.6 and prior to 3.10.11, a memory leak can occur when a request produces a MatchInfoError. This was caused by adding an entry to a cache on each request, due to the building of each MatchInfoError producing a unique cache entry. An attacker may be able to exhaust the memory resources of a server by sending a substantial number (100,000s to millions) of such requests. Those who use any middlewares with aiohttp.web should upgrade to version 3.10.11 to receive a patch.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-11-18T20:15:06.047",
    "last_modified": "2024-11-19T21:57:32.967",
    "fix_date": "2024-11-13T14:44:23Z"
  },
  "references": [
    {
      "url": "https://github.com/aio-libs/aiohttp/commit/bc15db61615079d1b6327ba42c682f758fa96936",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/aio-libs/aiohttp/security/advisories/GHSA-27mf-ghqm-j3j8",
      "source": "security-advisories@github.com",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:09:31.263254",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "aiohttp",
    "owner": "aio-libs",
    "created_at": "2013-10-01T23:04:01Z",
    "updated_at": "2025-01-14T07:45:00Z",
    "pushed_at": "2025-01-13T11:21:32Z",
    "size": 31707,
    "stars": 15317,
    "forks": 2050,
    "open_issues": 250,
    "watchers": 15317,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "3.8",
      "3.9",
      "3.10",
      "3.11",
      "3.12",
      "master"
    ],
    "languages": {
      "Python": 2241563,
      "Cython": 41302,
      "Makefile": 5839,
      "Gherkin": 1248,
      "Dockerfile": 298,
      "C": 170,
      "Shell": 148
    },
    "commit_activity": {
      "total_commits_last_year": 2401,
      "avg_commits_per_week": 46.17307692307692,
      "days_active_last_year": 226
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T14:12:57.567310"
  }
}