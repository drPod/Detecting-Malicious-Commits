{
  "cve_id": "CVE-2024-5248",
  "github_data": {
    "repository": "lunary-ai/lunary",
    "fix_commit": "7f24ec1c3588992a07fd70573c43a0897eb523a2",
    "related_commits": [
      "7f24ec1c3588992a07fd70573c43a0897eb523a2"
    ],
    "patch_url": "https://github.com/lunary-ai/lunary/commit/7f24ec1c3588992a07fd70573c43a0897eb523a2.patch",
    "fix_commit_details": {
      "sha": "7f24ec1c3588992a07fd70573c43a0897eb523a2",
      "commit_date": "2024-08-26T14:19:49Z",
      "author": {
        "login": "hughcrt",
        "type": "User",
        "stats": {
          "total_commits": 819,
          "average_weekly_commits": 9.202247191011235,
          "total_additions": 146326,
          "total_deletions": 109724,
          "weeks_active": 64
        }
      },
      "commit_message": {
        "title": "fix: add missing access control (#503)",
        "length": 38,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 58,
        "additions": 42,
        "deletions": 16
      },
      "files": [
        {
          "filename": "packages/backend/src/api/v1/auth/index.ts",
          "status": "modified",
          "additions": 8,
          "deletions": 1,
          "patch": "@@ -331,7 +331,14 @@ auth.post(\"/reset-password\", async (ctx: Context) => {\n   const passwordHash = await hashPassword(password)\n \n   const [user] = await sql`\n-    update account set password_hash = ${passwordHash}, last_login_at = NOW() where email = ${email} returning *\n+    update \n+      account \n+    set \n+      password_hash = ${passwordHash}, \n+      last_login_at = now() \n+    where \n+      email = ${email} \n+    returning *\n   `\n \n   const authToken = await signJWT({"
        },
        {
          "filename": "packages/backend/src/api/v1/users.ts",
          "status": "modified",
          "additions": 20,
          "deletions": 15,
          "patch": "@@ -17,23 +17,27 @@ const users = new Router({\n   prefix: \"/users\",\n })\n \n-users.get(\"/me/org\", async (ctx: Context) => {\n-  const { userId } = ctx.state\n+users.get(\n+  \"/me/org\",\n+  checkAccess(\"teamMembers\", \"read\"),\n+  async (ctx: Context) => {\n+    const { userId } = ctx.state\n \n-  const [user] = await sql`select * from account where id = ${ctx.state.userId}`\n-  const isAdmin = user.role === \"admin\" || user.role === \"owner\"\n+    const [user] =\n+      await sql`select * from account where id = ${ctx.state.userId}`\n+    const isAdmin = user.role === \"admin\" || user.role === \"owner\"\n \n-  const [org] = await sql`\n+    const [org] = await sql`\n       select * from org where id = (select org_id from account where id = ${userId})\n     `\n \n-  if (!org) {\n-    ctx.status = 401\n-    ctx.body = { message: \"Unauthorized\" }\n-    return\n-  }\n+    if (!org) {\n+      ctx.status = 401\n+      ctx.body = { message: \"Unauthorized\" }\n+      return\n+    }\n \n-  const users = await sql`\n+    const users = await sql`\n       select\n         account.id,\n         account.created_at,\n@@ -57,10 +61,11 @@ users.get(\"/me/org\", async (ctx: Context) => {\n         account.name\n     `\n \n-  org.users = users\n-  org.license = ctx.state.license || {}\n-  ctx.body = org\n-})\n+    org.users = users\n+    org.license = ctx.state.license || {}\n+    ctx.body = org\n+  },\n+)\n \n users.get(\"/me\", async (ctx: Context) => {\n   const { userId } = ctx.state"
        },
        {
          "filename": "packages/shared/access-control/roles.ts",
          "status": "modified",
          "additions": 14,
          "deletions": 0,
          "patch": "@@ -402,6 +402,13 @@ export const roles: Record<\n         list: true,\n         run: true,\n       },\n+      teamMembers: {\n+        create: false,\n+        read: true,\n+        update: false,\n+        delete: false,\n+        list: true,\n+      },\n       projects: {\n         read: true,\n         list: true,\n@@ -413,6 +420,13 @@ export const roles: Record<\n     name: \"Billing\",\n     description: \"Manage billing settings and invoices\",\n     permissions: {\n+      teamMembers: {\n+        create: false,\n+        read: true,\n+        update: false,\n+        delete: false,\n+        list: true,\n+      },\n       billing: {\n         create: false,\n         read: true,"
        }
      ],
      "file_patterns": {
        "security_files": 1,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 3,
        "max_directory_depth": 6
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "a4c1a889ecc4329f4b8fc976904d08cd57636546",
            "date": "2025-01-13T15:25:14Z",
            "author_login": "hughcrt"
          },
          {
            "sha": "2447a7cc873d1f96fcc150a00f3d46ff13f4964c",
            "date": "2025-01-12T16:53:00Z",
            "author_login": "hughcrt"
          },
          {
            "sha": "a3211170ffe39424c54a102d4afa27cec99c362d",
            "date": "2025-01-12T16:48:23Z",
            "author_login": "hughcrt"
          },
          {
            "sha": "ea73f8db2ec427defadb4d70c56ebfc65964b677",
            "date": "2025-01-11T00:32:52Z",
            "author_login": "hughcrt"
          },
          {
            "sha": "32974c788404aa69fd55709231e8834777dee7ab",
            "date": "2025-01-10T22:45:01Z",
            "author_login": "hughcrt"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 6.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N",
    "cwe_id": "CWE-862",
    "description": "In lunary-ai/lunary version 1.2.5, an improper access control vulnerability exists due to a missing permission check in the `GET /v1/users/me/org` endpoint. The platform's role definitions restrict the `Prompt Editor` role to prompt management and project viewing/listing capabilities, explicitly excluding access to user information. However, the endpoint fails to enforce this restriction, allowing users with the `Prompt Editor` role to access the full list of users in the organization. This vulnerability allows unauthorized access to sensitive user information, violating the intended access controls.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-06-06T19:16:06.917",
    "last_modified": "2024-11-21T09:47:16.293",
    "fix_date": "2024-08-26T14:19:49Z"
  },
  "references": [
    {
      "url": "https://github.com/lunary-ai/lunary/commit/7f24ec1c3588992a07fd70573c43a0897eb523a2",
      "source": "security@huntr.dev",
      "tags": []
    },
    {
      "url": "https://huntr.com/bounties/4ec75087-5630-4813-952b-88ccabe6d117",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://huntr.com/bounties/4ec75087-5630-4813-952b-88ccabe6d117",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:26.351334",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "lunary",
    "owner": "lunary-ai",
    "created_at": "2023-05-12T10:03:05Z",
    "updated_at": "2025-01-13T15:25:18Z",
    "pushed_at": "2025-01-13T15:25:16Z",
    "size": 5319,
    "stars": 1133,
    "forks": 139,
    "open_issues": 0,
    "watchers": 1133,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "llm-1533-allow-filtering-by-feedback-in-thread-and-trace-page",
      "llm-1666-improve-exports-for-traces-enable-export-for-threads",
      "llm-1708-when-clicking-on-a-trace-row-theres-a-quick-render-bug-that",
      "llm-1711-save-row-sorting-in-views",
      "llm-1906-allow-a-team-owner-to-make-another-user-owner-instead-of",
      "llm-1910-prompts-settings-bug",
      "llm-1911-invite-button-doesnt-show-a-success-notification",
      "llm-1922-button-next-to-metadata-that-redirects-to-search",
      "llm-1939-integer-out-of-range-error-on-lunary-app",
      "llm-1942-implement-streaming-from-database-for-csvjsonl-exports",
      "llm-1966-long-project-names-are-croped-in-project-drowndopre",
      "llm-2101-sign-in-with-github",
      "main",
      "playwright_test_feedback_comment_dataset_user"
    ],
    "languages": {
      "TypeScript": 1181050,
      "Python": 112937,
      "CSS": 8238,
      "JavaScript": 3378,
      "Shell": 522
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T13:04:58.689247"
  }
}