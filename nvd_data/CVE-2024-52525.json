{
  "cve_id": "CVE-2024-52525",
  "github_data": {
    "repository": "nextcloud/server",
    "fix_commit": "d25a0a2896a2a981939cacb8ee0d555feef22b3b",
    "related_commits": [
      "d25a0a2896a2a981939cacb8ee0d555feef22b3b"
    ],
    "patch_url": "https://github.com/nextcloud/server/commit/d25a0a2896a2a981939cacb8ee0d555feef22b3b.patch",
    "fix_commit_details": {
      "sha": "d25a0a2896a2a981939cacb8ee0d555feef22b3b",
      "commit_date": "2024-10-28T12:26:55Z",
      "author": {
        "login": "provokateurin",
        "type": "User",
        "stats": {
          "total_commits": 485,
          "average_weekly_commits": 0.6348167539267016,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 81
        }
      },
      "commit_message": {
        "title": "Merge pull request #48915 from nextcloud/fix/encrypt-decrypt-password",
        "length": 69,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 40,
        "additions": 34,
        "deletions": 6
      },
      "files": [
        {
          "filename": "lib/private/Authentication/LoginCredentials/Store.php",
          "status": "modified",
          "additions": 13,
          "deletions": 2,
          "patch": "@@ -8,13 +8,15 @@\n  */\n namespace OC\\Authentication\\LoginCredentials;\n \n+use Exception;\n use OC\\Authentication\\Exceptions\\PasswordlessTokenException;\n use OC\\Authentication\\Token\\IProvider;\n use OCP\\Authentication\\Exceptions\\CredentialsUnavailableException;\n use OCP\\Authentication\\Exceptions\\InvalidTokenException;\n use OCP\\Authentication\\LoginCredentials\\ICredentials;\n use OCP\\Authentication\\LoginCredentials\\IStore;\n use OCP\\ISession;\n+use OCP\\Security\\ICrypto;\n use OCP\\Session\\Exceptions\\SessionNotAvailableException;\n use OCP\\Util;\n use Psr\\Log\\LoggerInterface;\n@@ -29,9 +31,12 @@ class Store implements IStore {\n \t/** @var IProvider|null */\n \tprivate $tokenProvider;\n \n-\tpublic function __construct(ISession $session,\n+\tpublic function __construct(\n+\t\tISession $session,\n \t\tLoggerInterface $logger,\n-\t\t?IProvider $tokenProvider = null) {\n+\t\tprivate readonly ICrypto $crypto,\n+\t\t?IProvider $tokenProvider = null,\n+\t) {\n \t\t$this->session = $session;\n \t\t$this->logger = $logger;\n \t\t$this->tokenProvider = $tokenProvider;\n@@ -45,6 +50,7 @@ public function __construct(ISession $session,\n \t * @param array $params\n \t */\n \tpublic function authenticate(array $params) {\n+\t\t$params['password'] = $this->crypto->encrypt((string)$params['password']);\n \t\t$this->session->set('login_credentials', json_encode($params));\n \t}\n \n@@ -91,6 +97,11 @@ public function getLoginCredentials(): ICredentials {\n \t\tif ($trySession && $this->session->exists('login_credentials')) {\n \t\t\t/** @var array $creds */\n \t\t\t$creds = json_decode($this->session->get('login_credentials'), true);\n+\t\t\ttry {\n+\t\t\t\t$creds['password'] = $this->crypto->decrypt($creds['password']);\n+\t\t\t} catch (Exception $e) {\n+\t\t\t\t//decryption failed, continue with old password as it is\n+\t\t\t}\n \t\t\treturn new Credentials(\n \t\t\t\t$creds['uid'],\n \t\t\t\t$creds['loginName'] ?? $this->session->get('loginname') ?? $creds['uid'], // Pre 20 didn't have a loginName property, hence fall back to the session value and then to the UID"
        },
        {
          "filename": "lib/private/Server.php",
          "status": "modified",
          "additions": 2,
          "deletions": 1,
          "patch": "@@ -451,7 +451,8 @@ public function __construct($webRoot, \\OC\\Config $config) {\n \t\t\t\t$tokenProvider = null;\n \t\t\t}\n \t\t\t$logger = $c->get(LoggerInterface::class);\n-\t\t\treturn new Store($session, $logger, $tokenProvider);\n+\t\t\t$crypto = $c->get(ICrypto::class);\n+\t\t\treturn new Store($session, $logger, $crypto, $tokenProvider);\n \t\t});\n \t\t$this->registerAlias(IStore::class, Store::class);\n \t\t$this->registerAlias(IProvider::class, Authentication\\Token\\Manager::class);"
        },
        {
          "filename": "tests/lib/Authentication/LoginCredentials/StoreTest.php",
          "status": "modified",
          "additions": 19,
          "deletions": 3,
          "patch": "@@ -15,6 +15,7 @@\n use OC\\Authentication\\Token\\IToken;\n use OCP\\Authentication\\Exceptions\\CredentialsUnavailableException;\n use OCP\\ISession;\n+use OCP\\Security\\ICrypto;\n use OCP\\Session\\Exceptions\\SessionNotAvailableException;\n use Psr\\Log\\LoggerInterface;\n use Test\\TestCase;\n@@ -29,6 +30,8 @@ class StoreTest extends TestCase {\n \n \t/** @var LoggerInterface|\\PHPUnit\\Framework\\MockObject\\MockObject */\n \tprivate $logger;\n+\t/** @var ICrypto|\\PHPUnit\\Framework\\MockObject\\MockObject */\n+\tprivate $crypto;\n \n \t/** @var Store */\n \tprivate $store;\n@@ -39,20 +42,24 @@ protected function setUp(): void {\n \t\t$this->session = $this->createMock(ISession::class);\n \t\t$this->tokenProvider = $this->createMock(IProvider::class);\n \t\t$this->logger = $this->createMock(LoggerInterface::class);\n+\t\t$this->crypto = $this->createMock(ICrypto::class);\n \n-\t\t$this->store = new Store($this->session, $this->logger, $this->tokenProvider);\n+\t\t$this->store = new Store($this->session, $this->logger, $this->crypto, $this->tokenProvider);\n \t}\n \n \tpublic function testAuthenticate(): void {\n \t\t$params = [\n \t\t\t'run' => true,\n \t\t\t'uid' => 'user123',\n-\t\t\t'password' => 123456,\n+\t\t\t'password' => '123456',\n \t\t];\n \n \t\t$this->session->expects($this->once())\n \t\t\t->method('set')\n \t\t\t->with($this->equalTo('login_credentials'), $this->equalTo(json_encode($params)));\n+\t\t$this->crypto->expects($this->once())\n+\t\t\t->method('encrypt')\n+\t\t\t->willReturn('123456');\n \n \t\t$this->store->authenticate($params);\n \t}\n@@ -65,7 +72,7 @@ public function testSetSession(): void {\n \t}\n \n \tpublic function testGetLoginCredentialsNoTokenProvider(): void {\n-\t\t$this->store = new Store($this->session, $this->logger, null);\n+\t\t$this->store = new Store($this->session, $this->logger, $this->crypto, null);\n \n \t\t$this->expectException(CredentialsUnavailableException::class);\n \n@@ -139,6 +146,9 @@ public function testGetLoginCredentialsPartialCredentialsAndSessionName(): void\n \t\t\t->method('exists')\n \t\t\t->with($this->equalTo('login_credentials'))\n \t\t\t->willReturn(true);\n+\t\t$this->crypto->expects($this->once())\n+\t\t\t->method('decrypt')\n+\t\t\t->willReturn($password);\n \t\t$this->session->expects($this->exactly(2))\n \t\t\t->method('get')\n \t\t\t->willReturnMap([\n@@ -176,6 +186,9 @@ public function testGetLoginCredentialsPartialCredentials(): void {\n \t\t\t->method('exists')\n \t\t\t->with($this->equalTo('login_credentials'))\n \t\t\t->willReturn(true);\n+\t\t$this->crypto->expects($this->once())\n+\t\t\t->method('decrypt')\n+\t\t\t->willReturn($password);\n \t\t$this->session->expects($this->exactly(2))\n \t\t\t->method('get')\n \t\t\t->willReturnMap([\n@@ -214,6 +227,9 @@ public function testGetLoginCredentialsInvalidTokenLoginCredentials(): void {\n \t\t\t->method('exists')\n \t\t\t->with($this->equalTo('login_credentials'))\n \t\t\t->willReturn(true);\n+\t\t$this->crypto->expects($this->once())\n+\t\t\t->method('decrypt')\n+\t\t\t->willReturn($password);\n \t\t$this->session->expects($this->once())\n \t\t\t->method('get')\n \t\t\t->with($this->equalTo('login_credentials'))"
        }
      ],
      "file_patterns": {
        "security_files": 2,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 3,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "dd36163bb030efbc2772f0cc7bb350dd6a7d1070",
            "date": "2025-01-14T16:42:35Z",
            "author_login": "Pytal"
          },
          {
            "sha": "93a64d67b58c4def5281c62e97760ae191fd664e",
            "date": "2025-01-14T16:12:36Z",
            "author_login": "ArtificialOwl"
          },
          {
            "sha": "f44f122456205975f3080028b13a7151e815d6bc",
            "date": "2025-01-14T15:42:15Z",
            "author_login": "skjnldsv"
          },
          {
            "sha": "ce5cbd8d364d44a424401d46506c1e007ab3eb6f",
            "date": "2025-01-14T15:25:36Z",
            "author_login": "skjnldsv"
          },
          {
            "sha": "a9a43f3df4f2e56f4d95c62a4577ea2ff663cc19",
            "date": "2025-01-06T07:24:56Z",
            "author_login": "provokateurin"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 1.8,
    "cvss_vector": "CVSS:3.1/AV:P/AC:H/PR:H/UI:R/S:C/C:L/I:N/A:N",
    "cwe_id": "CWE-312",
    "description": "Nextcloud Server is a self hosted personal cloud system. Under certain conditions the password of a user was stored unencrypted in the session data. The session data is encrypted before being saved in the session storage (Redis or disk), but it would allow a malicious process that gains access to the memory of the PHP process, to get access to the cleartext password of the user. It is recommended that the Nextcloud Server is upgraded to 28.0.12, 29.0.9 or 30.0.2.",
    "attack_vector": "PHYSICAL",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2024-11-15T17:15:23.150",
    "last_modified": "2024-11-18T17:11:56.587",
    "fix_date": "2024-10-28T12:26:55Z"
  },
  "references": [
    {
      "url": "https://github.com/nextcloud/security-advisories/security/advisories/GHSA-w7v5-mgxm-v6gm",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/nextcloud/server/commit/d25a0a2896a2a981939cacb8ee0d555feef22b3b",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/nextcloud/server/pull/48915",
      "source": "security-advisories@github.com",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:09:29.311053",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "server",
    "owner": "nextcloud",
    "created_at": "2016-06-02T07:44:14Z",
    "updated_at": "2025-01-14T12:13:57Z",
    "pushed_at": "2025-01-14T12:17:20Z",
    "size": 4884750,
    "stars": 27939,
    "forks": 4113,
    "open_issues": 2572,
    "watchers": 27939,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "PHP": 22391764,
      "JavaScript": 14448704,
      "Vue": 1226343,
      "TypeScript": 861776,
      "Gherkin": 433358,
      "SCSS": 158244,
      "Shell": 81434,
      "HTML": 64175,
      "CSS": 25415,
      "Handlebars": 3817,
      "Dockerfile": 2908,
      "Makefile": 1649
    },
    "commit_activity": {
      "total_commits_last_year": 6549,
      "avg_commits_per_week": 125.9423076923077,
      "days_active_last_year": 359
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "agpl-3.0"
    },
    "collected_at": "2025-01-14T13:06:55.727793"
  }
}