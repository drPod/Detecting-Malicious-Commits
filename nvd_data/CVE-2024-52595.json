{
  "cve_id": "CVE-2024-52595",
  "github_data": {
    "repository": "fedora-python/lxml_html_clean",
    "fix_commit": "c5d816f86eb3707d72a8ecf5f3823e0daa1b3808",
    "related_commits": [
      "c5d816f86eb3707d72a8ecf5f3823e0daa1b3808"
    ],
    "patch_url": "https://github.com/fedora-python/lxml_html_clean/commit/c5d816f86eb3707d72a8ecf5f3823e0daa1b3808.patch",
    "fix_commit_details": {
      "sha": "c5d816f86eb3707d72a8ecf5f3823e0daa1b3808",
      "commit_date": "2024-11-12T12:18:24Z",
      "author": {
        "login": "frenzymadness",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Scan for JS code also in CSS comments",
        "length": 310,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 50,
        "additions": 36,
        "deletions": 14
      },
      "files": [
        {
          "filename": "lxml_html_clean/clean.py",
          "status": "modified",
          "additions": 19,
          "deletions": 14,
          "patch": "@@ -581,22 +581,27 @@ def _has_sneaky_javascript(self, style):\n         that and remove only the Javascript from the style; this catches\n         more sneaky attempts.\n         \"\"\"\n-        style = self._substitute_comments('', style)\n-        style = style.replace('\\\\', '')\n         style = _substitute_whitespace('', style)\n         style = style.lower()\n-        if _has_javascript_scheme(style):\n-            return True\n-        if 'expression(' in style:\n-            return True\n-        if '@import' in style:\n-            return True\n-        if '</noscript' in style:\n-            # e.g. '<noscript><style><a title=\"</noscript><img src=x onerror=alert(1)>\">'\n-            return True\n-        if _looks_like_tag_content(style):\n-            # e.g. '<math><style><img src=x onerror=alert(1)></style></math>'\n-            return True\n+\n+        for with_comments in True, False:\n+            if not with_comments:\n+                style = self._substitute_comments('', style)\n+\n+            style = style.replace('\\\\', '')\n+\n+            if _has_javascript_scheme(style):\n+                return True\n+            if 'expression(' in style:\n+                return True\n+            if '@import' in style:\n+                return True\n+            if '</noscript' in style:\n+                # e.g. '<noscript><style><a title=\"</noscript><img src=x onerror=alert(1)>\">'\n+                return True\n+            if _looks_like_tag_content(style):\n+                # e.g. '<math><style><img src=x onerror=alert(1)></style></math>'\n+                return True\n         return False\n \n     def clean_html(self, html):"
        },
        {
          "filename": "tests/test_clean.py",
          "status": "modified",
          "additions": 17,
          "deletions": 0,
          "patch": "@@ -127,6 +127,23 @@ def test_sneaky_js_in_math_style(self):\n             b'<math><style>/* deleted */</style></math>',\n             lxml.html.tostring(clean_html(s)))\n \n+    def test_sneaky_js_in_style_comment_math_svg(self):\n+        for tag in \"svg\", \"math\":\n+            html = f'<{tag}><style>/*<img src onerror=alert(origin)>*/'\n+            s = lxml.html.fragment_fromstring(html)\n+\n+            self.assertEqual(\n+                f'<{tag}><style>/* deleted */</style></{tag}>'.encode(),\n+                lxml.html.tostring(clean_html(s)))\n+\n+    def test_sneaky_js_in_style_comment_noscript(self):\n+        html = '<noscript><style>/*</noscript><img src onerror=alert(origin)>*/'\n+        s = lxml.html.fragment_fromstring(html)\n+\n+        self.assertEqual(\n+            b'<noscript><style>/* deleted */</style></noscript>',\n+            lxml.html.tostring(clean_html(s)))\n+\n     def test_sneaky_import_in_style(self):\n         # Prevent \"@@importimport\" -> \"@import\" replacement etc.\n         style_codes = ["
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "b8a21a2f33540e058e1438622f542591bb9bac8d",
            "date": "2024-11-15T06:18:51Z",
            "author_login": "frenzymadness"
          },
          {
            "sha": "60d1f79b180b4c140eb744d3d7fb04be260ab0a1",
            "date": "2024-11-14T21:28:12Z",
            "author_login": "hroncok"
          },
          {
            "sha": "a0744252196ea31dfa0edeb92e3bd45d048a7beb",
            "date": "2024-11-13T09:27:32Z",
            "author_login": "frenzymadness"
          },
          {
            "sha": "90bcfa8a8b5272b990238f03950d4c1584572f09",
            "date": "2024-11-12T12:20:12Z",
            "author_login": "frenzymadness"
          },
          {
            "sha": "3b644e989d56378150d96871ce0f612753466521",
            "date": "2024-11-12T12:18:24Z",
            "author_login": "frenzymadness"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.7,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:L/A:H",
    "cwe_id": "CWE-79",
    "description": "lxml_html_clean is a project for HTML cleaning functionalities copied from `lxml.html.clean`. Prior to version 0.4.0, the HTML Parser in lxml does not properly handle context-switching for special HTML tags such as `<svg>`, `<math>` and `<noscript>`. This behavior deviates from how web browsers parse and interpret such tags. Specifically, content in CSS comments is ignored by lxml_html_clean but may be interpreted differently by web browsers, enabling malicious scripts to bypass the cleaning process. This vulnerability could lead to Cross-Site Scripting (XSS) attacks, compromising the security of users relying on lxml_html_clean in default configuration for sanitizing untrusted HTML content. Users employing the HTML cleaner in a security-sensitive context should upgrade to lxml 0.4.0, which addresses this issue. As a temporary mitigation, users can configure lxml_html_clean with the following settings to prevent the exploitation of this vulnerability. Via `remove_tags`, one may specify tags to remove - their content is moved to their parents' tags. Via `kill_tags`, one may specify tags to be removed completely. Via `allow_tags`, one may restrict the set of permissible tags, excluding context-switching tags like `<svg>`, `<math>` and `<noscript>`.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2024-11-19T22:15:21.120",
    "last_modified": "2024-11-25T14:27:38.087",
    "fix_date": "2024-11-12T12:18:24Z"
  },
  "references": [
    {
      "url": "https://github.com/fedora-python/lxml_html_clean/commit/c5d816f86eb3707d72a8ecf5f3823e0daa1b3808",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/fedora-python/lxml_html_clean/pull/19",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/fedora-python/lxml_html_clean/security/advisories/GHSA-5jfw-gq64-q45f",
      "source": "security-advisories@github.com",
      "tags": [
        "Mitigation",
        "Vendor Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:09:31.268999",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "lxml_html_clean",
    "owner": "fedora-python",
    "created_at": "2023-10-23T11:26:16Z",
    "updated_at": "2024-12-03T13:00:58Z",
    "pushed_at": "2024-11-15T06:19:14Z",
    "size": 170,
    "stars": 5,
    "forks": 4,
    "open_issues": 0,
    "watchers": 5,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "Python": 50560
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "bsd-3-clause"
    },
    "collected_at": "2025-01-14T14:21:24.605197"
  }
}