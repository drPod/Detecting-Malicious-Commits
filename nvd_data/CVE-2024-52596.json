{
  "cve_id": "CVE-2024-52596",
  "github_data": {
    "repository": "simplesamlphp/xml-common",
    "fix_commit": "fa4ade391c3194466acf5fbfd5d2ecdbf5e831f5",
    "related_commits": [
      "fa4ade391c3194466acf5fbfd5d2ecdbf5e831f5"
    ],
    "patch_url": "https://github.com/simplesamlphp/xml-common/commit/fa4ade391c3194466acf5fbfd5d2ecdbf5e831f5.patch",
    "fix_commit_details": {
      "sha": "fa4ade391c3194466acf5fbfd5d2ecdbf5e831f5",
      "commit_date": "2024-12-01T22:18:45Z",
      "author": {
        "login": "tvdijen",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Merge commit from fork",
        "length": 75,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 63,
        "additions": 47,
        "deletions": 16
      },
      "files": [
        {
          "filename": "src/DOMDocumentFactory.php",
          "status": "modified",
          "additions": 34,
          "deletions": 16,
          "patch": "@@ -5,15 +5,16 @@\n namespace SimpleSAML\\XML;\n \n use DOMDocument;\n-use RuntimeException;\n use SimpleSAML\\Assert\\Assert;\n use SimpleSAML\\XML\\Exception\\IOException;\n+use SimpleSAML\\XML\\Exception\\RuntimeException;\n use SimpleSAML\\XML\\Exception\\UnparseableXMLException;\n \n-use function defined;\n use function file_get_contents;\n+use function func_num_args;\n use function libxml_clear_errors;\n use function libxml_get_last_error;\n+use function libxml_set_external_entity_loader;\n use function libxml_use_internal_errors;\n use function sprintf;\n \n@@ -22,25 +23,41 @@\n  */\n final class DOMDocumentFactory\n {\n+    /**\n+     * @var non-negative-int\n+     * TODO: Add LIBXML_NO_XXE to the defaults when PHP 8.4.0 + libxml 2.13.0 become generally available\n+     */\n+    public const DEFAULT_OPTIONS = LIBXML_COMPACT | LIBXML_NONET | LIBXML_NSCLEAN;\n+\n+\n     /**\n      * @param string $xml\n-     * @param non-empty-string $xml\n+     * @param non-negative-int $options\n      *\n      * @return \\DOMDocument\n      */\n-    public static function fromString(string $xml): DOMDocument\n-    {\n+    public static function fromString(\n+        string $xml,\n+        int $options = self::DEFAULT_OPTIONS,\n+    ): DOMDocument {\n+        libxml_set_external_entity_loader(null);\n         Assert::notWhitespaceOnly($xml);\n+        Assert::notRegex(\n+            $xml,\n+            '/<(\\s*)!(\\s*)DOCTYPE/',\n+            'Dangerous XML detected, DOCTYPE nodes are not allowed in the XML body',\n+            RuntimeException::class,\n+        );\n \n         $internalErrors = libxml_use_internal_errors(true);\n         libxml_clear_errors();\n \n-        $domDocument = self::create();\n-        $options = LIBXML_DTDLOAD | LIBXML_DTDATTR | LIBXML_NONET | LIBXML_PARSEHUGE | LIBXML_NSCLEAN;\n-        if (defined('LIBXML_COMPACT')) {\n-            $options |= LIBXML_COMPACT;\n+        // If LIBXML_NO_XXE is available and option not set\n+        if (func_num_args() === 1 && defined('LIBXML_NO_XXE')) {\n+            $options != LIBXML_NO_XXE;\n         }\n \n+        $domDocument = self::create();\n         $loaded = $domDocument->loadXML($xml, $options);\n \n         libxml_use_internal_errors($internalErrors);\n@@ -55,11 +72,11 @@ public static function fromString(string $xml): DOMDocument\n         libxml_clear_errors();\n \n         foreach ($domDocument->childNodes as $child) {\n-            if ($child->nodeType === XML_DOCUMENT_TYPE_NODE) {\n-                throw new RuntimeException(\n-                    'Dangerous XML detected, DOCTYPE nodes are not allowed in the XML body',\n-                );\n-            }\n+            Assert::false(\n+                $child->nodeType === XML_DOCUMENT_TYPE_NODE,\n+                'Dangerous XML detected, DOCTYPE nodes are not allowed in the XML body',\n+                RuntimeException::class,\n+            );\n         }\n \n         return $domDocument;\n@@ -68,10 +85,11 @@ public static function fromString(string $xml): DOMDocument\n \n     /**\n      * @param string $file\n+     * @param non-negative-int $options\n      *\n      * @return \\DOMDocument\n      */\n-    public static function fromFile(string $file): DOMDocument\n+    public static function fromFile(string $file, int $options = self::DEFAULT_OPTIONS): DOMDocument\n     {\n         error_clear_last();\n         $xml = @file_get_contents($file);\n@@ -83,7 +101,7 @@ public static function fromFile(string $file): DOMDocument\n         }\n \n         Assert::notWhitespaceOnly($xml, sprintf('File \"%s\" does not have content', $file), RuntimeException::class);\n-        return static::fromString($xml);\n+        return (func_num_args() === 1) ? static::fromString($xml) : static::fromString($xml, $options);\n     }\n \n "
        },
        {
          "filename": "tests/XML/DOMDocumentFactoryTest.php",
          "status": "modified",
          "additions": 13,
          "deletions": 0,
          "patch": "@@ -84,6 +84,19 @@ public function testStringThatContainsDocTypeIsNotAccepted(): void\n     }\n \n \n+    public function testStringThatContainsDocTypeIsNotAccepted2(): void\n+    {\n+        $xml = '<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n+               <!DOCTYPE foo [<!ENTITY % exfiltrate SYSTEM \"file://dev/random\">%exfiltrate;]>\n+               <foo>y</foo>';\n+        $this->expectException(RuntimeException::class);\n+        $this->expectExceptionMessage(\n+            'Dangerous XML detected, DOCTYPE nodes are not allowed in the XML body',\n+        );\n+        DOMDocumentFactory::fromString($xml);\n+    }\n+\n+\n     public function testEmptyFileIsNotValid(): void\n     {\n         $file = 'resources/xml/domdocument_empty.xml';"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "0521d7fa82ded0be994cf42e0365a4ac53c95789",
            "date": "2025-01-12T10:09:32Z",
            "author_login": "tvdijen"
          },
          {
            "sha": "ae2a81b383e3fba56a57d4fba84a43e24c5199c5",
            "date": "2025-01-10T12:03:01Z",
            "author_login": "tvdijen"
          },
          {
            "sha": "45dce231835e365930ab102ed59f08415a954d96",
            "date": "2025-01-10T12:01:38Z",
            "author_login": "tvdijen"
          },
          {
            "sha": "3827ea717b3d39bfe60a7fc7b333e49b27402555",
            "date": "2025-01-07T23:31:44Z",
            "author_login": "tvdijen"
          },
          {
            "sha": "553cadf47144890390bfbf937c26a74a2e95b360",
            "date": "2024-12-20T22:40:17Z",
            "author_login": "tvdijen"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-611",
    "description": "SimpleSAMLphp xml-common is a common classes for handling XML-structures. When loading an (untrusted) XML document, for example the SAMLResponse, it's possible to induce an XXE. This vulnerability is fixed in 1.19.0.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2024-12-02T17:15:12.353",
    "last_modified": "2024-12-02T17:15:12.353",
    "fix_date": "2024-12-01T22:18:45Z"
  },
  "references": [
    {
      "url": "https://github.com/simplesamlphp/xml-common/commit/fa4ade391c3194466acf5fbfd5d2ecdbf5e831f5",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/simplesamlphp/xml-common/security/advisories/GHSA-2x65-fpch-2fcm",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://lists.debian.org/debian-lts-announce/2024/12/msg00001.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:09:33.082970",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "xml-common",
    "owner": "simplesamlphp",
    "created_at": "2020-08-28T11:51:06Z",
    "updated_at": "2025-01-12T10:33:27Z",
    "pushed_at": "2025-01-13T22:34:28Z",
    "size": 477,
    "stars": 2,
    "forks": 3,
    "open_issues": 3,
    "watchers": 2,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "PHP": 186697
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "lgpl-2.1"
    },
    "collected_at": "2025-01-14T15:49:36.364956"
  }
}