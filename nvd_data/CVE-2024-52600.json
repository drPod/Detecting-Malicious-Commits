{
  "cve_id": "CVE-2024-52600",
  "github_data": {
    "repository": "statamic/cms",
    "fix_commit": "0c07c10009a2439c8ee56c8faefd1319dc6e388d",
    "related_commits": [
      "0c07c10009a2439c8ee56c8faefd1319dc6e388d",
      "400875b20f40e1343699d536a432a6fc284346da",
      "4cc2c9bd0f39a93b3fc7e9ef0f12792576fd380d"
    ],
    "patch_url": "https://github.com/statamic/cms/commit/0c07c10009a2439c8ee56c8faefd1319dc6e388d.patch",
    "fix_commit_details": {
      "sha": "0c07c10009a2439c8ee56c8faefd1319dc6e388d",
      "commit_date": "2024-11-18T20:51:51Z",
      "author": {
        "login": "jasonvarga",
        "type": "User",
        "stats": {
          "total_commits": 6646,
          "average_weekly_commits": 17.77005347593583,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 330
        }
      },
      "commit_message": {
        "title": "[5.x] Add upload path traversal tests (#11139)",
        "length": 46,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 59,
        "additions": 44,
        "deletions": 15
      },
      "files": [
        {
          "filename": "tests/Feature/Assets/StoreAssetTest.php",
          "status": "modified",
          "additions": 44,
          "deletions": 15,
          "patch": "@@ -5,6 +5,7 @@\n use Illuminate\\Http\\UploadedFile;\n use Illuminate\\Support\\Carbon;\n use Illuminate\\Support\\Facades\\Storage;\n+use PHPUnit\\Framework\\Attributes\\DataProvider;\n use PHPUnit\\Framework\\Attributes\\Test;\n use Statamic\\Assets\\AssetContainer;\n use Statamic\\Facades;\n@@ -37,22 +38,35 @@ public function setUp(): void\n     }\n \n     #[Test]\n-    public function it_uploads_an_asset()\n+    #[DataProvider('uploadProvider')]\n+    public function it_uploads_an_asset($filename, $expected)\n     {\n-        Storage::disk('test')->assertMissing('path/to/test.jpg');\n+        Storage::disk('test')->assertMissing($expected);\n \n         $this\n             ->actingAs($this->userWithPermission())\n-            ->submit()\n-            ->assertOk()\n+            ->submit([\n+                'file' => UploadedFile::fake()->image($filename),\n+            ])\n             ->assertJson([\n                 'data' => [\n-                    'id' => 'test_container::path/to/test.jpg',\n-                    'path' => 'path/to/test.jpg',\n+                    'id' => 'test_container::'.$expected,\n+                    'path' => $expected,\n                 ],\n             ]);\n \n-        Storage::disk('test')->assertExists('path/to/test.jpg');\n+        Storage::disk('test')->assertExists($expected);\n+    }\n+\n+    public static function uploadProvider()\n+    {\n+        return [\n+            'test.jpg' => ['test.jpg', 'path/to/test.jpg'],\n+\n+            // path traversal naughtiness\n+            '../test.jpg urlencoded' => ['%2e%2e%2ftest.jpg', 'path/to/..-test.jpg'],\n+            'foo/../test.jpg urlencoded' => ['foo%2f%2e%2e%2ftest.jpg', 'path/to/foo-..-test.jpg'],\n+        ];\n     }\n \n     #[Test]\n@@ -187,24 +201,39 @@ public function it_can_upload_with_different_filename()\n     }\n \n     #[Test]\n-    public function it_can_upload_to_relative_path()\n+    #[DataProvider('relativePathProvider')]\n+    public function it_can_upload_to_relative_path($filename, $expected)\n     {\n-        Storage::disk('test')->assertMissing('path/to/test.jpg');\n-        Storage::disk('test')->assertMissing('path/to/sub/folder/test.jpg');\n+        Storage::disk('test')->assertMissing('path/to/'.$filename);\n+        Storage::disk('test')->assertMissing($expected);\n \n         $this\n             ->actingAs($this->userWithPermission())\n-            ->submit(['relativePath' => 'sub/folder'])\n+            ->submit([\n+                'relativePath' => 'sub/folder',\n+                'file' => UploadedFile::fake()->image($filename),\n+            ])\n             ->assertOk()\n             ->assertJson([\n                 'data' => [\n-                    'id' => 'test_container::path/to/sub/folder/test.jpg',\n-                    'path' => 'path/to/sub/folder/test.jpg',\n+                    'id' => 'test_container::'.$expected,\n+                    'path' => $expected,\n                 ],\n             ]);\n \n-        Storage::disk('test')->assertMissing('path/to/test.jpg');\n-        Storage::disk('test')->assertExists('path/to/sub/folder/test.jpg');\n+        Storage::disk('test')->assertMissing('path/to/'.$filename);\n+        Storage::disk('test')->assertExists($expected);\n+    }\n+\n+    public static function relativePathProvider()\n+    {\n+        return [\n+            'test.jpg' => ['test.jpg', 'path/to/sub/folder/test.jpg'],\n+\n+            // path traversal naughtiness\n+            '../test.jpg urlencoded' => ['%2e%2e%2ftest.jpg', 'path/to/sub/folder/..-test.jpg'],\n+            'foo/../test.jpg urlencoded' => ['foo%2f%2e%2e%2ftest.jpg', 'path/to/sub/folder/foo-..-test.jpg'],\n+        ];\n     }\n \n     #[Test]"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 1,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "5fa2e186dd75a39e7c889125d0c5bf0e43ac4c29",
            "date": "2025-01-14T15:23:36Z",
            "author_login": "jacksleight"
          },
          {
            "sha": "bcd529b711112f63a32881d3efc05cb3a36a7916",
            "date": "2025-01-08T16:05:07Z",
            "author_login": "edalzell"
          },
          {
            "sha": "8a2ad86a7b7ad8a76c37db3ee3ff71ecbad45627",
            "date": "2025-01-07T20:17:24Z",
            "author_login": "jasonvarga"
          },
          {
            "sha": "f72180818fb199d47794812ac05754ae5cb9ad7c",
            "date": "2025-01-07T20:16:08Z",
            "author_login": "jasonvarga"
          },
          {
            "sha": "b63e958b0fc969608f2762dd4c05a32f9134f5fc",
            "date": "2025-01-07T19:39:50Z",
            "author_login": "edalzell"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 5.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
    "cwe_id": "CWE-22",
    "description": "Statmatic is a Laravel and Git powered content management system (CMS). Prior to version 5.17.0, assets uploaded with appropriately crafted filenames may result in them being placed in a location different than what was configured. The issue affects front-end forms with `assets` fields and other places where assets can be uploaded, although users would need upload permissions anyway. Files can be uploaded so they would be located on the server in a different location, and potentially override existing files. Traversal outside an asset container is not possible. This path traversal vulnerability has been fixed in 5.17.0.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-11-19T17:15:56.030",
    "last_modified": "2024-11-19T21:56:45.533",
    "fix_date": "2024-11-18T20:51:51Z"
  },
  "references": [
    {
      "url": "https://github.com/statamic/cms/commit/0c07c10009a2439c8ee56c8faefd1319dc6e388d",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/statamic/cms/commit/400875b20f40e1343699d536a432a6fc284346da",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/statamic/cms/commit/4cc2c9bd0f39a93b3fc7e9ef0f12792576fd380d",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/statamic/cms/security/advisories/GHSA-p7f6-8mcm-fwv3",
      "source": "security-advisories@github.com",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:09:31.266845",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "cms",
    "owner": "statamic",
    "created_at": "2017-11-21T14:56:36Z",
    "updated_at": "2025-01-14T12:24:05Z",
    "pushed_at": "2025-01-13T22:40:58Z",
    "size": 57524,
    "stars": 4201,
    "forks": 547,
    "open_issues": 270,
    "watchers": 4201,
    "has_security_policy": false,
    "default_branch": "5.x",
    "protected_branches": [
      "3.0",
      "3.1",
      "3.2",
      "3.3",
      "3.4",
      "4.x",
      "5.x",
      "8041-fix-bard-buttons-setting-reorder",
      "add-various-methods-to-base-query-builder",
      "allow-hashes-in-urls",
      "allow-using-variables-in-static-caching-invalidation-rules",
      "ascii-art",
      "bard-allow-source",
      "carbon-3",
      "confirmation-modal-action",
      "customizable-columns-in-asset-browser",
      "deferred-all-augmentation",
      "disable-autocomplete-on-edit-inputs",
      "drop-get-for-field-meta",
      "edalzell-patch-1",
      "ensuring-fields-for-fieldsets",
      "error-indexes",
      "error-solutions-namespace"
    ],
    "languages": {
      "PHP": 11607268,
      "Vue": 1156490,
      "JavaScript": 274768,
      "Blade": 181146,
      "CSS": 142928,
      "Antlers": 43276,
      "HTML": 789,
      "Batchfile": 116
    },
    "commit_activity": {
      "total_commits_last_year": 1452,
      "avg_commits_per_week": 27.923076923076923,
      "days_active_last_year": 225
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T13:48:38.129222"
  }
}