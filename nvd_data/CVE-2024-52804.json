{
  "cve_id": "CVE-2024-52804",
  "github_data": {
    "repository": "tornadoweb/tornado",
    "fix_commit": "d5ba4a1695fbf7c6a3e54313262639b198291533",
    "related_commits": [
      "d5ba4a1695fbf7c6a3e54313262639b198291533"
    ],
    "patch_url": "https://github.com/tornadoweb/tornado/commit/d5ba4a1695fbf7c6a3e54313262639b198291533.patch",
    "fix_commit_details": {
      "sha": "d5ba4a1695fbf7c6a3e54313262639b198291533",
      "commit_date": "2024-11-21T19:48:05Z",
      "author": {
        "login": "bdarnell",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "httputil: Fix quadratic performance of cookie parsing",
        "length": 476,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 84,
        "additions": 56,
        "deletions": 28
      },
      "files": [
        {
          "filename": "tornado/httputil.py",
          "status": "modified",
          "additions": 10,
          "deletions": 28,
          "patch": "@@ -1057,15 +1057,20 @@ def qs_to_qsl(qs: Dict[str, List[AnyStr]]) -> Iterable[Tuple[str, AnyStr]]:\n             yield (k, v)\n \n \n-_OctalPatt = re.compile(r\"\\\\[0-3][0-7][0-7]\")\n-_QuotePatt = re.compile(r\"[\\\\].\")\n-_nulljoin = \"\".join\n+_unquote_sub = re.compile(r\"\\\\(?:([0-3][0-7][0-7])|(.))\").sub\n+\n+\n+def _unquote_replace(m: re.Match) -> str:\n+    if m[1]:\n+        return chr(int(m[1], 8))\n+    else:\n+        return m[2]\n \n \n def _unquote_cookie(s: str) -> str:\n     \"\"\"Handle double quotes and escaping in cookie values.\n \n-    This method is copied verbatim from the Python 3.5 standard\n+    This method is copied verbatim from the Python 3.13 standard\n     library (http.cookies._unquote) so we don't have to depend on\n     non-public interfaces.\n     \"\"\"\n@@ -1086,30 +1091,7 @@ def _unquote_cookie(s: str) -> str:\n     #    \\012 --> \\n\n     #    \\\"   --> \"\n     #\n-    i = 0\n-    n = len(s)\n-    res = []\n-    while 0 <= i < n:\n-        o_match = _OctalPatt.search(s, i)\n-        q_match = _QuotePatt.search(s, i)\n-        if not o_match and not q_match:  # Neither matched\n-            res.append(s[i:])\n-            break\n-        # else:\n-        j = k = -1\n-        if o_match:\n-            j = o_match.start(0)\n-        if q_match:\n-            k = q_match.start(0)\n-        if q_match and (not o_match or k < j):  # QuotePatt matched\n-            res.append(s[i:k])\n-            res.append(s[k + 1])\n-            i = k + 2\n-        else:  # OctalPatt matched\n-            res.append(s[i:j])\n-            res.append(chr(int(s[j + 1 : j + 4], 8)))\n-            i = j + 4\n-    return _nulljoin(res)\n+    return _unquote_sub(_unquote_replace, s)\n \n \n def parse_cookie(cookie: str) -> Dict[str, str]:"
        },
        {
          "filename": "tornado/test/httputil_test.py",
          "status": "modified",
          "additions": 46,
          "deletions": 0,
          "patch": "@@ -560,3 +560,49 @@ def test_invalid_cookies(self):\n         self.assertEqual(\n             parse_cookie(\"  =  b  ;  ;  =  ;   c  =  ;  \"), {\"\": \"b\", \"c\": \"\"}\n         )\n+\n+    def test_unquote(self):\n+        # Copied from\n+        # https://github.com/python/cpython/blob/dc7a2b6522ec7af41282bc34f405bee9b306d611/Lib/test/test_http_cookies.py#L62\n+        cases = [\n+            (r'a=\"b=\\\"\"', 'b=\"'),\n+            (r'a=\"b=\\\\\"', \"b=\\\\\"),\n+            (r'a=\"b=\\=\"', \"b==\"),\n+            (r'a=\"b=\\n\"', \"b=n\"),\n+            (r'a=\"b=\\042\"', 'b=\"'),\n+            (r'a=\"b=\\134\"', \"b=\\\\\"),\n+            (r'a=\"b=\\377\"', \"b=\\xff\"),\n+            (r'a=\"b=\\400\"', \"b=400\"),\n+            (r'a=\"b=\\42\"', \"b=42\"),\n+            (r'a=\"b=\\\\042\"', \"b=\\\\042\"),\n+            (r'a=\"b=\\\\134\"', \"b=\\\\134\"),\n+            (r'a=\"b=\\\\\\\"\"', 'b=\\\\\"'),\n+            (r'a=\"b=\\\\\\042\"', 'b=\\\\\"'),\n+            (r'a=\"b=\\134\\\"\"', 'b=\\\\\"'),\n+            (r'a=\"b=\\134\\042\"', 'b=\\\\\"'),\n+        ]\n+        for encoded, decoded in cases:\n+            with self.subTest(encoded):\n+                c = parse_cookie(encoded)\n+                self.assertEqual(c[\"a\"], decoded)\n+\n+    def test_unquote_large(self):\n+        # Adapted from\n+        # https://github.com/python/cpython/blob/dc7a2b6522ec7af41282bc34f405bee9b306d611/Lib/test/test_http_cookies.py#L87\n+        # Modified from that test because we handle semicolons differently from the stdlib.\n+        #\n+        # This is a performance regression test: prior to improvements in Tornado 6.4.2, this test\n+        # would take over a minute with n= 100k. Now it runs in tens of milliseconds.\n+        n = 100000\n+        for encoded in r\"\\\\\", r\"\\134\":\n+            with self.subTest(encoded):\n+                start = time.time()\n+                data = 'a=\"b=' + encoded * n + '\"'\n+                value = parse_cookie(data)[\"a\"]\n+                end = time.time()\n+                self.assertEqual(value[:3], \"b=\\\\\")\n+                self.assertEqual(value[-3:], \"\\\\\\\\\\\\\")\n+                self.assertEqual(len(value), n + 2)\n+\n+                # Very loose performance check to avoid false positives\n+                self.assertLess(end - start, 1, \"Test took too long\")"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "73a87a546229625a2c801847b182f447154c157d",
            "date": "2025-01-06T14:51:06Z",
            "author_login": "bdarnell"
          },
          {
            "sha": "c47d7d1fef86be7232d3f41386079465e3e244f5",
            "date": "2024-12-24T00:24:14Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "0a39ba8b6ac0beb48a3244098cfa72ce1f59f215",
            "date": "2024-12-05T21:34:29Z",
            "author_login": "bdarnell"
          },
          {
            "sha": "f4b3e9600e925ab57fc7b6ce250af175aa3e1356",
            "date": "2024-11-21T19:48:05Z",
            "author_login": "bdarnell"
          },
          {
            "sha": "f62afc31bc8908a2c9d0c21f74bc1447781e4782",
            "date": "2024-11-21T20:31:17Z",
            "author_login": "bdarnell"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-400",
    "description": "Tornado is a Python web framework and asynchronous networking library. The algorithm used for parsing HTTP cookies in Tornado versions prior to 6.4.2 sometimes has quadratic complexity, leading to excessive CPU consumption when parsing maliciously-crafted cookie headers. This parsing occurs in the event loop thread and may block the processing of other requests. Version 6.4.2 fixes the issue.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-11-22T16:15:34.417",
    "last_modified": "2024-11-22T16:15:34.417",
    "fix_date": "2024-11-21T19:48:05Z"
  },
  "references": [
    {
      "url": "https://github.com/advisories/GHSA-7pwv-g7hj-39pr",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/tornadoweb/tornado/commit/d5ba4a1695fbf7c6a3e54313262639b198291533",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/tornadoweb/tornado/security/advisories/GHSA-8w49-h785-mj3c",
      "source": "security-advisories@github.com",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:09:31.281441",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "tornado",
    "owner": "tornadoweb",
    "created_at": "2009-09-09T04:55:16Z",
    "updated_at": "2025-01-14T02:37:49Z",
    "pushed_at": "2025-01-13T18:30:52Z",
    "size": 10446,
    "stars": 21805,
    "forks": 5520,
    "open_issues": 227,
    "watchers": 21805,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "Python": 1600155,
      "Shell": 4070,
      "C": 1524,
      "Cython": 780,
      "HTML": 25
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T22:27:00.925923"
  }
}