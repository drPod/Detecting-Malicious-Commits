{
  "cve_id": "CVE-2024-53981",
  "github_data": {
    "repository": "Kludex/python-multipart",
    "fix_commit": "c4fe4d3cebc08c660e57dd709af1ffa7059b3177",
    "related_commits": [
      "c4fe4d3cebc08c660e57dd709af1ffa7059b3177"
    ],
    "patch_url": "https://github.com/Kludex/python-multipart/commit/c4fe4d3cebc08c660e57dd709af1ffa7059b3177.patch",
    "fix_commit_details": {
      "sha": "c4fe4d3cebc08c660e57dd709af1ffa7059b3177",
      "commit_date": "2024-12-01T06:59:34Z",
      "author": {
        "login": "Kludex",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Don't warn when CRLF is found after last boundary (#193)",
        "length": 56,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 38,
        "additions": 36,
        "deletions": 2
      },
      "files": [
        {
          "filename": "CHANGELOG.md",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -1,5 +1,9 @@\n # Changelog\n \n+## 0.0.19 (2024-11-30)\n+\n+* Don't warn when CRLF is found after last boundary on `MultipartParser` [#193](https://github.com/Kludex/python-multipart/pull/193).\n+\n ## 0.0.18 (2024-11-28)\n \n * Hard break if found data after last boundary on `MultipartParser` [#189](https://github.com/Kludex/python-multipart/pull/189)."
        },
        {
          "filename": "python_multipart/__init__.py",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -2,7 +2,7 @@\n __author__ = \"Andrew Dunham\"\n __license__ = \"Apache\"\n __copyright__ = \"Copyright (c) 2012-2013, Andrew Dunham\"\n-__version__ = \"0.0.18\"\n+__version__ = \"0.0.19\"\n \n from .multipart import (\n     BaseParser,"
        },
        {
          "filename": "python_multipart/multipart.py",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -1397,6 +1397,10 @@ def data_callback(name: CallbackName, end_i: int, remaining: bool = False) -> No\n                     i -= 1\n \n             elif state == MultipartState.END:\n+                # Don't do anything if chunk ends with CRLF.\n+                if c == CR and i + 1 < length and data[i + 1] == LF:\n+                    i += 2\n+                    continue\n                 # Skip data after the last boundary.\n                 self.logger.warning(\"Skipping data after last boundary\")\n                 i = length"
        },
        {
          "filename": "scripts/check",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -6,5 +6,5 @@ SOURCE_FILES=\"python_multipart multipart tests\"\n \n uvx ruff format --check --diff $SOURCE_FILES\n uvx ruff check $SOURCE_FILES\n-uvx --with types-PyYAML mypy $SOURCE_FILES\n+uv run mypy $SOURCE_FILES\n uvx check-sdist"
        },
        {
          "filename": "tests/test_multipart.py",
          "status": "modified",
          "additions": 26,
          "deletions": 0,
          "patch": "@@ -1,5 +1,6 @@\n from __future__ import annotations\n \n+import logging\n import os\n import random\n import sys\n@@ -9,6 +10,7 @@\n from typing import TYPE_CHECKING, cast\n from unittest.mock import Mock\n \n+import pytest\n import yaml\n \n from python_multipart.decoders import Base64Decoder, QuotedPrintableDecoder\n@@ -1248,6 +1250,30 @@ def on_file(f: FileProtocol) -> None:\n         f = FormParser(\"multipart/form-data\", on_field=Mock(), on_file=on_file, boundary=\"boundary\")\n         f.write(data.encode(\"latin-1\"))\n \n+    @pytest.fixture(autouse=True)\n+    def inject_fixtures(self, caplog: pytest.LogCaptureFixture) -> None:\n+        self._caplog = caplog\n+\n+    def test_multipart_parser_data_end_with_crlf_without_warnings(self) -> None:\n+        \"\"\"This test makes sure that the parser does not handle when the data ends with a CRLF.\"\"\"\n+        data = (\n+            \"--boundary\\r\\n\"\n+            'Content-Disposition: form-data; name=\"file\"; filename=\"filename.txt\"\\r\\n'\n+            \"Content-Type: text/plain\\r\\n\\r\\n\"\n+            \"hello\\r\\n\"\n+            \"--boundary--\\r\\n\"\n+        )\n+\n+        files: list[File] = []\n+\n+        def on_file(f: FileProtocol) -> None:\n+            files.append(cast(File, f))\n+\n+        f = FormParser(\"multipart/form-data\", on_field=Mock(), on_file=on_file, boundary=\"boundary\")\n+        with self._caplog.at_level(logging.WARNING):\n+            f.write(data.encode(\"latin-1\"))\n+            assert len(self._caplog.records) == 0\n+\n     def test_max_size_multipart(self) -> None:\n         # Load test data.\n         test_file = \"single_field_single_file.http\""
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 4,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "3e909f52a774365b8817a52d4312db4ba8061d07",
            "date": "2025-01-01T08:47:37Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "b083cef4d6c68cf036bae1d9c68a986c6e1e3cc4",
            "date": "2024-12-16T19:44:25Z",
            "author_login": "Kludex"
          },
          {
            "sha": "04d3cf5ef58c8ac8d28d36ea410fba131f5eff3f",
            "date": "2024-12-11T16:42:43Z",
            "author_login": "jhnstrk"
          },
          {
            "sha": "f1c5a2821b24786f418ae535aa2fbb5ae4c60d6c",
            "date": "2024-12-06T07:35:43Z",
            "author_login": "Mr-Sunglasses"
          },
          {
            "sha": "4bffa0c7c6c836ace85486b95c1e144e340059d8",
            "date": "2024-12-06T07:15:24Z",
            "author_login": "yecril23pl"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-770",
    "description": "python-multipart is a streaming multipart parser for Python. When parsing form data, python-multipart skips line breaks (CR \\r or LF \\n) in front of the first boundary and any tailing bytes after the last boundary. This happens one byte at a time and emits a log event each time, which may cause excessive logging for certain inputs. An attacker could abuse this by sending a malicious request with lots of data before the first or after the last boundary, causing high CPU load and stalling the processing thread for a significant amount of time. In case of ASGI application, this could stall the event loop and prevent other requests from being processed, resulting in a denial of service (DoS). This vulnerability is fixed in 0.0.18.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-12-02T16:15:14.457",
    "last_modified": "2024-12-02T16:15:14.457",
    "fix_date": "2024-12-01T06:59:34Z"
  },
  "references": [
    {
      "url": "https://github.com/Kludex/python-multipart/commit/c4fe4d3cebc08c660e57dd709af1ffa7059b3177",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/Kludex/python-multipart/security/advisories/GHSA-59g5-xgcq-4qw3",
      "source": "security-advisories@github.com",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:09:33.082573",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "python-multipart",
    "owner": "Kludex",
    "created_at": "2013-03-25T23:50:12Z",
    "updated_at": "2025-01-11T20:12:31Z",
    "pushed_at": "2025-01-01T08:47:40Z",
    "size": 1037,
    "stars": 367,
    "forks": 63,
    "open_issues": 17,
    "watchers": 367,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "Python": 140938,
      "Shell": 476
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T17:45:06.929139"
  }
}