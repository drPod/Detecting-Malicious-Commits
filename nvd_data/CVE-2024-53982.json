{
  "cve_id": "CVE-2024-53982",
  "github_data": {
    "repository": "ZOO-Project/ZOO-Project",
    "fix_commit": "641cb18fec58de43a3468f314e5f8808c560e6d9",
    "related_commits": [
      "641cb18fec58de43a3468f314e5f8808c560e6d9"
    ],
    "patch_url": "https://github.com/ZOO-Project/ZOO-Project/commit/641cb18fec58de43a3468f314e5f8808c560e6d9.patch",
    "fix_commit_details": {
      "sha": "641cb18fec58de43a3468f314e5f8808c560e6d9",
      "commit_date": "2024-11-22T09:25:45Z",
      "author": {
        "login": "gfenoy",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Secure the way files are accessed",
        "length": 167,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 53,
        "additions": 45,
        "deletions": 8
      },
      "files": [
        {
          "filename": "docs/kernel/configuration.rst",
          "status": "modified",
          "additions": 3,
          "deletions": 0,
          "patch": "@@ -107,6 +107,9 @@ The main.cfg ``[main]`` section parameters are explained bellow.\n   section, then the response codes list given will be considered as\n   valid response code when downloading input data (sample value:\n   ``404,400``).\n+* ``allowedPaths``: if this parameter is present, then the files using the\n+  file:// protocol will be checked against the list of allowed paths. The \n+  list of allowed paths should be separated by a coma.\n \n .. warning:: \n   The ``libPath`` parameter is currently only recognized by services implemented"
        },
        {
          "filename": "zoo-project/zoo-kernel/caching.c",
          "status": "modified",
          "additions": 25,
          "deletions": 0,
          "patch": "@@ -670,6 +670,31 @@ int runHttpRequests(maps** m,maps** inputs,HINTERNET* hInternet,map** error){\n   return hasAFailure;\n }\n \n+/**\n+ * Ensure that the file:// protocol is used only for allowed paths.\n+ *\n+ * @param pmsConf the maps containing the settings of the main.cfg file\n+ * @param pccPath the path to check\n+ * @return true if the path is accessible, false otherwise\n+ */\n+bool isAllowedPath(maps* pmsConf,const char* pccPath){\n+  map* pmAccessiblePaths=getMapFromMaps(pmsConf,\"main\",\"allowedPaths\");\n+  if(pmAccessiblePaths!=NULL){\n+    char *pcTmp=zStrdup(pmAccessiblePaths->value);\n+    char *pcToken, *pcSavePtr;\n+    pcToken=strtok_r(pcTmp,\",\",&pcSavePtr);\n+    while(pcToken!=NULL){\n+      if(strstr(pccPath,pcToken)!=NULL){\n+        free(pcTmp);\n+        return true;\n+      }\n+      pcToken=strtok_r(NULL,\",\",&pcSavePtr);\n+    }\n+    free(pcTmp);\n+  }\n+  return false;\n+}\n+\n /**\n  * Add a request in the download queue\n  *"
        },
        {
          "filename": "zoo-project/zoo-kernel/caching.h",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -31,6 +31,7 @@ extern \"C\" {\n \n   void addToCache(maps*,char*,char*,char*,int,char*,size_t);\n   char* isInCache(maps*,char*);\n+  bool isAllowedPath(maps*,const char*);\n   int runHttpRequests(maps**,maps**,HINTERNET*,map**);\n   void addRequestToQueue(maps**,HINTERNET*,const char*,bool);\n   int loadRemoteFile(maps**,map**,HINTERNET*,char*);"
        },
        {
          "filename": "zoo-project/zoo-kernel/request_parser.c",
          "status": "modified",
          "additions": 16,
          "deletions": 8,
          "patch": "@@ -305,15 +305,23 @@ int kvpParseInputs(maps** pmsConf,service* s,map *request_inputs,maps** request_\n             addToMap (tmpmaps->content, tmpn1, tmpv1 + 1);\n           else if (tmpv1 != NULL){\n             char *tmpx2 = url_decode (tmpv1 + 1);\n-            if (strncasecmp (tmpx2, \"http://\", 7) != 0 &&\n-              strncasecmp (tmpx2, \"ftp://\", 6) != 0 &&\n-              strncasecmp (tmpx2, \"https://\", 8) != 0 &&\n-              strncasecmp (tmpx2, \"file://\", 7) != 0){\n+            bool bIsAllowedPath = isAllowedPath(*pmsConf,tmpx2);\n+            if ((strncasecmp (tmpx2, \"http://\", 7) != 0 &&\n+                strncasecmp (tmpx2, \"ftp://\", 6) != 0 &&\n+                strncasecmp (tmpx2, \"https://\", 8) != 0 &&\n+                strncasecmp (tmpx2, \"file://\", 7) != 0)\n+                ||\n+                (strncasecmp (tmpx2, \"file://\", 7) == 0 && !bIsAllowedPath)){\n               char emsg[1024];\n-              sprintf (emsg,\n-                _\n-                (\"Unable to find a valid protocol to download the remote file %s\"),\n-                tmpv1 + 1);\n+              if(strncasecmp (tmpx2, \"file://\", 7) == 0 && !bIsAllowedPath){\n+                sprintf (emsg,\n+                  _(\"Access to the provided file URL is not allowed %s\"),\n+                  tmpv1 + 1);\n+              }else{\n+                sprintf (emsg,\n+                  _(\"Unable to find a valid protocol to download the remote file %s\"),\n+                  tmpv1 + 1);\n+              }\n               free (inputs_as_text);\n               free(cursor_input);\n               free(tmp);"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 1,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "83f593861bbadd1a969c5ab33bda3f264cc6a1c9",
            "date": "2025-01-06T12:58:42Z",
            "author_login": "gfenoy"
          },
          {
            "sha": "a67f47faa12525e58f7a72d217e494ccce87dc3e",
            "date": "2025-01-04T13:48:05Z",
            "author_login": "gfenoy"
          },
          {
            "sha": "a35806892067801e8d81c3cef6e83875f9902f15",
            "date": "2025-01-04T11:13:13Z",
            "author_login": "gfenoy"
          },
          {
            "sha": "228b32857b3af9f79c1ef3d2fa37c8eb4c506e5d",
            "date": "2025-01-03T15:43:27Z",
            "author_login": "gfenoy"
          },
          {
            "sha": "e884f0258791ac146c518bd28fb4d5256e950eb4",
            "date": "2025-01-03T12:32:27Z",
            "author_login": "gfenoy"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-434",
    "description": "ZOO-Project is a C-based WPS (Web Processing Service) implementation. A path traversal vulnerability was discovered in Zoo-Project Echo example. The Echo example available by default in Zoo installs implements file caching, which can be controlled by user-given parameters. No input validation is performed in this parameter, which allows an attacker to fully control the file which is returned in the response. Patch was committed in November 22nd, 2024.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2024-12-04T23:15:05.943",
    "last_modified": "2024-12-04T23:15:05.943",
    "fix_date": "2024-11-22T09:25:45Z"
  },
  "references": [
    {
      "url": "https://github.com/ZOO-Project/ZOO-Project/commit/641cb18fec58de43a3468f314e5f8808c560e6d9",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/ZOO-Project/ZOO-Project/security/advisories/GHSA-93rv-45r8-h5j4",
      "source": "security-advisories@github.com",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:09:33.092481",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "ZOO-Project",
    "owner": "ZOO-Project",
    "created_at": "2021-03-31T12:36:57Z",
    "updated_at": "2025-01-06T12:58:46Z",
    "pushed_at": "2025-01-06T12:58:42Z",
    "size": 60255,
    "stars": 28,
    "forks": 31,
    "open_issues": 29,
    "watchers": 28,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "C": 2058069,
      "JavaScript": 260697,
      "Python": 156660,
      "HTML": 136228,
      "Dockerfile": 69256,
      "C++": 60697,
      "M4": 44845,
      "Yacc": 32199,
      "Makefile": 25398,
      "PLpgSQL": 23813,
      "Shell": 23636,
      "XSLT": 14211,
      "Mustache": 7419,
      "C#": 6333,
      "Lex": 5535,
      "R": 4760,
      "Java": 3749,
      "Fortran": 1431,
      "PHP": 1430,
      "Perl": 1302,
      "CSS": 1144,
      "CMake": 399
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T19:52:51.809965"
  }
}