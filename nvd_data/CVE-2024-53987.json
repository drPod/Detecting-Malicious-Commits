{
  "cve_id": "CVE-2024-53987",
  "github_data": {
    "repository": "rails/rails-html-sanitizer",
    "fix_commit": "f02ffbb8465e73920b6de0da940f5530f855965e",
    "related_commits": [
      "f02ffbb8465e73920b6de0da940f5530f855965e"
    ],
    "patch_url": "https://github.com/rails/rails-html-sanitizer/commit/f02ffbb8465e73920b6de0da940f5530f855965e.patch",
    "fix_commit_details": {
      "sha": "f02ffbb8465e73920b6de0da940f5530f855965e",
      "commit_date": "2024-11-30T21:16:09Z",
      "author": {
        "login": "flavorjones",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "fix: Namespace confusion when disallowing 'svg' or 'math'",
        "length": 239,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 70,
        "additions": 68,
        "deletions": 2
      },
      "files": [
        {
          "filename": "lib/rails/html/scrubbers.rb",
          "status": "modified",
          "additions": 5,
          "deletions": 1,
          "patch": "@@ -101,7 +101,11 @@ def keep_node?(node)\n         end\n \n         def scrub_node(node)\n-          node.before(node.children) unless prune # strip\n+          # If a node has a namespace, then it's a tag in either a `math` or `svg` foreign context,\n+          # and we should always prune it to avoid namespace confusion and mutation XSS vectors.\n+          unless prune || node.namespace\n+            node.before(node.children)\n+          end\n           node.remove\n         end\n "
        },
        {
          "filename": "test/sanitizer_test.rb",
          "status": "modified",
          "additions": 63,
          "deletions": 1,
          "patch": "@@ -918,7 +918,7 @@ def test_combination_of_svg_and_style_with_script_payload\n         # libxml2\n         \"<svg><style>&lt;script&gt;alert(1)&lt;/script&gt;</style></svg>\",\n         # libgumbo\n-        \"<svg><style>alert(1)</style></svg>\"\n+        \"<svg><style></style></svg>\",\n       ]\n \n       assert_includes(acceptable_results, actual)\n@@ -976,6 +976,48 @@ def test_combination_of_svg_and_style_with_img_payload_2\n       assert_includes(acceptable_results, actual)\n     end\n \n+    def test_combination_of_style_and_disallowed_svg_with_script_payload\n+      # https://hackerone.com/reports/2519936\n+      input, tags = \"<svg><style><style class='</style><script>alert(1)</script>'>\", [\"style\"]\n+      actual = safe_list_sanitize(input, tags: tags)\n+      acceptable_results = [\n+        # libxml2\n+        \"<style>&lt;style class='</style>alert(1)'&gt;\",\n+        # libgumbo\n+        \"\",\n+      ]\n+\n+      assert_includes(acceptable_results, actual)\n+    end\n+\n+    def test_combination_of_style_and_disallowed_math_with_script_payload\n+      # https://hackerone.com/reports/2519936\n+      input, tags = \"<math><style><style class='</style><script>alert(1)</script>'>\", [\"style\"]\n+      actual = safe_list_sanitize(input, tags: tags)\n+      acceptable_results = [\n+        # libxml2\n+        \"<style>&lt;style class='</style>alert(1)'&gt;\",\n+        # libgumbo\n+        \"\",\n+      ]\n+\n+      assert_includes(acceptable_results, actual)\n+    end\n+\n+    def test_math_with_disallowed_mtext_and_img_payload\n+      # https://hackerone.com/reports/2519941\n+      input, tags = \"<math><mtext><table><mglyph><style><img src=: onerror=alert(1)>\", [\"math\", \"style\"]\n+      actual = safe_list_sanitize(input, tags: tags)\n+      acceptable_results = [\n+        # libxml2\n+        \"<math><style>&lt;img src=: onerror=alert(1)&gt;</style></math>\",\n+        # libgumbo\n+        \"<math></math>\",\n+      ]\n+\n+      assert_includes(acceptable_results, actual)\n+    end\n+\n     def test_should_sanitize_illegal_style_properties\n       raw      = %(display:block; position:absolute; left:0; top:0; width:100%; height:100%; z-index:1; background-color:black; background-image:url(http://www.ragingplatypus.com/i/cam-full.jpg); background-x:center; background-y:center; background-repeat:repeat;)\n       expected = %(display:block;width:100%;height:100%;background-color:black;background-x:center;background-y:center;)\n@@ -1075,5 +1117,25 @@ class HTML4SafeListSanitizerTest < Minitest::Test\n   class HTML5SafeListSanitizerTest < Minitest::Test\n     @module_under_test = Rails::HTML5\n     include SafeListSanitizerTest\n+\n+    def test_should_not_be_vulnerable_to_ns_confusion_2519936\n+      # https://hackerone.com/reports/2519936\n+      input = \"<math><style><style class='</style><script>alert(1)</script>'>\"\n+      result = Rails::HTML5::SafeListSanitizer.new.sanitize(input, tags: [\"style\"])\n+      browser = Nokogiri::HTML5::Document.parse(result)\n+      xss = browser.at_xpath(\"//script\")\n+\n+      assert_nil(xss)\n+    end\n+\n+    def test_should_not_be_vulnerable_to_ns_confusion_2519941\n+      # https://hackerone.com/reports/2519941\n+      input = \"<math><mtext><table><mglyph><style><img src=: onerror=alert(1)>\"\n+      result = Rails::HTML5::SafeListSanitizer.new.sanitize(input, tags: %w(math style))\n+      browser = Nokogiri::HTML5::Document.parse(result)\n+      xss = browser.at_xpath(\"//img/@onerror\")\n+\n+      assert_nil(xss)\n+    end\n   end if loofah_html5_support?\n end"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "08e39d99059c1179efd5e50fdb3bc60a262973f8",
            "date": "2024-12-12T21:05:18Z",
            "author_login": "flavorjones"
          },
          {
            "sha": "694d98195b90ba29e57ed650dac43e2b026582b2",
            "date": "2024-12-12T20:54:53Z",
            "author_login": "flavorjones"
          },
          {
            "sha": "9a1e3761b42f0f7f49021a185df480dc4aabf423",
            "date": "2024-12-12T20:45:59Z",
            "author_login": "flavorjones"
          },
          {
            "sha": "9d5b3989a661b82c3407bb38594345b5f363da2b",
            "date": "2024-12-04T13:36:24Z",
            "author_login": "flavorjones"
          },
          {
            "sha": "5e96b19bbb934284e675109851bd82429622bb6e",
            "date": "2024-12-02T20:50:58Z",
            "author_login": "flavorjones"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-79",
    "description": "rails-html-sanitizer is responsible for sanitizing HTML fragments in Rails applications. There is a possible XSS vulnerability with certain configurations of Rails::HTML::Sanitizer 1.6.0 when used with Rails >= 7.1.0. A possible XSS vulnerability with certain configurations of Rails::HTML::Sanitizer may allow an attacker to inject content if HTML5 sanitization is enabled and the application developer has overridden the sanitizer's allowed tags where the \"style\" element is explicitly allowed and the \"svg\" or \"math\" element is not allowed. This vulnerability is fixed in 1.6.1.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2024-12-02T22:15:11.473",
    "last_modified": "2024-12-02T22:15:11.473",
    "fix_date": "2024-11-30T21:16:09Z"
  },
  "references": [
    {
      "url": "https://github.com/rails/rails-html-sanitizer/commit/f02ffbb8465e73920b6de0da940f5530f855965e",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/rails/rails-html-sanitizer/security/advisories/GHSA-2x5m-9ch4-qgrr",
      "source": "security-advisories@github.com",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:09:33.085768",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "rails-html-sanitizer",
    "owner": "rails",
    "created_at": "2013-09-25T00:54:20Z",
    "updated_at": "2024-12-17T07:47:06Z",
    "pushed_at": "2024-12-12T21:05:43Z",
    "size": 367,
    "stars": 310,
    "forks": 83,
    "open_issues": 8,
    "watchers": 310,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main"
    ],
    "languages": {
      "Ruby": 84358
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T13:21:15.645659"
  }
}