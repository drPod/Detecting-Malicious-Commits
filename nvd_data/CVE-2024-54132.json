{
  "cve_id": "CVE-2024-54132",
  "github_data": {
    "repository": "cli/cli",
    "fix_commit": "1136764c369aaf0cae4ec2ee09dc35d871076932",
    "related_commits": [
      "1136764c369aaf0cae4ec2ee09dc35d871076932"
    ],
    "patch_url": "https://github.com/cli/cli/commit/1136764c369aaf0cae4ec2ee09dc35d871076932.patch",
    "fix_commit_details": {
      "sha": "1136764c369aaf0cae4ec2ee09dc35d871076932",
      "commit_date": "2024-12-03T23:12:05Z",
      "author": {
        "login": "jtmcg",
        "type": "User",
        "stats": {
          "total_commits": 95,
          "average_weekly_commits": 0.34296028880866425,
          "total_additions": 2256,
          "total_deletions": 1204,
          "weeks_active": 15
        }
      },
      "commit_message": {
        "title": "Merge commit from fork",
        "length": 31,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 758,
        "additions": 627,
        "deletions": 131
      },
      "files": [
        {
          "filename": "pkg/cmd/run/download/download.go",
          "status": "modified",
          "additions": 29,
          "deletions": 2,
          "patch": "@@ -151,8 +151,10 @@ func runDownload(opts *DownloadOptions) error {\n \topts.IO.StartProgressIndicator()\n \tdefer opts.IO.StopProgressIndicator()\n \n-\t// track downloaded artifacts and avoid re-downloading any of the same name\n+\t// track downloaded artifacts and avoid re-downloading any of the same name, isolate if multiple artifacts\n \tdownloaded := set.NewStringSet()\n+\tisolateArtifacts := isolateArtifacts(wantNames, wantPatterns)\n+\n \tfor _, a := range artifacts {\n \t\tif a.Expired {\n \t\t\tcontinue\n@@ -165,10 +167,16 @@ func runDownload(opts *DownloadOptions) error {\n \t\t\t\tcontinue\n \t\t\t}\n \t\t}\n+\n \t\tdestDir := opts.DestinationDir\n-\t\tif len(wantPatterns) != 0 || len(wantNames) != 1 {\n+\t\tif isolateArtifacts {\n \t\t\tdestDir = filepath.Join(destDir, a.Name)\n \t\t}\n+\n+\t\tif !filepathDescendsFrom(destDir, opts.DestinationDir) {\n+\t\t\treturn fmt.Errorf(\"error downloading %s: would result in path traversal\", a.Name)\n+\t\t}\n+\n \t\terr := opts.Platform.Download(a.DownloadURL, destDir)\n \t\tif err != nil {\n \t\t\treturn fmt.Errorf(\"error downloading %s: %w\", a.Name, err)\n@@ -183,6 +191,25 @@ func runDownload(opts *DownloadOptions) error {\n \treturn nil\n }\n \n+func isolateArtifacts(wantNames []string, wantPatterns []string) bool {\n+\tif len(wantPatterns) > 0 {\n+\t\t// Patterns can match multiple artifacts\n+\t\treturn true\n+\t}\n+\n+\tif len(wantNames) == 0 {\n+\t\t// All artifacts wanted regardless what they are named\n+\t\treturn true\n+\t}\n+\n+\tif len(wantNames) > 1 {\n+\t\t// Multiple, specific artifacts wanted\n+\t\treturn true\n+\t}\n+\n+\treturn false\n+}\n+\n func matchAnyName(names []string, name string) bool {\n \tfor _, n := range names {\n \t\tif name == n {"
        },
        {
          "filename": "pkg/cmd/run/download/download_test.go",
          "status": "modified",
          "additions": 500,
          "deletions": 123,
          "patch": "@@ -2,8 +2,11 @@ package download\n \n import (\n \t\"bytes\"\n+\t\"errors\"\n+\t\"fmt\"\n \t\"io\"\n \t\"net/http\"\n+\t\"os\"\n \t\"path/filepath\"\n \t\"testing\"\n \n@@ -14,7 +17,6 @@ import (\n \t\"github.com/cli/cli/v2/pkg/iostreams\"\n \t\"github.com/google/shlex\"\n \t\"github.com/stretchr/testify/assert\"\n-\t\"github.com/stretchr/testify/mock\"\n \t\"github.com/stretchr/testify/require\"\n )\n \n@@ -143,159 +145,537 @@ func Test_NewCmdDownload(t *testing.T) {\n \t}\n }\n \n+type testArtifact struct {\n+\tartifact shared.Artifact\n+\tfiles    []string\n+}\n+\n+type fakePlatform struct {\n+\trunArtifacts map[string][]testArtifact\n+}\n+\n+func (f *fakePlatform) List(runID string) ([]shared.Artifact, error) {\n+\tvar runIds []string\n+\tif runID != \"\" {\n+\t\trunIds = []string{runID}\n+\t} else {\n+\t\tfor k := range f.runArtifacts {\n+\t\t\trunIds = append(runIds, k)\n+\t\t}\n+\t}\n+\n+\tvar artifacts []shared.Artifact\n+\tfor _, id := range runIds {\n+\t\tfor _, a := range f.runArtifacts[id] {\n+\t\t\tartifacts = append(artifacts, a.artifact)\n+\t\t}\n+\t}\n+\n+\treturn artifacts, nil\n+}\n+\n+func (f *fakePlatform) Download(url string, dir string) error {\n+\tif err := os.MkdirAll(dir, 0755); err != nil {\n+\t\treturn err\n+\t}\n+\t// Now to be consistent, we find the artifact with the provided URL.\n+\t// It's a bit janky to iterate the runs, to find the right artifact\n+\t// rather than keying directly to it, but it allows the setup of the\n+\t// fake platform to be declarative rather than imperative.\n+\t// Think fakePlatform { artifacts: ... } rather than fakePlatform.makeArtifactAvailable()\n+\tfor _, testArtifacts := range f.runArtifacts {\n+\t\tfor _, testArtifact := range testArtifacts {\n+\t\t\tif testArtifact.artifact.DownloadURL == url {\n+\t\t\t\tfor _, file := range testArtifact.files {\n+\t\t\t\t\tpath := filepath.Join(dir, file)\n+\t\t\t\t\treturn os.WriteFile(path, []byte{}, 0600)\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\treturn errors.New(\"no artifact matches the provided URL\")\n+}\n+\n func Test_runDownload(t *testing.T) {\n \ttests := []struct {\n-\t\tname        string\n-\t\topts        DownloadOptions\n-\t\tmockAPI     func(*mockPlatform)\n-\t\tpromptStubs func(*prompter.MockPrompter)\n-\t\twantErr     string\n+\t\tname          string\n+\t\topts          DownloadOptions\n+\t\tplatform      *fakePlatform\n+\t\tpromptStubs   func(*prompter.MockPrompter)\n+\t\texpectedFiles []string\n+\t\twantErr       string\n \t}{\n \t\t{\n-\t\t\tname: \"download non-expired\",\n+\t\t\tname: \"download non-expired to relative directory\",\n \t\t\topts: DownloadOptions{\n \t\t\t\tRunID:          \"2345\",\n \t\t\t\tDestinationDir: \"./tmp\",\n-\t\t\t\tNames:          []string(nil),\n \t\t\t},\n-\t\t\tmockAPI: func(p *mockPlatform) {\n-\t\t\t\tp.On(\"List\", \"2345\").Return([]shared.Artifact{\n-\t\t\t\t\t{\n-\t\t\t\t\t\tName:        \"artifact-1\",\n-\t\t\t\t\t\tDownloadURL: \"http://download.com/artifact1.zip\",\n-\t\t\t\t\t\tExpired:     false,\n-\t\t\t\t\t},\n-\t\t\t\t\t{\n-\t\t\t\t\t\tName:        \"expired-artifact\",\n-\t\t\t\t\t\tDownloadURL: \"http://download.com/expired.zip\",\n-\t\t\t\t\t\tExpired:     true,\n+\t\t\tplatform: &fakePlatform{\n+\t\t\t\trunArtifacts: map[string][]testArtifact{\n+\t\t\t\t\t\"2345\": {\n+\t\t\t\t\t\t{\n+\t\t\t\t\t\t\tartifact: shared.Artifact{\n+\t\t\t\t\t\t\t\tName:        \"artifact-1\",\n+\t\t\t\t\t\t\t\tDownloadURL: \"http://download.com/artifact1.zip\",\n+\t\t\t\t\t\t\t\tExpired:     false,\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t\tfiles: []string{\n+\t\t\t\t\t\t\t\t\"artifact-1-file\",\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t},\n+\t\t\t\t\t\t{\n+\t\t\t\t\t\t\tartifact: shared.Artifact{\n+\t\t\t\t\t\t\t\tName:        \"expired-artifact\",\n+\t\t\t\t\t\t\t\tDownloadURL: \"http://download.com/expired.zip\",\n+\t\t\t\t\t\t\t\tExpired:     true,\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t\tfiles: []string{\n+\t\t\t\t\t\t\t\t\"expired\",\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t},\n+\t\t\t\t\t\t{\n+\t\t\t\t\t\t\tartifact: shared.Artifact{\n+\t\t\t\t\t\t\t\tName:        \"artifact-2\",\n+\t\t\t\t\t\t\t\tDownloadURL: \"http://download.com/artifact2.zip\",\n+\t\t\t\t\t\t\t\tExpired:     false,\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t\tfiles: []string{\n+\t\t\t\t\t\t\t\t\"artifact-2-file\",\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t},\n \t\t\t\t\t},\n-\t\t\t\t\t{\n-\t\t\t\t\t\tName:        \"artifact-2\",\n-\t\t\t\t\t\tDownloadURL: \"http://download.com/artifact2.zip\",\n-\t\t\t\t\t\tExpired:     false,\n-\t\t\t\t\t},\n-\t\t\t\t}, nil)\n-\t\t\t\tp.On(\"Download\", \"http://download.com/artifact1.zip\", filepath.FromSlash(\"tmp/artifact-1\")).Return(nil)\n-\t\t\t\tp.On(\"Download\", \"http://download.com/artifact2.zip\", filepath.FromSlash(\"tmp/artifact-2\")).Return(nil)\n+\t\t\t\t},\n+\t\t\t},\n+\t\t\texpectedFiles: []string{\n+\t\t\t\tfilepath.Join(\"artifact-1\", \"artifact-1-file\"),\n+\t\t\t\tfilepath.Join(\"artifact-2\", \"artifact-2-file\"),\n \t\t\t},\n \t\t},\n \t\t{\n-\t\t\tname: \"no valid artifacts\",\n+\t\t\tname: \"download non-expired to absolute directory\",\n \t\t\topts: DownloadOptions{\n \t\t\t\tRunID:          \"2345\",\n-\t\t\t\tDestinationDir: \".\",\n-\t\t\t\tNames:          []string(nil),\n+\t\t\t\tDestinationDir: \"/tmp\",\n \t\t\t},\n-\t\t\tmockAPI: func(p *mockPlatform) {\n-\t\t\t\tp.On(\"List\", \"2345\").Return([]shared.Artifact{\n-\t\t\t\t\t{\n-\t\t\t\t\t\tName:        \"artifact-1\",\n-\t\t\t\t\t\tDownloadURL: \"http://download.com/artifact1.zip\",\n-\t\t\t\t\t\tExpired:     true,\n+\t\t\tplatform: &fakePlatform{\n+\t\t\t\trunArtifacts: map[string][]testArtifact{\n+\t\t\t\t\t\"2345\": {\n+\t\t\t\t\t\t{\n+\t\t\t\t\t\t\tartifact: shared.Artifact{\n+\t\t\t\t\t\t\t\tName:        \"artifact-1\",\n+\t\t\t\t\t\t\t\tDownloadURL: \"http://download.com/artifact1.zip\",\n+\t\t\t\t\t\t\t\tExpired:     false,\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t\tfiles: []string{\n+\t\t\t\t\t\t\t\t\"artifact-1-file\",\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t},\n+\t\t\t\t\t\t{\n+\t\t\t\t\t\t\tartifact: shared.Artifact{\n+\t\t\t\t\t\t\t\tName:        \"expired-artifact\",\n+\t\t\t\t\t\t\t\tDownloadURL: \"http://download.com/expired.zip\",\n+\t\t\t\t\t\t\t\tExpired:     true,\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t\tfiles: []string{\n+\t\t\t\t\t\t\t\t\"expired\",\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t},\n+\t\t\t\t\t\t{\n+\t\t\t\t\t\t\tartifact: shared.Artifact{\n+\t\t\t\t\t\t\t\tName:        \"artifact-2\",\n+\t\t\t\t\t\t\t\tDownloadURL: \"http://download.com/artifact2.zip\",\n+\t\t\t\t\t\t\t\tExpired:     false,\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t\tfiles: []string{\n+\t\t\t\t\t\t\t\t\"artifact-2-file\",\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t},\n \t\t\t\t\t},\n-\t\t\t\t\t{\n-\t\t\t\t\t\tName:        \"artifact-2\",\n-\t\t\t\t\t\tDownloadURL: \"http://download.com/artifact2.zip\",\n-\t\t\t\t\t\tExpired:     true,\n+\t\t\t\t},\n+\t\t\t},\n+\t\t\texpectedFiles: []string{\n+\t\t\t\tfilepath.Join(\"artifact-1\", \"artifact-1-file\"),\n+\t\t\t\tfilepath.Join(\"artifact-2\", \"artifact-2-file\"),\n+\t\t\t},\n+\t\t},\n+\t\t{\n+\t\t\tname: \"all artifacts are expired\",\n+\t\t\topts: DownloadOptions{\n+\t\t\t\tRunID: \"2345\",\n+\t\t\t},\n+\t\t\tplatform: &fakePlatform{\n+\t\t\t\trunArtifacts: map[string][]testArtifact{\n+\t\t\t\t\t\"2345\": {\n+\t\t\t\t\t\t{\n+\t\t\t\t\t\t\tartifact: shared.Artifact{\n+\t\t\t\t\t\t\t\tName:        \"artifact-1\",\n+\t\t\t\t\t\t\t\tDownloadURL: \"http://download.com/artifact1.zip\",\n+\t\t\t\t\t\t\t\tExpired:     true,\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t\tfiles: []string{\n+\t\t\t\t\t\t\t\t\"artifact-1-file\",\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t},\n+\t\t\t\t\t\t{\n+\t\t\t\t\t\t\tartifact: shared.Artifact{\n+\t\t\t\t\t\t\t\tName:        \"artifact-2\",\n+\t\t\t\t\t\t\t\tDownloadURL: \"http://download.com/artifact2.zip\",\n+\t\t\t\t\t\t\t\tExpired:     true,\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t\tfiles: []string{\n+\t\t\t\t\t\t\t\t\"artifact-2-file\",\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t},\n \t\t\t\t\t},\n-\t\t\t\t}, nil)\n+\t\t\t\t},\n \t\t\t},\n-\t\t\twantErr: \"no valid artifacts found to download\",\n+\t\t\texpectedFiles: []string{},\n+\t\t\twantErr:       \"no valid artifacts found to download\",\n \t\t},\n \t\t{\n \t\t\tname: \"no name matches\",\n \t\t\topts: DownloadOptions{\n-\t\t\t\tRunID:          \"2345\",\n-\t\t\t\tDestinationDir: \".\",\n-\t\t\t\tNames:          []string{\"artifact-3\"},\n-\t\t\t},\n-\t\t\tmockAPI: func(p *mockPlatform) {\n-\t\t\t\tp.On(\"List\", \"2345\").Return([]shared.Artifact{\n-\t\t\t\t\t{\n-\t\t\t\t\t\tName:        \"artifact-1\",\n-\t\t\t\t\t\tDownloadURL: \"http://download.com/artifact1.zip\",\n-\t\t\t\t\t\tExpired:     false,\n+\t\t\t\tRunID: \"2345\",\n+\t\t\t\tNames: []string{\"artifact-3\"},\n+\t\t\t},\n+\t\t\tplatform: &fakePlatform{\n+\t\t\t\trunArtifacts: map[string][]testArtifact{\n+\t\t\t\t\t\"2345\": {\n+\t\t\t\t\t\t{\n+\t\t\t\t\t\t\tartifact: shared.Artifact{\n+\t\t\t\t\t\t\t\tName:        \"artifact-1\",\n+\t\t\t\t\t\t\t\tDownloadURL: \"http://download.com/artifact1.zip\",\n+\t\t\t\t\t\t\t\tExpired:     false,\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t\tfiles: []string{\n+\t\t\t\t\t\t\t\t\"artifact-1-file\",\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t},\n+\t\t\t\t\t\t{\n+\t\t\t\t\t\t\tartifact: shared.Artifact{\n+\t\t\t\t\t\t\t\tName:        \"artifact-2\",\n+\t\t\t\t\t\t\t\tDownloadURL: \"http://download.com/artifact2.zip\",\n+\t\t\t\t\t\t\t\tExpired:     false,\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t\tfiles: []string{\n+\t\t\t\t\t\t\t\t\"artifact-2-file\",\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t},\n \t\t\t\t\t},\n-\t\t\t\t\t{\n-\t\t\t\t\t\tName:        \"artifact-2\",\n-\t\t\t\t\t\tDownloadURL: \"http://download.com/artifact2.zip\",\n-\t\t\t\t\t\tExpired:     false,\n+\t\t\t\t},\n+\t\t\t},\n+\t\t\texpectedFiles: []string{},\n+\t\t\twantErr:       \"no artifact matches any of the names or patterns provided\",\n+\t\t},\n+\t\t{\n+\t\t\tname: \"pattern matches\",\n+\t\t\topts: DownloadOptions{\n+\t\t\t\tRunID:        \"2345\",\n+\t\t\t\tFilePatterns: []string{\"artifact-*\"},\n+\t\t\t},\n+\t\t\tplatform: &fakePlatform{\n+\t\t\t\trunArtifacts: map[string][]testArtifact{\n+\t\t\t\t\t\"2345\": {\n+\t\t\t\t\t\t{\n+\t\t\t\t\t\t\tartifact: shared.Artifact{\n+\t\t\t\t\t\t\t\tName:        \"artifact-1\",\n+\t\t\t\t\t\t\t\tDownloadURL: \"http://download.com/artifact1.zip\",\n+\t\t\t\t\t\t\t\tExpired:     false,\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t\tfiles: []string{\n+\t\t\t\t\t\t\t\t\"artifact-1-file\",\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t},\n+\t\t\t\t\t\t{\n+\t\t\t\t\t\t\tartifact: shared.Artifact{\n+\t\t\t\t\t\t\t\tName:        \"non-artifact-2\",\n+\t\t\t\t\t\t\t\tDownloadURL: \"http://download.com/non-artifact-2.zip\",\n+\t\t\t\t\t\t\t\tExpired:     false,\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t\tfiles: []string{\n+\t\t\t\t\t\t\t\t\"non-artifact-2-file\",\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t},\n+\t\t\t\t\t\t{\n+\t\t\t\t\t\t\tartifact: shared.Artifact{\n+\t\t\t\t\t\t\t\tName:        \"artifact-3\",\n+\t\t\t\t\t\t\t\tDownloadURL: \"http://download.com/artifact3.zip\",\n+\t\t\t\t\t\t\t\tExpired:     false,\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t\tfiles: []string{\n+\t\t\t\t\t\t\t\t\"artifact-3-file\",\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t},\n \t\t\t\t\t},\n-\t\t\t\t}, nil)\n+\t\t\t\t},\n+\t\t\t},\n+\t\t\texpectedFiles: []string{\n+\t\t\t\tfilepath.Join(\"artifact-1\", \"artifact-1-file\"),\n+\t\t\t\tfilepath.Join(\"artifact-3\", \"artifact-3-file\"),\n \t\t\t},\n-\t\t\twantErr: \"no artifact matches any of the names or patterns provided\",\n \t\t},\n \t\t{\n \t\t\tname: \"no pattern matches\",\n \t\t\topts: DownloadOptions{\n-\t\t\t\tRunID:          \"2345\",\n-\t\t\t\tDestinationDir: \".\",\n-\t\t\t\tFilePatterns:   []string{\"artifiction-*\"},\n-\t\t\t},\n-\t\t\tmockAPI: func(p *mockPlatform) {\n-\t\t\t\tp.On(\"List\", \"2345\").Return([]shared.Artifact{\n-\t\t\t\t\t{\n-\t\t\t\t\t\tName:        \"artifact-1\",\n-\t\t\t\t\t\tDownloadURL: \"http://download.com/artifact1.zip\",\n-\t\t\t\t\t\tExpired:     false,\n+\t\t\t\tRunID:        \"2345\",\n+\t\t\t\tFilePatterns: []string{\"artifiction-*\"},\n+\t\t\t},\n+\t\t\tplatform: &fakePlatform{\n+\t\t\t\trunArtifacts: map[string][]testArtifact{\n+\t\t\t\t\t\"2345\": {\n+\t\t\t\t\t\t{\n+\t\t\t\t\t\t\tartifact: shared.Artifact{\n+\t\t\t\t\t\t\t\tName:        \"artifact-1\",\n+\t\t\t\t\t\t\t\tDownloadURL: \"http://download.com/artifact1.zip\",\n+\t\t\t\t\t\t\t\tExpired:     false,\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t\tfiles: []string{\n+\t\t\t\t\t\t\t\t\"artifact-1-file\",\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t},\n+\t\t\t\t\t\t{\n+\t\t\t\t\t\t\tartifact: shared.Artifact{\n+\t\t\t\t\t\t\t\tName:        \"artifact-2\",\n+\t\t\t\t\t\t\t\tDownloadURL: \"http://download.com/artifact2.zip\",\n+\t\t\t\t\t\t\t\tExpired:     false,\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t\tfiles: []string{\n+\t\t\t\t\t\t\t\t\"artifact-2-file\",\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t},\n \t\t\t\t\t},\n-\t\t\t\t\t{\n-\t\t\t\t\t\tName:        \"artifact-2\",\n-\t\t\t\t\t\tDownloadURL: \"http://download.com/artifact2.zip\",\n-\t\t\t\t\t\tExpired:     false,\n+\t\t\t\t},\n+\t\t\t},\n+\t\t\texpectedFiles: []string{},\n+\t\t\twantErr:       \"no artifact matches any of the names or patterns provided\",\n+\t\t},\n+\t\t{\n+\t\t\tname: \"want specific single artifact\",\n+\t\t\topts: DownloadOptions{\n+\t\t\t\tRunID: \"2345\",\n+\t\t\t\tNames: []string{\"non-artifact-2\"},\n+\t\t\t},\n+\t\t\tplatform: &fakePlatform{\n+\t\t\t\trunArtifacts: map[string][]testArtifact{\n+\t\t\t\t\t\"2345\": {\n+\t\t\t\t\t\t{\n+\t\t\t\t\t\t\tartifact: shared.Artifact{\n+\t\t\t\t\t\t\t\tName:        \"artifact-1\",\n+\t\t\t\t\t\t\t\tDownloadURL: \"http://download.com/artifact1.zip\",\n+\t\t\t\t\t\t\t\tExpired:     false,\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t\tfiles: []string{\n+\t\t\t\t\t\t\t\t\"artifact-1-file\",\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t},\n+\t\t\t\t\t\t{\n+\t\t\t\t\t\t\tartifact: shared.Artifact{\n+\t\t\t\t\t\t\t\tName:        \"non-artifact-2\",\n+\t\t\t\t\t\t\t\tDownloadURL: \"http://download.com/non-artifact-2.zip\",\n+\t\t\t\t\t\t\t\tExpired:     false,\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t\tfiles: []string{\n+\t\t\t\t\t\t\t\t\"non-artifact-2-file\",\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t},\n+\t\t\t\t\t\t{\n+\t\t\t\t\t\t\tartifact: shared.Artifact{\n+\t\t\t\t\t\t\t\tName:        \"artifact-3\",\n+\t\t\t\t\t\t\t\tDownloadURL: \"http://download.com/artifact3.zip\",\n+\t\t\t\t\t\t\t\tExpired:     false,\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t\tfiles: []string{\n+\t\t\t\t\t\t\t\t\"artifact-3-file\",\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t},\n \t\t\t\t\t},\n-\t\t\t\t}, nil)\n+\t\t\t\t},\n+\t\t\t},\n+\t\t\texpectedFiles: []string{\n+\t\t\t\tfilepath.Join(\"non-artifact-2-file\"),\n \t\t\t},\n-\t\t\twantErr: \"no artifact matches any of the names or patterns provided\",\n \t\t},\n \t\t{\n-\t\t\tname: \"prompt to select artifact\",\n+\t\t\tname: \"want specific multiple artifacts\",\n \t\t\topts: DownloadOptions{\n-\t\t\t\tRunID:          \"\",\n-\t\t\t\tDoPrompt:       true,\n-\t\t\t\tDestinationDir: \".\",\n-\t\t\t\tNames:          []string(nil),\n+\t\t\t\tRunID: \"2345\",\n+\t\t\t\tNames: []string{\"artifact-1\", \"artifact-3\"},\n \t\t\t},\n-\t\t\tmockAPI: func(p *mockPlatform) {\n-\t\t\t\tp.On(\"List\", \"\").Return([]shared.Artifact{\n-\t\t\t\t\t{\n-\t\t\t\t\t\tName:        \"artifact-1\",\n-\t\t\t\t\t\tDownloadURL: \"http://download.com/artifact1.zip\",\n-\t\t\t\t\t\tExpired:     false,\n+\t\t\tplatform: &fakePlatform{\n+\t\t\t\trunArtifacts: map[string][]testArtifact{\n+\t\t\t\t\t\"2345\": {\n+\t\t\t\t\t\t{\n+\t\t\t\t\t\t\tartifact: shared.Artifact{\n+\t\t\t\t\t\t\t\tName:        \"artifact-1\",\n+\t\t\t\t\t\t\t\tDownloadURL: \"http://download.com/artifact1.zip\",\n+\t\t\t\t\t\t\t\tExpired:     false,\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t\tfiles: []string{\n+\t\t\t\t\t\t\t\t\"artifact-1-file\",\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t},\n+\t\t\t\t\t\t{\n+\t\t\t\t\t\t\tartifact: shared.Artifact{\n+\t\t\t\t\t\t\t\tName:        \"non-artifact-2\",\n+\t\t\t\t\t\t\t\tDownloadURL: \"http://download.com/non-artifact-2.zip\",\n+\t\t\t\t\t\t\t\tExpired:     false,\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t\tfiles: []string{\n+\t\t\t\t\t\t\t\t\"non-artifact-2-file\",\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t},\n+\t\t\t\t\t\t{\n+\t\t\t\t\t\t\tartifact: shared.Artifact{\n+\t\t\t\t\t\t\t\tName:        \"artifact-3\",\n+\t\t\t\t\t\t\t\tDownloadURL: \"http://download.com/artifact3.zip\",\n+\t\t\t\t\t\t\t\tExpired:     false,\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t\tfiles: []string{\n+\t\t\t\t\t\t\t\t\"artifact-3-file\",\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t},\n \t\t\t\t\t},\n-\t\t\t\t\t{\n-\t\t\t\t\t\tName:        \"expired-artifact\",\n-\t\t\t\t\t\tDownloadURL: \"http://download.com/expired.zip\",\n-\t\t\t\t\t\tExpired:     true,\n+\t\t\t\t},\n+\t\t\t},\n+\t\t\texpectedFiles: []string{\n+\t\t\t\tfilepath.Join(\"artifact-1\", \"artifact-1-file\"),\n+\t\t\t\tfilepath.Join(\"artifact-3\", \"artifact-3-file\"),\n+\t\t\t},\n+\t\t},\n+\t\t{\n+\t\t\tname: \"avoid redownloading files of the same name\",\n+\t\t\topts: DownloadOptions{\n+\t\t\t\tRunID: \"2345\",\n+\t\t\t},\n+\t\t\tplatform: &fakePlatform{\n+\t\t\t\trunArtifacts: map[string][]testArtifact{\n+\t\t\t\t\t\"2345\": {\n+\t\t\t\t\t\t{\n+\t\t\t\t\t\t\tartifact: shared.Artifact{\n+\t\t\t\t\t\t\t\tName:        \"artifact-1\",\n+\t\t\t\t\t\t\t\tDownloadURL: \"http://download.com/artifact1.zip\",\n+\t\t\t\t\t\t\t\tExpired:     false,\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t\tfiles: []string{\n+\t\t\t\t\t\t\t\t\"artifact-1-file\",\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t},\n+\t\t\t\t\t\t{\n+\t\t\t\t\t\t\tartifact: shared.Artifact{\n+\t\t\t\t\t\t\t\tName:        \"artifact-1\",\n+\t\t\t\t\t\t\t\tDownloadURL: \"http://download.com/artifact2.zip\",\n+\t\t\t\t\t\t\t\tExpired:     false,\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t\tfiles: []string{\n+\t\t\t\t\t\t\t\t\"artifact-2-file\",\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t},\n \t\t\t\t\t},\n-\t\t\t\t\t{\n-\t\t\t\t\t\tName:        \"artifact-2\",\n-\t\t\t\t\t\tDownloadURL: \"http://download.com/artifact2.zip\",\n-\t\t\t\t\t\tExpired:     false,\n+\t\t\t\t},\n+\t\t\t},\n+\t\t\texpectedFiles: []string{\n+\t\t\t\tfilepath.Join(\"artifact-1\", \"artifact-1-file\"),\n+\t\t\t},\n+\t\t},\n+\t\t{\n+\t\t\tname: \"prompt to select artifact\",\n+\t\t\topts: DownloadOptions{\n+\t\t\t\tRunID:    \"\",\n+\t\t\t\tDoPrompt: true,\n+\t\t\t\tNames:    []string(nil),\n+\t\t\t},\n+\t\t\tplatform: &fakePlatform{\n+\t\t\t\trunArtifacts: map[string][]testArtifact{\n+\t\t\t\t\t\"2345\": {\n+\t\t\t\t\t\t{\n+\t\t\t\t\t\t\tartifact: shared.Artifact{\n+\t\t\t\t\t\t\t\tName:        \"artifact-1\",\n+\t\t\t\t\t\t\t\tDownloadURL: \"http://download.com/artifact1.zip\",\n+\t\t\t\t\t\t\t\tExpired:     false,\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t\tfiles: []string{\n+\t\t\t\t\t\t\t\t\"artifact-1-file\",\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t},\n+\t\t\t\t\t\t{\n+\t\t\t\t\t\t\tartifact: shared.Artifact{\n+\t\t\t\t\t\t\t\tName:        \"expired-artifact\",\n+\t\t\t\t\t\t\t\tDownloadURL: \"http://download.com/expired.zip\",\n+\t\t\t\t\t\t\t\tExpired:     true,\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t\tfiles: []string{\n+\t\t\t\t\t\t\t\t\"expired\",\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t},\n \t\t\t\t\t},\n-\t\t\t\t\t{\n-\t\t\t\t\t\tName:        \"artifact-2\",\n-\t\t\t\t\t\tDownloadURL: \"http://download.com/artifact2.also.zip\",\n-\t\t\t\t\t\tExpired:     false,\n+\t\t\t\t\t\"6789\": {\n+\t\t\t\t\t\t{\n+\t\t\t\t\t\t\tartifact: shared.Artifact{\n+\t\t\t\t\t\t\t\tName:        \"artifact-2\",\n+\t\t\t\t\t\t\t\tDownloadURL: \"http://download.com/artifact2.zip\",\n+\t\t\t\t\t\t\t\tExpired:     false,\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t\tfiles: []string{\n+\t\t\t\t\t\t\t\t\"artifact-2-file\",\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t},\n \t\t\t\t\t},\n-\t\t\t\t}, nil)\n-\t\t\t\tp.On(\"Download\", \"http://download.com/artifact2.zip\", \".\").Return(nil)\n+\t\t\t\t},\n \t\t\t},\n \t\t\tpromptStubs: func(pm *prompter.MockPrompter) {\n \t\t\t\tpm.RegisterMultiSelect(\"Select artifacts to download:\", nil, []string{\"artifact-1\", \"artifact-2\"},\n \t\t\t\t\tfunc(_ string, _, opts []string) ([]int, error) {\n-\t\t\t\t\t\treturn []int{1}, nil\n+\t\t\t\t\t\tfor i, o := range opts {\n+\t\t\t\t\t\t\tif o == \"artifact-2\" {\n+\t\t\t\t\t\t\t\treturn []int{i}, nil\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\treturn nil, fmt.Errorf(\"no artifact-2 found in %v\", opts)\n \t\t\t\t\t})\n \t\t\t},\n+\t\t\texpectedFiles: []string{\n+\t\t\t\tfilepath.Join(\"artifact-2-file\"),\n+\t\t\t},\n+\t\t},\n+\t\t{\n+\t\t\tname: \"handling artifact name with path traversal exploit\",\n+\t\t\topts: DownloadOptions{\n+\t\t\t\tRunID: \"2345\",\n+\t\t\t},\n+\t\t\tplatform: &fakePlatform{\n+\t\t\t\trunArtifacts: map[string][]testArtifact{\n+\t\t\t\t\t\"2345\": {\n+\t\t\t\t\t\t{\n+\t\t\t\t\t\t\tartifact: shared.Artifact{\n+\t\t\t\t\t\t\t\tName:        \"..\",\n+\t\t\t\t\t\t\t\tDownloadURL: \"http://download.com/artifact1.zip\",\n+\t\t\t\t\t\t\t\tExpired:     false,\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t\tfiles: []string{\n+\t\t\t\t\t\t\t\t\"etc/passwd\",\n+\t\t\t\t\t\t\t},\n+\t\t\t\t\t\t},\n+\t\t\t\t\t},\n+\t\t\t\t},\n+\t\t\t},\n+\t\t\texpectedFiles: []string{},\n+\t\t\twantErr:       \"error downloading ..: would result in path traversal\",\n \t\t},\n \t}\n \tfor _, tt := range tests {\n \t\tt.Run(tt.name, func(t *testing.T) {\n \t\t\topts := &tt.opts\n+\t\t\tif opts.DestinationDir == \"\" {\n+\t\t\t\topts.DestinationDir = t.TempDir()\n+\t\t\t} else {\n+\t\t\t\topts.DestinationDir = filepath.Join(t.TempDir(), opts.DestinationDir)\n+\t\t\t}\n+\n \t\t\tios, _, stdout, stderr := iostreams.Test()\n \t\t\topts.IO = ios\n-\t\t\topts.Platform = newMockPlatform(t, tt.mockAPI)\n+\t\t\topts.Platform = tt.platform\n \n \t\t\tpm := prompter.NewMockPrompter(t)\n \t\t\topts.Prompter = pm\n@@ -310,34 +690,31 @@ func Test_runDownload(t *testing.T) {\n \t\t\t\trequire.NoError(t, err)\n \t\t\t}\n \n+\t\t\t// Check that the exact number of files exist\n+\t\t\trequire.Equal(t, len(tt.expectedFiles), countFilesInDirRecursively(t, opts.DestinationDir))\n+\n+\t\t\t// Then check that the exact files are correct\n+\t\t\tfor _, name := range tt.expectedFiles {\n+\t\t\t\trequire.FileExists(t, filepath.Join(opts.DestinationDir, name))\n+\t\t\t}\n+\n \t\t\tassert.Equal(t, \"\", stdout.String())\n \t\t\tassert.Equal(t, \"\", stderr.String())\n \t\t})\n \t}\n }\n \n-type mockPlatform struct {\n-\tmock.Mock\n-}\n+func countFilesInDirRecursively(t *testing.T, dir string) int {\n+\tt.Helper()\n \n-func newMockPlatform(t *testing.T, config func(*mockPlatform)) *mockPlatform {\n-\tm := &mockPlatform{}\n-\tm.Test(t)\n-\tt.Cleanup(func() {\n-\t\tm.AssertExpectations(t)\n-\t})\n-\tif config != nil {\n-\t\tconfig(m)\n-\t}\n-\treturn m\n-}\n-\n-func (p *mockPlatform) List(runID string) ([]shared.Artifact, error) {\n-\targs := p.Called(runID)\n-\treturn args.Get(0).([]shared.Artifact), args.Error(1)\n-}\n+\tcount := 0\n+\trequire.NoError(t, filepath.Walk(dir, func(_ string, info os.FileInfo, err error) error {\n+\t\trequire.NoError(t, err)\n+\t\tif !info.IsDir() {\n+\t\t\tcount++\n+\t\t}\n+\t\treturn nil\n+\t}))\n \n-func (p *mockPlatform) Download(url string, dir string) error {\n-\targs := p.Called(url, dir)\n-\treturn args.Error(0)\n+\treturn count\n }"
        },
        {
          "filename": "pkg/cmd/run/download/zip.go",
          "status": "modified",
          "additions": 18,
          "deletions": 6,
          "patch": "@@ -71,13 +71,25 @@ func getPerm(m os.FileMode) os.FileMode {\n }\n \n func filepathDescendsFrom(p, dir string) bool {\n+\t// Regardless of the logic below, `p` is never allowed to be current directory `.` or parent directory `..`\n+\t// however we check explicitly here before filepath.Rel() which doesn't cover all cases.\n \tp = filepath.Clean(p)\n-\tdir = filepath.Clean(dir)\n-\tif dir == \".\" && !filepath.IsAbs(p) {\n-\t\treturn !strings.HasPrefix(p, \"..\"+string(filepath.Separator))\n+\n+\tif p == \".\" || p == \"..\" {\n+\t\treturn false\n \t}\n-\tif !strings.HasSuffix(dir, string(filepath.Separator)) {\n-\t\tdir += string(filepath.Separator)\n+\n+\t// filepathDescendsFrom() takes advantage of filepath.Rel() to determine if `p` is descended from `dir`:\n+\t//\n+\t// 1. filepath.Rel() calculates a path to traversal from fictious `dir` to `p`.\n+\t// 2. filepath.Rel() errors in a handful of cases where absolute and relative paths are compared as well as certain traversal edge cases\n+\t//    For more information, https://github.com/golang/go/blob/00709919d09904b17cfe3bfeb35521cbd3fb04f8/src/path/filepath/path_test.go#L1510-L1515\n+\t// 3. If the path to traverse `dir` to `p` requires `..`, then we know it is not descend from / contained in `dir`\n+\t//\n+\t// As-is, this function requires the caller to ensure `p` and `dir` are either 1) both relative or 2) both absolute.\n+\trelativePath, err := filepath.Rel(dir, p)\n+\tif err != nil {\n+\t\treturn false\n \t}\n-\treturn strings.HasPrefix(p, dir)\n+\treturn !strings.HasPrefix(relativePath, \"..\")\n }"
        },
        {
          "filename": "pkg/cmd/run/download/zip_test.go",
          "status": "modified",
          "additions": 80,
          "deletions": 0,
          "patch": "@@ -130,6 +130,86 @@ func Test_filepathDescendsFrom(t *testing.T) {\n \t\t\t},\n \t\t\twant: false,\n \t\t},\n+\t\t{\n+\t\t\tname: \"deny parent directory filename (`..`) escaping absolute directory\",\n+\t\t\targs: args{\n+\t\t\t\tp:   filepath.FromSlash(\"..\"),\n+\t\t\t\tdir: filepath.FromSlash(\"/var/logs/\"),\n+\t\t\t},\n+\t\t\twant: false,\n+\t\t},\n+\t\t{\n+\t\t\tname: \"deny parent directory filename (`..`) escaping current directory\",\n+\t\t\targs: args{\n+\t\t\t\tp:   filepath.FromSlash(\"..\"),\n+\t\t\t\tdir: filepath.FromSlash(\".\"),\n+\t\t\t},\n+\t\t\twant: false,\n+\t\t},\n+\t\t{\n+\t\t\tname: \"deny parent directory filename (`..`) escaping parent directory\",\n+\t\t\targs: args{\n+\t\t\t\tp:   filepath.FromSlash(\"..\"),\n+\t\t\t\tdir: filepath.FromSlash(\"..\"),\n+\t\t\t},\n+\t\t\twant: false,\n+\t\t},\n+\t\t{\n+\t\t\tname: \"deny parent directory filename (`..`) escaping relative directory\",\n+\t\t\targs: args{\n+\t\t\t\tp:   filepath.FromSlash(\"..\"),\n+\t\t\t\tdir: filepath.FromSlash(\"relative-dir\"),\n+\t\t\t},\n+\t\t\twant: false,\n+\t\t},\n+\t\t{\n+\t\t\tname: \"deny current directory filename (`.`) in absolute directory\",\n+\t\t\targs: args{\n+\t\t\t\tp:   filepath.FromSlash(\".\"),\n+\t\t\t\tdir: filepath.FromSlash(\"/var/logs/\"),\n+\t\t\t},\n+\t\t\twant: false,\n+\t\t},\n+\t\t{\n+\t\t\tname: \"deny current directory filename (`.`) in current directory\",\n+\t\t\targs: args{\n+\t\t\t\tp:   filepath.FromSlash(\".\"),\n+\t\t\t\tdir: filepath.FromSlash(\".\"),\n+\t\t\t},\n+\t\t\twant: false,\n+\t\t},\n+\t\t{\n+\t\t\tname: \"deny current directory filename (`.`) in parent directory\",\n+\t\t\targs: args{\n+\t\t\t\tp:   filepath.FromSlash(\".\"),\n+\t\t\t\tdir: filepath.FromSlash(\"..\"),\n+\t\t\t},\n+\t\t\twant: false,\n+\t\t},\n+\t\t{\n+\t\t\tname: \"deny current directory filename (`.`) in relative directory\",\n+\t\t\targs: args{\n+\t\t\t\tp:   filepath.FromSlash(\".\"),\n+\t\t\t\tdir: filepath.FromSlash(\"relative-dir\"),\n+\t\t\t},\n+\t\t\twant: false,\n+\t\t},\n+\t\t{\n+\t\t\tname: \"relative path, absolute dir\",\n+\t\t\targs: args{\n+\t\t\t\tp:   filepath.FromSlash(\"whatever\"),\n+\t\t\t\tdir: filepath.FromSlash(\"/a/b/c\"),\n+\t\t\t},\n+\t\t\twant: false,\n+\t\t},\n+\t\t{\n+\t\t\tname: \"absolute path, relative dir\",\n+\t\t\targs: args{\n+\t\t\t\tp:   filepath.FromSlash(\"/a/b/c\"),\n+\t\t\t\tdir: filepath.FromSlash(\"whatever\"),\n+\t\t\t},\n+\t\t\twant: false,\n+\t\t},\n \t}\n \tfor _, tt := range tests {\n \t\tt.Run(tt.name, func(t *testing.T) {"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 2,
        "unique_directories": 1,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "6fe21d8f5224c5d8a58d210bd2bc70f5a008294c",
            "date": "2025-01-13T17:55:17Z",
            "author_login": "jtmcg"
          },
          {
            "sha": "112552fec126813b2d290f034612e0ec6937485f",
            "date": "2025-01-13T15:20:33Z",
            "author_login": "malancas"
          },
          {
            "sha": "41e99b9eabe47bc8262d5ebfc65626fb29a7ed87",
            "date": "2025-01-13T14:12:32Z",
            "author_login": "andyfeller"
          },
          {
            "sha": "3ada5af872cdd4916649d2d33f0090951344d591",
            "date": "2025-01-13T13:41:10Z",
            "author_login": "andyfeller"
          },
          {
            "sha": "8a2be52be0e8866fd1e80b273c4b8a5449832c81",
            "date": "2025-01-13T13:08:18Z",
            "author_login": "andyfeller"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-22",
    "description": "The GitHub CLI is GitHub\u2019s official command line tool. A security vulnerability has been identified in GitHub CLI that could create or overwrite files in unintended directories when users download a malicious GitHub Actions workflow artifact through gh run download. This vulnerability stems from a GitHub Actions workflow artifact named .. when downloaded using gh run download. The artifact name and --dir flag are used to determine the artifact\u2019s download path. When the artifact is named .., the resulting files within the artifact are extracted exactly 1 directory higher than the specified --dir flag value. This vulnerability is fixed in 2.63.1.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2024-12-04T16:15:26.730",
    "last_modified": "2024-12-04T16:15:26.730",
    "fix_date": "2024-12-03T23:12:05Z"
  },
  "references": [
    {
      "url": "https://github.com/cli/cli/commit/1136764c369aaf0cae4ec2ee09dc35d871076932",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/cli/cli/security/advisories/GHSA-2m9h-r57g-45pj",
      "source": "security-advisories@github.com",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:09:33.090569",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "cli",
    "owner": "cli",
    "created_at": "2019-10-03T15:24:53Z",
    "updated_at": "2025-01-14T16:36:27Z",
    "pushed_at": "2025-01-14T01:40:15Z",
    "size": 43284,
    "stars": 37940,
    "forks": 6067,
    "open_issues": 740,
    "watchers": 37940,
    "has_security_policy": false,
    "default_branch": "trunk",
    "protected_branches": [],
    "languages": {
      "Go": 4638348,
      "Shell": 15652,
      "Makefile": 3402,
      "PowerShell": 569,
      "Batchfile": 26
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T18:49:57.892130"
  }
}