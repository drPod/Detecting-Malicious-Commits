{
  "cve_id": "CVE-2024-54137",
  "github_data": {
    "repository": "open-quantum-safe/liboqs",
    "fix_commit": "cce1bfde4e52c524b087b9687020d283fbde0f24",
    "related_commits": [
      "cce1bfde4e52c524b087b9687020d283fbde0f24"
    ],
    "patch_url": "https://github.com/open-quantum-safe/liboqs/commit/cce1bfde4e52c524b087b9687020d283fbde0f24.patch",
    "fix_commit_details": {
      "sha": "cce1bfde4e52c524b087b9687020d283fbde0f24",
      "commit_date": "2024-11-14T14:34:05Z",
      "author": {
        "login": "SWilson4",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Run copy_from_upstream.py",
        "length": 86,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 21,
        "additions": 11,
        "deletions": 10
      },
      "files": [
        {
          "filename": "docs/algorithms/kem/hqc.md",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -6,7 +6,7 @@\n - **Authors' website**: https://pqc-hqc.org/\n - **Specification version**: 2023-04-30.\n - **Primary Source**<a name=\"primary-source\"></a>:\n-  - **Source**: https://github.com/PQClean/PQClean/commit/8e221ae797b229858a0b0d784577a8cb149d5789\n+  - **Source**: https://github.com/PQClean/PQClean/commit/8e221ae797b229858a0b0d784577a8cb149d5789 with copy_from_upstream patches\n   - **Implementation license (SPDX-Identifier)**: Public domain\n - **Ancestors of primary source**:\n   - https://github.com/SWilson4/package-pqclean/tree/8db1b24b/hqc, which takes it from:"
        },
        {
          "filename": "docs/algorithms/kem/hqc.yml",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -77,3 +77,4 @@ parameter-sets:\n primary-upstream:\n   spdx-license-identifier: Public domain\n   source: https://github.com/PQClean/PQClean/commit/8e221ae797b229858a0b0d784577a8cb149d5789\n+    with copy_from_upstream patches"
        },
        {
          "filename": "src/kem/hqc/pqclean_hqc-128_clean/kem.c",
          "status": "modified",
          "additions": 3,
          "deletions": 3,
          "patch": "@@ -87,7 +87,7 @@ int PQCLEAN_HQC128_CLEAN_crypto_kem_dec(uint8_t *ss, const uint8_t *ct, const ui\n     uint8_t result;\n     uint64_t u[VEC_N_SIZE_64] = {0};\n     uint64_t v[VEC_N1N2_SIZE_64] = {0};\n-    const uint8_t *pk = sk + SEED_BYTES;\n+    const uint8_t *pk = sk + SEED_BYTES + VEC_K_SIZE_BYTES;\n     uint8_t sigma[VEC_K_SIZE_BYTES] = {0};\n     uint8_t theta[SHAKE256_512_BYTES] = {0};\n     uint64_t u2[VEC_N_SIZE_64] = {0};\n@@ -115,7 +115,7 @@ int PQCLEAN_HQC128_CLEAN_crypto_kem_dec(uint8_t *ss, const uint8_t *ct, const ui\n     result |= PQCLEAN_HQC128_CLEAN_vect_compare((uint8_t *)u, (uint8_t *)u2, VEC_N_SIZE_BYTES);\n     result |= PQCLEAN_HQC128_CLEAN_vect_compare((uint8_t *)v, (uint8_t *)v2, VEC_N1N2_SIZE_BYTES);\n \n-    result = (uint8_t) (-((int16_t) result) >> 15);\n+    result -= 1;\n \n     for (size_t i = 0; i < VEC_K_SIZE_BYTES; ++i) {\n         mc[i] = (m[i] & result) ^ (sigma[i] & ~result);\n@@ -126,5 +126,5 @@ int PQCLEAN_HQC128_CLEAN_crypto_kem_dec(uint8_t *ss, const uint8_t *ct, const ui\n     PQCLEAN_HQC128_CLEAN_store8_arr(mc + VEC_K_SIZE_BYTES + VEC_N_SIZE_BYTES, VEC_N1N2_SIZE_BYTES, v, VEC_N1N2_SIZE_64);\n     PQCLEAN_HQC128_CLEAN_shake256_512_ds(&shake256state, ss, mc, VEC_K_SIZE_BYTES + VEC_N_SIZE_BYTES + VEC_N1N2_SIZE_BYTES, K_FCT_DOMAIN);\n \n-    return -(~result & 1);\n+    return (result & 1) - 1;\n }"
        },
        {
          "filename": "src/kem/hqc/pqclean_hqc-192_clean/kem.c",
          "status": "modified",
          "additions": 3,
          "deletions": 3,
          "patch": "@@ -87,7 +87,7 @@ int PQCLEAN_HQC192_CLEAN_crypto_kem_dec(uint8_t *ss, const uint8_t *ct, const ui\n     uint8_t result;\n     uint64_t u[VEC_N_SIZE_64] = {0};\n     uint64_t v[VEC_N1N2_SIZE_64] = {0};\n-    const uint8_t *pk = sk + SEED_BYTES;\n+    const uint8_t *pk = sk + SEED_BYTES + VEC_K_SIZE_BYTES;\n     uint8_t sigma[VEC_K_SIZE_BYTES] = {0};\n     uint8_t theta[SHAKE256_512_BYTES] = {0};\n     uint64_t u2[VEC_N_SIZE_64] = {0};\n@@ -115,7 +115,7 @@ int PQCLEAN_HQC192_CLEAN_crypto_kem_dec(uint8_t *ss, const uint8_t *ct, const ui\n     result |= PQCLEAN_HQC192_CLEAN_vect_compare((uint8_t *)u, (uint8_t *)u2, VEC_N_SIZE_BYTES);\n     result |= PQCLEAN_HQC192_CLEAN_vect_compare((uint8_t *)v, (uint8_t *)v2, VEC_N1N2_SIZE_BYTES);\n \n-    result = (uint8_t) (-((int16_t) result) >> 15);\n+    result -= 1;\n \n     for (size_t i = 0; i < VEC_K_SIZE_BYTES; ++i) {\n         mc[i] = (m[i] & result) ^ (sigma[i] & ~result);\n@@ -126,5 +126,5 @@ int PQCLEAN_HQC192_CLEAN_crypto_kem_dec(uint8_t *ss, const uint8_t *ct, const ui\n     PQCLEAN_HQC192_CLEAN_store8_arr(mc + VEC_K_SIZE_BYTES + VEC_N_SIZE_BYTES, VEC_N1N2_SIZE_BYTES, v, VEC_N1N2_SIZE_64);\n     PQCLEAN_HQC192_CLEAN_shake256_512_ds(&shake256state, ss, mc, VEC_K_SIZE_BYTES + VEC_N_SIZE_BYTES + VEC_N1N2_SIZE_BYTES, K_FCT_DOMAIN);\n \n-    return -(~result & 1);\n+    return (result & 1) - 1;\n }"
        },
        {
          "filename": "src/kem/hqc/pqclean_hqc-256_clean/kem.c",
          "status": "modified",
          "additions": 3,
          "deletions": 3,
          "patch": "@@ -87,7 +87,7 @@ int PQCLEAN_HQC256_CLEAN_crypto_kem_dec(uint8_t *ss, const uint8_t *ct, const ui\n     uint8_t result;\n     uint64_t u[VEC_N_SIZE_64] = {0};\n     uint64_t v[VEC_N1N2_SIZE_64] = {0};\n-    const uint8_t *pk = sk + SEED_BYTES;\n+    const uint8_t *pk = sk + SEED_BYTES + VEC_K_SIZE_BYTES;\n     uint8_t sigma[VEC_K_SIZE_BYTES] = {0};\n     uint8_t theta[SHAKE256_512_BYTES] = {0};\n     uint64_t u2[VEC_N_SIZE_64] = {0};\n@@ -115,7 +115,7 @@ int PQCLEAN_HQC256_CLEAN_crypto_kem_dec(uint8_t *ss, const uint8_t *ct, const ui\n     result |= PQCLEAN_HQC256_CLEAN_vect_compare((uint8_t *)u, (uint8_t *)u2, VEC_N_SIZE_BYTES);\n     result |= PQCLEAN_HQC256_CLEAN_vect_compare((uint8_t *)v, (uint8_t *)v2, VEC_N1N2_SIZE_BYTES);\n \n-    result = (uint8_t) (-((int16_t) result) >> 15);\n+    result -= 1;\n \n     for (size_t i = 0; i < VEC_K_SIZE_BYTES; ++i) {\n         mc[i] = (m[i] & result) ^ (sigma[i] & ~result);\n@@ -126,5 +126,5 @@ int PQCLEAN_HQC256_CLEAN_crypto_kem_dec(uint8_t *ss, const uint8_t *ct, const ui\n     PQCLEAN_HQC256_CLEAN_store8_arr(mc + VEC_K_SIZE_BYTES + VEC_N_SIZE_BYTES, VEC_N1N2_SIZE_BYTES, v, VEC_N1N2_SIZE_64);\n     PQCLEAN_HQC256_CLEAN_shake256_512_ds(&shake256state, ss, mc, VEC_K_SIZE_BYTES + VEC_N_SIZE_BYTES + VEC_N1N2_SIZE_BYTES, K_FCT_DOMAIN);\n \n-    return -(~result & 1);\n+    return (result & 1) - 1;\n }"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 1,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 4,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "cc61cb046dce756e493c9406c803ba7820a30866",
            "date": "2025-01-09T02:28:46Z",
            "author_login": "dependabot[bot]"
          },
          {
            "sha": "af78b878691f29e4af0dd82f14e7af5405a97e68",
            "date": "2024-12-22T05:34:13Z",
            "author_login": "SWilson4"
          },
          {
            "sha": "d35017e3e961f55ebac73592093bce09ee870ced",
            "date": "2024-12-21T16:49:23Z",
            "author_login": "planetf1"
          },
          {
            "sha": "416778ecc2cd246d02c5684486a7a2489a9d8fbf",
            "date": "2024-12-17T18:17:54Z",
            "author_login": "SWilson4"
          },
          {
            "sha": "51708b699ed35f20d7180b1ecb81c5e6fb71aee9",
            "date": "2024-12-13T22:08:35Z",
            "author_login": "iyanmv"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.4,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N",
    "cwe_id": "CWE-200",
    "description": "liboqs is a C-language cryptographic library that provides implementations of post-quantum cryptography algorithms. A correctness error has been identified in the reference implementation of the HQC key encapsulation mechanism. Due to an indexing error, part of the secret key is incorrectly treated as non-secret data. This results in an incorrect shared secret value being returned when the decapsulation function is called with a malformed ciphertext. This vulnerability is fixed in 0.12.0.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2024-12-06T16:15:22.637",
    "last_modified": "2024-12-06T16:15:22.637",
    "fix_date": "2024-11-14T14:34:05Z"
  },
  "references": [
    {
      "url": "https://github.com/open-quantum-safe/liboqs/commit/cce1bfde4e52c524b087b9687020d283fbde0f24",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/open-quantum-safe/liboqs/security/advisories/GHSA-gpf4-vrrw-r8v7",
      "source": "security-advisories@github.com",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:09:33.101400",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "liboqs",
    "owner": "open-quantum-safe",
    "created_at": "2016-08-12T01:46:12Z",
    "updated_at": "2025-01-14T02:57:09Z",
    "pushed_at": "2025-01-13T13:50:44Z",
    "size": 143906,
    "stars": 2014,
    "forks": 485,
    "open_issues": 92,
    "watchers": 2014,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main"
    ],
    "languages": {
      "C": 20304568,
      "Assembly": 12825063,
      "CMake": 342083,
      "Python": 168143,
      "C++": 26591,
      "Shell": 19793
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T14:24:53.246800"
  }
}