{
  "cve_id": "CVE-2024-55602",
  "github_data": {
    "repository": "pwndoc/pwndoc",
    "fix_commit": "1d4219c596f4f518798492e48386a20c6e9a2fe6",
    "related_commits": [
      "1d4219c596f4f518798492e48386a20c6e9a2fe6"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "1d4219c596f4f518798492e48386a20c6e9a2fe6",
      "commit_date": "2024-12-10T11:34:45Z",
      "author": {
        "login": "MaxNad",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Merge commit from fork",
        "length": 57,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 44,
        "additions": 44,
        "deletions": 0
      },
      "files": [
        {
          "filename": "backend/src/routes/template.js",
          "status": "modified",
          "additions": 6,
          "deletions": 0,
          "patch": "@@ -46,6 +46,12 @@ module.exports = function(app) {\n             return;\n         }\n \n+        // Fix for GHSA-2mqc-gg7h-76p6\n+        if (req.body.ext && !utils.validFilename(req.body.ext)) {\n+            Response.BadParameters(res, 'Bad name format');\n+            return;\n+        }\n+\n         var template = {};\n         // Optional parameters\n         if (req.body.name) template.name = req.body.name;"
        },
        {
          "filename": "backend/tests/template.test.js",
          "status": "modified",
          "additions": 38,
          "deletions": 0,
          "patch": "@@ -122,6 +122,44 @@ module.exports = function(request, app) {\n         expect(response.status).toBe(404)\n       })\n \n+      it('Update template with invalid filename (Avoid security regression)', async () => {\n+        var template = { name: \"Template Updated../../../../src/config/config.json\" }\n+\n+        var response = await request(app).put(`/api/templates/${template1Id}`)\n+          .set('Cookie', [\n+            `token=JWT ${userToken}`\n+          ])\n+          .send(template)\n+        expect(response.status).toBe(422)\n+      })\n+\n+      it('Update template with invalid file extension (Avoid security regression)', async () => {\n+        var template = {\n+          name: \"Template Updated\",\n+          ext: \"../src/config/config.json\"\n+        }\n+\n+        var response = await request(app).put(`/api/templates/${template1Id}`)\n+          .set('Cookie', [\n+            `token=JWT ${userToken}`\n+          ])\n+          .send(template)\n+        expect(response.status).toBe(422)\n+      })\n+\n+      it('Update template with invalid file extension - No file name (Avoid security regression)', async () => {\n+        var template = {\n+          ext: \"../src/config/config.json\"\n+        }\n+\n+        var response = await request(app).put(`/api/templates/${template1Id}`)\n+          .set('Cookie', [\n+            `token=JWT ${userToken}`\n+          ])\n+          .send(template)\n+        expect(response.status).toBe(422)\n+      })\n+\n       it('Delete template', async () => {\n         var response = await request(app).delete(`/api/templates/${template2Id}`)\n           .set('Cookie', ["
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "14acb704891245bf1703ce6296d62112e85aa995",
            "date": "2025-01-14T22:19:34Z",
            "author_login": "MaxNad"
          },
          {
            "sha": "5be55836925c4ad376756784562d8e0be75d67a6",
            "date": "2025-01-14T21:55:47Z",
            "author_login": "MaxNad"
          },
          {
            "sha": "fe6fbd3beb91f9db6f093aad52636c20643fd4b4",
            "date": "2025-01-11T14:38:14Z",
            "author_login": "MaxNad"
          },
          {
            "sha": "7c84391fd2960a1f3deb07b4dfdca86e16d7a760",
            "date": "2025-01-11T14:31:05Z",
            "author_login": "Tibso"
          },
          {
            "sha": "068fead0062a87fa8511cdbb9e6f8243be975bc0",
            "date": "2025-01-03T22:11:23Z",
            "author_login": "yeln4ts"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.6,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:C/C:H/I:L/A:N",
    "cwe_id": "CWE-22",
    "description": "PwnDoc is a penetration test report generator. Prior to commit 1d4219c596f4f518798492e48386a20c6e9a2fe6, an authenticated user who is able to update and download templates can inject path traversal (`../`) sequences into the file extension property to read arbitrary files on the system. Commit 1d4219c596f4f518798492e48386a20c6e9a2fe6 contains a patch for the issue.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-12-10T17:15:15.423",
    "last_modified": "2024-12-10T18:15:43.500",
    "fix_date": "2024-12-10T11:34:45Z"
  },
  "references": [
    {
      "url": "https://gist.github.com/JorianWoltjer/8a42e25c6dfa7604020d2a226e193407",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/pwndoc/pwndoc/blob/2e7f5747d5688b1368e549c786ce7266fe5ab2b5/backend/src/routes/template.js#L103",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/pwndoc/pwndoc/blob/2e7f5747d5688b1368e549c786ce7266fe5ab2b5/backend/src/routes/template.js#L43-L47",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/pwndoc/pwndoc/commit/1d4219c596f4f518798492e48386a20c6e9a2fe6",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/pwndoc/pwndoc/security/advisories/GHSA-2mqc-gg7h-76p6",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://gist.github.com/JorianWoltjer/8a42e25c6dfa7604020d2a226e193407",
      "source": "134c704f-9b21-4f2e-91b3-4a467353bcc0",
      "tags": []
    },
    {
      "url": "https://github.com/pwndoc/pwndoc/security/advisories/GHSA-2mqc-gg7h-76p6",
      "source": "134c704f-9b21-4f2e-91b3-4a467353bcc0",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:09:33.115204",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "pwndoc",
    "owner": "pwndoc",
    "created_at": "2020-01-13T23:42:23Z",
    "updated_at": "2025-01-25T11:44:23Z",
    "pushed_at": "2025-01-17T22:09:04Z",
    "size": 12056,
    "stars": 2377,
    "forks": 443,
    "open_issues": 119,
    "watchers": 2377,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "JavaScript": 1061238,
      "HTML": 323258,
      "Vue": 161252,
      "Stylus": 5537,
      "Shell": 801,
      "Dockerfile": 657
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-26T07:53:41.208883"
  }
}