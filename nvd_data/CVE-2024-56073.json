{
  "cve_id": "CVE-2024-56073",
  "github_data": {
    "repository": "pavel-odintsov/fastnetmon",
    "fix_commit": "a36718525e08ad0f2a809363001bf105efc5fe1c",
    "related_commits": [
      "a36718525e08ad0f2a809363001bf105efc5fe1c"
    ],
    "patch_url": "https://github.com/pavel-odintsov/fastnetmon/commit/a36718525e08ad0f2a809363001bf105efc5fe1c.patch",
    "fix_commit_details": {
      "sha": "a36718525e08ad0f2a809363001bf105efc5fe1c",
      "commit_date": "2024-12-13T12:08:14Z",
      "author": {
        "login": "pavel-odintsov",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "DoS: explicitly blocked zero length data templates for Netflow v9 as they have no sense",
        "length": 315,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 30,
        "additions": 29,
        "deletions": 1
      },
      "files": [
        {
          "filename": "src/netflow_plugin/netflow_v9_collector.cpp",
          "status": "modified",
          "additions": 29,
          "deletions": 1,
          "patch": "@@ -64,7 +64,9 @@ bool process_netflow_v9_options_template(const uint8_t* pkt, size_t flowset_leng\n     std::vector<template_record_t> template_records_map;\n     uint32_t total_size = 0;\n \n-    for (; offset < fast_ntoh(options_nested_header->option_length);) {\n+     uint32_t option_length = fast_ntoh(options_nested_header->option_length);\n+\n+    for (; offset < option_length;) {\n         records_number++;\n         const netflow9_template_flowset_record_t* tmplr =\n             (const netflow9_template_flowset_record_t*)(zone_address_without_skopes + offset);\n@@ -92,6 +94,15 @@ bool process_netflow_v9_options_template(const uint8_t* pkt, size_t flowset_leng\n     field_template.type                = netflow_template_type_t::Options;\n     field_template.option_scope_length = scopes_total_size;\n \n+    // Templates with total length which is zero do not make any sense and have to be ignored\n+    // We need templates to decode data blob and decoding zero length value is meaningless\n+    if (field_template.total_length == 0) {\n+       logger << log4cpp::Priority::ERROR\n+               << \"Received zero length malformed options Netfow v9 template \" << template_id\n+               << \" from \" << client_addres_in_string_format;\n+        return false;\n+    }\n+\n     // We need to know when we received it\n     field_template.timestamp = current_inaccurate_time;\n \n@@ -183,6 +194,15 @@ bool process_netflow_v9_template(const uint8_t* pkt,\n             // TODO: introduce netflow9_check_rec_len\n         }\n \n+        // Templates with total length which is zero do not make any sense and have to be ignored\n+        // We need templates to decode data blob and decoding zero length value is meaningless\n+        if (total_size == 0) {\n+            logger << log4cpp::Priority::ERROR\n+                << \"Received zero length malformed data Netflow v9 template \" << template_id\n+                << \" from \" << client_addres_in_string_format;\n+            return false;\n+        }\n+\n         template_t field_template{};\n \n         field_template.template_id  = template_id;\n@@ -1473,6 +1493,14 @@ bool process_netflow_v9_data(const uint8_t* pkt,\n         return false;\n     }\n \n+    // Check that template total length is not zero as we're going to divide by it\n+    if (field_template->total_length == 0) {\n+        logger << log4cpp::Priority::ERROR\n+               << \"Zero template length is not valid \"\n+               << \"client \" << client_addres_in_string_format << \" source_id: \" << source_id;\n+       return false;\n+    }\n+\n     uint32_t offset       = sizeof(*dath);\n     uint32_t num_flowsets = (flowset_length - offset) / field_template->total_length;\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "27ca6168e970a200c5f7b2e7e397ec53afe8979f",
            "date": "2025-01-13T19:05:32Z",
            "author_login": "pavel-odintsov"
          },
          {
            "sha": "be99c636d16656f3c2752dc490d0df55ce6193b1",
            "date": "2025-01-13T17:06:54Z",
            "author_login": "pavel-odintsov"
          },
          {
            "sha": "4e710fdd82a51e97ff9ceb8e4d42d2a6d9767cb6",
            "date": "2025-01-13T14:20:49Z",
            "author_login": "pavel-odintsov"
          },
          {
            "sha": "f914ba735aea6e17eb01d45329665cf360998b9f",
            "date": "2025-01-13T14:16:04Z",
            "author_login": "pavel-odintsov"
          },
          {
            "sha": "1106cea11d267544e42b55549a3aa00de914342b",
            "date": "2025-01-03T10:20:02Z",
            "author_login": "pavel-odintsov"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.5,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "cwe_id": "CWE-369",
    "description": "An issue was discovered in FastNetMon Community Edition through 1.2.7. Zero-length templates for Netflow v9 allow remote attackers to cause a denial of service (divide-by-zero error and application crash).",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-12-15T03:15:16.433",
    "last_modified": "2024-12-16T17:15:13.700",
    "fix_date": "2024-12-13T12:08:14Z"
  },
  "references": [
    {
      "url": "https://cwe.mitre.org/data/definitions/369.html",
      "source": "cve@mitre.org",
      "tags": []
    },
    {
      "url": "https://github.com/pavel-odintsov/fastnetmon/commit/a36718525e08ad0f2a809363001bf105efc5fe1c",
      "source": "cve@mitre.org",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:09:33.141447",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "fastnetmon",
    "owner": "pavel-odintsov",
    "created_at": "2013-10-18T10:09:53Z",
    "updated_at": "2025-01-14T13:42:47Z",
    "pushed_at": "2025-01-13T19:05:38Z",
    "size": 33657,
    "stars": 3450,
    "forks": 570,
    "open_issues": 59,
    "watchers": 3450,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "C++": 2574248,
      "Perl": 177260,
      "CMake": 52509,
      "PHP": 23406,
      "Python": 19832,
      "Shell": 13179,
      "Ruby": 3087,
      "Roff": 2173,
      "Makefile": 2110,
      "C": 1246,
      "Cap'n Proto": 1136,
      "Dockerfile": 575
    },
    "commit_activity": {
      "total_commits_last_year": 175,
      "avg_commits_per_week": 3.3653846153846154,
      "days_active_last_year": 40
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-2.0"
    },
    "collected_at": "2025-01-14T20:07:06.846028"
  }
}