{
  "cve_id": "CVE-2024-56412",
  "github_data": {
    "repository": "PHPOffice/PhpSpreadsheet",
    "fix_commit": "45052f88e04c735d56457a8ffcdc40b2635a028e",
    "related_commits": [
      "45052f88e04c735d56457a8ffcdc40b2635a028e"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "45052f88e04c735d56457a8ffcdc40b2635a028e",
      "commit_date": "2024-12-27T00:34:48Z",
      "author": {
        "login": "oleibman",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Merge commit from fork",
        "length": 22,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 78,
        "additions": 74,
        "deletions": 4
      },
      "files": [
        {
          "filename": "src/PhpSpreadsheet/Writer/Html.php",
          "status": "modified",
          "additions": 5,
          "deletions": 4,
          "patch": "@@ -403,12 +403,12 @@ public function generateHTMLHeader(bool $includeStyles = false): string\n                 } else {\n                     $propertyValue = (string) $propertyValue;\n                 }\n-                $html .= self::generateMeta($propertyValue, \"custom.$propertyQualifier.$customProperty\");\n+                $html .= self::generateMeta($propertyValue, htmlspecialchars(\"custom.$propertyQualifier.$customProperty\"));\n             }\n         }\n \n         if (!empty($properties->getHyperlinkBase())) {\n-            $html .= '      <base href=\"' . $properties->getHyperlinkBase() . '\" />' . PHP_EOL;\n+            $html .= '      <base href=\"' . htmlspecialchars($properties->getHyperlinkBase()) . '\" />' . PHP_EOL;\n         }\n \n         $html .= $includeStyles ? $this->generateStyles(true) : $this->generatePageDeclarations(true);\n@@ -1586,8 +1586,9 @@ private function generateRow(Worksheet $worksheet, array $values, int $row, stri\n             // Hyperlink?\n             if ($worksheet->hyperlinkExists($coordinate) && !$worksheet->getHyperlink($coordinate)->isInternal()) {\n                 $url = $worksheet->getHyperlink($coordinate)->getUrl();\n-                $urldecode = strtolower(html_entity_decode(trim($url), encoding: 'UTF-8'));\n-                $parseScheme = preg_match('/^(\\\\w+):/', $urldecode, $matches);\n+                $urlDecode1 = html_entity_decode($url, ENT_QUOTES | ENT_SUBSTITUTE, 'UTF-8');\n+                $urlTrim = preg_replace('/^\\\\s+/u', '', $urlDecode1) ?? $urlDecode1;\n+                $parseScheme = preg_match('/^([\\\\w\\\\s]+):/u', strtolower($urlTrim), $matches);\n                 if ($parseScheme === 1 && !in_array($matches[1], ['http', 'https', 'file', 'ftp', 's3'], true)) {\n                     $cellData = htmlspecialchars($url, Settings::htmlEntityFlags());\n                 } else {"
        },
        {
          "filename": "tests/PhpSpreadsheetTests/Writer/Html/BadCustomPropertyTest.php",
          "status": "added",
          "additions": 23,
          "deletions": 0,
          "patch": "@@ -0,0 +1,23 @@\n+<?php\n+\n+declare(strict_types=1);\n+\n+namespace PhpOffice\\PhpSpreadsheetTests\\Writer\\Html;\n+\n+use PhpOffice\\PhpSpreadsheet\\Reader\\Xlsx as XlsxReader;\n+use PhpOffice\\PhpSpreadsheet\\Writer\\Html as HtmlWriter;\n+use PHPUnit\\Framework\\TestCase;\n+\n+class BadCustomPropertyTest extends TestCase\n+{\n+    public function testBadCustomProperty(): void\n+    {\n+        $reader = new XlsxReader();\n+        $infile = 'tests/data/Reader/XLSX/sec-q229.dontuse';\n+        $spreadsheet = $reader->load($infile);\n+        $writer = new HtmlWriter($spreadsheet);\n+        $html = $writer->generateHtmlAll();\n+        self::assertStringContainsString('<meta name=\"custom.string.custom_property&quot;&gt;&lt;img src=1 onerror=alert()&gt;\" content=\"test\" />', $html);\n+        $spreadsheet->disconnectWorksheets();\n+    }\n+}"
        },
        {
          "filename": "tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkBaseTest.php",
          "status": "added",
          "additions": 23,
          "deletions": 0,
          "patch": "@@ -0,0 +1,23 @@\n+<?php\n+\n+declare(strict_types=1);\n+\n+namespace PhpOffice\\PhpSpreadsheetTests\\Writer\\Html;\n+\n+use PhpOffice\\PhpSpreadsheet\\Reader\\Xlsx as XlsxReader;\n+use PhpOffice\\PhpSpreadsheet\\Writer\\Html as HtmlWriter;\n+use PHPUnit\\Framework\\TestCase;\n+\n+class BadHyperlinkBaseTest extends TestCase\n+{\n+    public function testBadHyperlinkBase(): void\n+    {\n+        $reader = new XlsxReader();\n+        $infile = 'tests/data/Reader/XLSX/sec-p66w.dontuse';\n+        $spreadsheet = $reader->load($infile);\n+        $writer = new HtmlWriter($spreadsheet);\n+        $html = $writer->generateHtmlAll();\n+        self::assertStringContainsString('<base href=\"&quot;&gt;&lt;img src=1 onerror=alert()&gt;\" />', $html);\n+        $spreadsheet->disconnectWorksheets();\n+    }\n+}"
        },
        {
          "filename": "tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkTest.php",
          "status": "added",
          "additions": 23,
          "deletions": 0,
          "patch": "@@ -0,0 +1,23 @@\n+<?php\n+\n+declare(strict_types=1);\n+\n+namespace PhpOffice\\PhpSpreadsheetTests\\Writer\\Html;\n+\n+use PhpOffice\\PhpSpreadsheet\\Reader\\Xlsx as XlsxReader;\n+use PhpOffice\\PhpSpreadsheet\\Writer\\Html as HtmlWriter;\n+use PHPUnit\\Framework\\TestCase;\n+\n+class BadHyperlinkTest extends TestCase\n+{\n+    public function testBadHyperlink(): void\n+    {\n+        $reader = new XlsxReader();\n+        $infile = 'tests/data/Reader/XLSX/sec-j47r.dontuse';\n+        $spreadsheet = $reader->load($infile);\n+        $writer = new HtmlWriter($spreadsheet);\n+        $html = $writer->generateHtmlAll();\n+        self::assertStringContainsString(\"<td class=\\\"column0 style1 f\\\">jav\\tascript:alert()</td>\", $html);\n+        $spreadsheet->disconnectWorksheets();\n+    }\n+}"
        },
        {
          "filename": "tests/data/Reader/XLSX/sec-j47r.dontuse",
          "status": "added",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "tests/data/Reader/XLSX/sec-p66w.dontuse",
          "status": "added",
          "additions": 0,
          "deletions": 0,
          "patch": null
        },
        {
          "filename": "tests/data/Reader/XLSX/sec-q229.dontuse",
          "status": "added",
          "additions": 0,
          "deletions": 0,
          "patch": null
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 6,
        "unique_directories": 3,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "414f8a2aa1d8b974b39f577c0677d5ebc96fab36",
            "date": "2025-01-26T05:10:24Z",
            "author_login": "oleibman"
          },
          {
            "sha": "e4211b74542fbc03a352d707a42a3ffdf2935e22",
            "date": "2025-01-26T04:56:52Z",
            "author_login": "oleibman"
          },
          {
            "sha": "cde2926a9e2baf146783f8fd1771bbed7d1dc7b3",
            "date": "2025-01-24T05:25:36Z",
            "author_login": "oleibman"
          },
          {
            "sha": "ed66270d9c29c69340bd19b174229947fbe5cdac",
            "date": "2025-01-22T03:16:48Z",
            "author_login": "oleibman"
          },
          {
            "sha": "191bf214d95435a247c5c812a26aafe5f0d41d0d",
            "date": "2025-01-22T03:10:54Z",
            "author_login": "oleibman"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-79",
    "description": "PhpSpreadsheet is a PHP library for reading and writing spreadsheet files. Versions prior to 3.7.0, 2.3.5, 2.1.6, and 1.29.7 are vulnerable to bypass of the cross-site scripting sanitizer using the javascript protocol and special characters. An attacker can use special characters, so that the library processes the javascript protocol with special characters and generates an HTML link. Versions 3.7.0, 2.3.5, 2.1.6, and 1.29.7 contain a patch for the issue.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2025-01-03T18:15:16.380",
    "last_modified": "2025-01-03T18:15:16.380",
    "fix_date": "2024-12-27T00:34:48Z"
  },
  "references": [
    {
      "url": "https://github.com/PHPOffice/PhpSpreadsheet/commit/45052f88e04c735d56457a8ffcdc40b2635a028e",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/PHPOffice/PhpSpreadsheet/security/advisories/GHSA-q9jv-mm3r-j47r",
      "source": "security-advisories@github.com",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:09:52.953230",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "PhpSpreadsheet",
    "owner": "PHPOffice",
    "created_at": "2016-06-19T16:58:48Z",
    "updated_at": "2025-01-26T06:35:03Z",
    "pushed_at": "2025-01-26T05:36:24Z",
    "size": 69728,
    "stars": 13469,
    "forks": 3505,
    "open_issues": 182,
    "watchers": 13469,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "PHP": 8301154,
      "HTML": 7409,
      "Shell": 885
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-26T07:38:02.957322"
  }
}