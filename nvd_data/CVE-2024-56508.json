{
  "cve_id": "CVE-2024-56508",
  "github_data": {
    "repository": "Kovah/LinkAce",
    "fix_commit": "8cf3670d71a8629d33408da76f9d441a1aa933f6",
    "related_commits": [
      "8cf3670d71a8629d33408da76f9d441a1aa933f6"
    ],
    "patch_url": "https://github.com/Kovah/LinkAce/commit/8cf3670d71a8629d33408da76f9d441a1aa933f6.patch",
    "fix_commit_details": {
      "sha": "8cf3670d71a8629d33408da76f9d441a1aa933f6",
      "commit_date": "2024-12-24T11:55:48Z",
      "author": {
        "login": "Kovah",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Adjust handling of non-url links during the import process",
        "length": 58,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 34,
        "additions": 30,
        "deletions": 4
      },
      "files": [
        {
          "filename": "app/Actions/ImportHtmlBookmarks.php",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -41,6 +41,10 @@ public function run(string $data, string $userId, bool $generateMeta = true): bo\n         }\n \n         foreach ($links as $link) {\n+            if (filter_var($link['url'], FILTER_VALIDATE_URL) === false) {\n+                // skip any links that are not a valid URL\n+                continue;\n+            }\n             if (Link::whereUrl($link['url'])->first()) {\n                 $this->skipped++;\n                 continue;"
        },
        {
          "filename": "tests/Controller/App/data/import_example.html",
          "status": "modified",
          "additions": 4,
          "deletions": 1,
          "patch": "@@ -29,6 +29,9 @@\n     <DT>\n       <A HREF=\"https://astralapp.com/\" ADD_DATE=\"1549404064\" TAGS=\"favourites,Github,organization\">Astral \u2014\n         Organize Your GitHub Stars With Ease</A>\n-  <DD>Astral is the best way to manage your starred repositories on GitHub using tags, notes and a powerful search\n+      <DD>Astral is the best way to manage your starred repositories on GitHub using tags, notes and a powerful search\n     feature.\n+    <DT>\n+      <A HREF=\"javascript:alert('XSS 1 - Document Cookie: ' + document.cookie);\" ADD_DATE=\"1549404064\" TAGS=\"vulnerability\">This is Scary</A>\n+      <DD>Sit locus tuus salvus erit.\n </DL>"
        },
        {
          "filename": "tests/Controller/Models/LinkControllerTest.php",
          "status": "modified",
          "additions": 22,
          "deletions": 3,
          "patch": "@@ -9,6 +9,7 @@\n use App\\Models\\Tag;\n use App\\Models\\User;\n use Illuminate\\Foundation\\Testing\\RefreshDatabase;\n+use Illuminate\\Http\\Client\\ConnectionException;\n use Illuminate\\Support\\Facades\\Http;\n use Illuminate\\Support\\Facades\\Queue;\n use Tests\\TestCase;\n@@ -186,14 +187,32 @@ public function testStoreRequestWithDuplicate(): void\n         $flashMessages->contains('message', trans('link.duplicates_found'));\n     }\n \n+    public function testStoreRequestWithMaliciousUrl(): void\n+    {\n+        $response = $this->post('links', [\n+            'url' => 'javascript:alert(document.cookie)',\n+            'title' => null,\n+            'description' => null,\n+            'lists' => null,\n+            'tags' => null,\n+            'is_private' => '0',\n+        ]);\n+\n+        $response->assertSessionHasErrors(['url' => 'The url format is invalid.']);\n+\n+        $this->assertDatabaseCount('links', 0);\n+    }\n+\n     public function testStoreRequestWithBrokenUrl(): void\n     {\n         Http::fake([\n-            'example.com' => Http::response('', 500),\n+            'https://bad-example.com' => function () {\n+                throw new ConnectionException('Unable to reach bad-example.com');\n+            },\n         ]);\n \n         $response = $this->post('links', [\n-            'url' => 'example.com',\n+            'url' => 'https://bad-example.com',\n             'title' => null,\n             'description' => null,\n             'lists' => null,\n@@ -207,7 +226,7 @@ public function testStoreRequestWithBrokenUrl(): void\n \n         $this->assertTrue($databaseLink->check_disabled);\n         $this->assertEquals(Link::STATUS_BROKEN, $databaseLink->status);\n-        $this->assertEquals('example.com', $databaseLink->title);\n+        $this->assertEquals('bad-example.com', $databaseLink->title);\n     }\n \n     public function testStoreRequestWithHugeThumbnail(): void"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 2,
        "unique_directories": 3,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "67848ea1b2b2f32ba7d8a59fa1f40584907a1fae",
            "date": "2025-01-05T17:20:20Z",
            "author_login": "Kovah"
          },
          {
            "sha": "fcf58f190c6ea24ba1f9e523f1f5c2124bb5e0c8",
            "date": "2025-01-04T14:43:05Z",
            "author_login": "Lasim"
          },
          {
            "sha": "21da14991d1c2ba27535473eecabce40c8bce955",
            "date": "2025-01-03T16:04:58Z",
            "author_login": "Lasim"
          },
          {
            "sha": "536632067f338f18a56941dc1483e09004f2730d",
            "date": "2024-12-24T11:57:17Z",
            "author_login": "Kovah"
          },
          {
            "sha": "8cf3670d71a8629d33408da76f9d441a1aa933f6",
            "date": "2024-12-24T11:55:48Z",
            "author_login": "Kovah"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.6,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:H/A:N",
    "cwe_id": "CWE-434",
    "description": "LinkAce is a self-hosted archive to collect links of your favorite websites. Prior to 1.15.6, a file upload vulnerability exists in the LinkAce. This issue occurs in the \"Import Bookmarks\" functionality, where malicious HTML files can be uploaded containing JavaScript payloads. These payloads execute when the uploaded links are accessed, leading to potential reflected or persistent XSS scenarios. This vulnerability is fixed in 1.15.6.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-12-27T16:15:25.187",
    "last_modified": "2024-12-27T21:15:08.390",
    "fix_date": "2024-12-24T11:55:48Z"
  },
  "references": [
    {
      "url": "https://github.com/Kovah/LinkAce/commit/8cf3670d71a8629d33408da76f9d441a1aa933f6",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/Kovah/LinkAce/security/advisories/GHSA-2wvv-4576-8862",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/Kovah/LinkAce/security/advisories/GHSA-2wvv-4576-8862",
      "source": "134c704f-9b21-4f2e-91b3-4a467353bcc0",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:09:52.920148",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "LinkAce",
    "owner": "Kovah",
    "created_at": "2018-08-22T18:43:26Z",
    "updated_at": "2025-01-14T02:06:16Z",
    "pushed_at": "2025-01-13T07:41:15Z",
    "size": 7537,
    "stars": 2711,
    "forks": 169,
    "open_issues": 50,
    "watchers": 2711,
    "has_security_policy": false,
    "default_branch": "1.x",
    "protected_branches": [
      "1.x",
      "2.x"
    ],
    "languages": {
      "PHP": 994897,
      "Blade": 305103,
      "Dockerfile": 5442,
      "Shell": 2368
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-3.0"
    },
    "collected_at": "2025-01-14T17:37:07.164936"
  }
}