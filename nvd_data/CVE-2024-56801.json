{
  "cve_id": "CVE-2024-56801",
  "github_data": {
    "repository": "InfotelGLPI/tasklists",
    "fix_commit": "6444026e3d2b8fb22d5e5ab03fb86056e1ac9e43",
    "related_commits": [
      "6444026e3d2b8fb22d5e5ab03fb86056e1ac9e43"
    ],
    "patch_url": "https://github.com/InfotelGLPI/tasklists/commit/6444026e3d2b8fb22d5e5ab03fb86056e1ac9e43.patch",
    "fix_commit_details": {
      "sha": "6444026e3d2b8fb22d5e5ab03fb86056e1ac9e43",
      "commit_date": "2024-12-30T13:18:51Z",
      "author": {
        "login": "tsmr",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Try fix",
        "length": 7,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 102,
        "additions": 70,
        "deletions": 32
      },
      "files": [
        {
          "filename": "ajax/reorder.php",
          "status": "modified",
          "additions": 70,
          "deletions": 32,
          "patch": "@@ -31,38 +31,76 @@\n \n Session::checkLoginUser();\n \n-$dbu   = new DbUtils();\n-$table = $dbu->getTableForItemType('PluginTasklistsStateOrder');\n-\n-// R\u00e9cup\u00e9ration de l'ID du champ \u00e0 modifier\n-$query = \"SELECT id FROM $table\n-            WHERE `plugin_tasklists_tasktypes_id` = {$_POST['plugin_tasklists_tasktypes_id']}\n-               AND `ranking` = {$_POST['old_order']}\";\n-\n-$result = $DB->queryOrDie($query, 'Error');\n-//$result  = $DB->query($query);\n-$first   = $result->fetchAssoc();\n-$id_item = $first['id'];\n-\n-// R\u00e9organisation de tout les champs\n-if ($_POST['old_order'] < $_POST['new_order']) {\n-\n-   $DB->query(\"UPDATE $table SET\n-               `ranking` = `ranking`-1\n-               WHERE `plugin_tasklists_tasktypes_id` = {$_POST['plugin_tasklists_tasktypes_id']}\n-               AND `ranking` > {$_POST['old_order']}\n-               AND `ranking` <= {$_POST['new_order']}\");\n-} else {\n+if (\n+    !array_key_exists('plugin_tasklists_tasktypes_id', $_POST)\n+    || !array_key_exists('old_order', $_POST)\n+    || !array_key_exists('new_order', $_POST)\n+) {\n+    // Missing input\n+    exit();\n+}\n+\n+$table        = PluginTasklistsStateOrder::getTable();\n+$plugin_tasklists_tasktypes_id = (int) $_POST['plugin_tasklists_tasktypes_id'];\n+$old_order    = (int) $_POST['old_order'];\n+$new_order    = (int) $_POST['new_order'];\n+\n+/** @var DBmysql $DB */\n+global $DB;\n+\n+// Retrieve id of field to update\n+$field_iterator = $DB->request(\n+    [\n+        'SELECT' => 'id',\n+        'FROM'   => $table,\n+        'WHERE'  => [\n+            'plugin_tasklists_tasktypes_id' => $plugin_tasklists_tasktypes_id,\n+            'ranking'                     => $old_order,\n+        ],\n+    ],\n+);\n \n-   $DB->query(\"UPDATE $table SET\n-               `ranking` = `ranking`+1\n-               WHERE `plugin_tasklists_tasktypes_id` = {$_POST['plugin_tasklists_tasktypes_id']}\n-               AND `ranking` < {$_POST['old_order']}\n-               AND `ranking` >= {$_POST['new_order']}\");\n+if (0 === $field_iterator->count()) {\n+    // Unknown field\n+    exit();\n+}\n+\n+$field_id = $field_iterator->current()['id'];\n+\n+// Move all elements to their new ranking\n+if ($old_order < $new_order) {\n+    $DB->update(\n+        $table,\n+        [\n+            'ranking' => new \\QueryExpression($DB->quoteName('ranking') . ' - 1'),\n+        ],\n+        [\n+            'plugin_tasklists_tasktypes_id' => $plugin_tasklists_tasktypes_id,\n+            ['ranking'                    => ['>',  $old_order]],\n+            ['ranking'                    => ['<=', $new_order]],\n+        ],\n+    );\n+} else {\n+    $DB->update(\n+        $table,\n+        [\n+            'ranking' => new \\QueryExpression($DB->quoteName('ranking') . ' + 1'),\n+        ],\n+        [\n+            'plugin_fields_containers_id' => $plugin_tasklists_tasktypes_id,\n+            ['ranking'                    => ['<',  $old_order]],\n+            ['ranking'                    => ['>=', $new_order]],\n+        ],\n+    );\n }\n \n-if (isset($id_item) && $id_item > 0) {\n-   $DB->query(\"UPDATE $table SET\n-               `ranking` = {$_POST['new_order']}\n-               WHERE id = $id_item\");\n-}\n\\ No newline at end of file\n+// Update current element\n+$DB->update(\n+    $table,\n+    [\n+        'ranking' => $new_order,\n+    ],\n+    [\n+        'id' => $field_id,\n+    ],\n+);"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "0b1819ec59afb9fdfa21ff6af9e4cae034ed60a0",
            "date": "2024-12-30T13:55:52Z",
            "author_login": "tsmr"
          },
          {
            "sha": "463709ae322c18b4d36b5aa1b09691d27dbdfe3b",
            "date": "2024-12-30T13:55:03Z",
            "author_login": "tsmr"
          },
          {
            "sha": "bb12916e95f821a94e827ff8b5524d7eb77ea89a",
            "date": "2024-12-30T13:54:46Z",
            "author_login": "tsmr"
          },
          {
            "sha": "290d257ccbdf884d0a2f579440242a520bf9f32e",
            "date": "2024-12-30T13:50:26Z",
            "author_login": "transifex-integration[bot]"
          },
          {
            "sha": "5bf9504f651c4eb36a908845fe35df30f4572eb2",
            "date": "2024-12-30T13:50:20Z",
            "author_login": "transifex-integration[bot]"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-89",
    "description": "Tasklists provides plugin tasklists for GLPI. Versions prior to 2.0.4 have a blind SQL injection vulnerability. Version 2.0.4 contains a patch for the vulnerability.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2024-12-30T19:15:08.483",
    "last_modified": "2024-12-30T19:15:08.483",
    "fix_date": "2024-12-30T13:18:51Z"
  },
  "references": [
    {
      "url": "https://github.com/InfotelGLPI/tasklists/commit/6444026e3d2b8fb22d5e5ab03fb86056e1ac9e43",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/InfotelGLPI/tasklists/security/advisories/GHSA-c6fw-xw9x-gwjw",
      "source": "security-advisories@github.com",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:09:52.935849",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "tasklists",
    "owner": "InfotelGLPI",
    "created_at": "2016-01-08T12:40:14Z",
    "updated_at": "2024-12-30T13:55:56Z",
    "pushed_at": "2024-12-30T13:55:53Z",
    "size": 860,
    "stars": 24,
    "forks": 10,
    "open_issues": 14,
    "watchers": 24,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "PHP": 256755,
      "JavaScript": 128761,
      "CSS": 27427,
      "Twig": 2717,
      "Perl": 1337,
      "Shell": 488
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "gpl-2.0"
    },
    "collected_at": "2025-01-14T13:05:21.244484"
  }
}