{
  "cve_id": "CVE-2024-5685",
  "github_data": {
    "repository": "snipe/snipe-it",
    "fix_commit": "34f1ea1c0ecd403047cd1327569ee391a7201cc1",
    "related_commits": [
      "34f1ea1c0ecd403047cd1327569ee391a7201cc1",
      "34f1ea1c0ecd403047cd1327569ee391a7201cc1"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "34f1ea1c0ecd403047cd1327569ee391a7201cc1",
      "commit_date": "2024-05-21T09:00:49Z",
      "author": {
        "login": "snipe",
        "type": "User",
        "stats": {
          "total_commits": 11879,
          "average_weekly_commits": 25.65658747300216,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 416
        }
      },
      "commit_message": {
        "title": "Re-order gating and refactor group syncing",
        "length": 82,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 26,
        "additions": 7,
        "deletions": 19
      },
      "files": [
        {
          "filename": "app/Http/Controllers/Api/UsersController.php",
          "status": "modified",
          "additions": 7,
          "deletions": 19,
          "patch": "@@ -475,7 +475,7 @@ public function update(SaveUserRequest $request, $id)\n         if ($request->has('permissions')) {\n             $permissions_array = $request->input('permissions');\n \n-            // Strip out the superuser permission if the API user isn't a superadmin\n+            // Strip out the individual superuser permission if the API user isn't a superadmin\n             if (! Auth::user()->isSuperUser()) {\n                 unset($permissions_array['superuser']);\n             }\n@@ -493,32 +493,20 @@ public function update(SaveUserRequest $request, $id)\n           \n         if ($user->save()) {\n \n-            // Check if the request has groups passed and has a value\n-            if ($request->filled('groups')) {\n+            // Check if the request has groups passed and has a value, AND that the user us a superuser\n+            if (($request->has('groups')) && (Auth::user()->isSuperUser())) {\n \n                 $validator = Validator::make($request->all(), [\n                     'groups.*' => 'integer|exists:permission_groups,id',\n                 ]);\n-                \n-                if ($validator->fails()){\n-                    return response()->json(Helper::formatStandardApiResponse('error', null, $user->getErrors()));\n-                }\n \n-                // Only save groups if the user is a superuser\n-                if (Auth::user()->isSuperUser()) {\n-                    $user->groups()->sync($request->input('groups'));\n-                }\n+                $user->groups()->sync($request->input('groups'));\n \n-            // The groups field has been passed but it is null, so we should blank it out\n-            } elseif ($request->has('groups')) {\n-                \n-                // Only save groups if the user is a superuser\n-                if (Auth::user()->isSuperUser()) {\n-                    $user->groups()->sync($request->input('groups'));\n+                if ($validator->fails()) {\n+                    return response()->json(Helper::formatStandardApiResponse('error', null, $user->getErrors()));\n                 }\n-            }\n-\n \n+            }\n             return response()->json(Helper::formatStandardApiResponse('success', (new UsersTransformer)->transformUser($user), trans('admin/users/message.success.update')));\n         }\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "5ac6caf257b5edf2de657ddd061855791d127629",
            "date": "2025-01-22T21:49:55Z",
            "author_login": "snipe"
          },
          {
            "sha": "36f460d32b930b4fce243cb2875cb95b8dbc7544",
            "date": "2025-01-22T21:48:03Z",
            "author_login": "snipe"
          },
          {
            "sha": "802fcbafa0be89e55fcb81e111b8d2d3631ea5c5",
            "date": "2025-01-22T18:50:12Z",
            "author_login": "snipe"
          },
          {
            "sha": "1098b8cd9d5534091a0b7d222cfec169836db084",
            "date": "2025-01-22T18:21:30Z",
            "author_login": "marcusmoore"
          },
          {
            "sha": "da8999f59a3c88728268bb8a62758eaa8494087d",
            "date": "2025-01-22T18:21:18Z",
            "author_login": "marcusmoore"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 7.6,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:U/C:H/I:H/A:L",
    "cwe_id": "CWE-862",
    "description": "Users with \"User:edit\" and \"Self:api\" permissions\u00a0can promote or demote themselves or other users by performing changes to the group's memberships via API call.This issue affects snipe-it: from v4.6.17 through v6.4.1.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-06-14T10:15:10.817",
    "last_modified": "2024-11-21T09:48:09.570",
    "fix_date": "2024-05-21T09:00:49Z"
  },
  "references": [
    {
      "url": "https://advisory.checkmarx.net/?search=CVE-2024-5685",
      "source": "596c5446-0ce5-4ba2-aa66-48b3b757a647",
      "tags": []
    },
    {
      "url": "https://devhub.checkmarx.com/cve-details/CVE-2024-5685/",
      "source": "596c5446-0ce5-4ba2-aa66-48b3b757a647",
      "tags": []
    },
    {
      "url": "https://github.com/snipe/snipe-it/commit/34f1ea1c0ecd403047cd1327569ee391a7201cc1",
      "source": "596c5446-0ce5-4ba2-aa66-48b3b757a647",
      "tags": []
    },
    {
      "url": "https://github.com/snipe/snipe-it/pull/14745",
      "source": "596c5446-0ce5-4ba2-aa66-48b3b757a647",
      "tags": []
    },
    {
      "url": "https://github.com/snipe/snipe-it/releases/tag/v6.4.2",
      "source": "596c5446-0ce5-4ba2-aa66-48b3b757a647",
      "tags": []
    },
    {
      "url": "https://advisory.checkmarx.net/?search=CVE-2024-5685",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://devhub.checkmarx.com/cve-details/CVE-2024-5685/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/snipe/snipe-it/commit/34f1ea1c0ecd403047cd1327569ee391a7201cc1",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/snipe/snipe-it/pull/14745",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/snipe/snipe-it/releases/tag/v6.4.2",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:28.822991",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "snipe-it",
    "owner": "snipe",
    "created_at": "2013-11-12T22:25:47Z",
    "updated_at": "2025-01-26T02:55:32Z",
    "pushed_at": "2025-01-23T13:04:35Z",
    "size": 225352,
    "stars": 11561,
    "forks": 3267,
    "open_issues": 1802,
    "watchers": 11561,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "PHP": 18242858,
      "JavaScript": 1859768,
      "Blade": 1579878,
      "Less": 196531,
      "CSS": 79574,
      "Shell": 43713,
      "Dockerfile": 4408,
      "Python": 522,
      "Jinja": 229,
      "Procfile": 57
    },
    "commit_activity": {
      "total_commits_last_year": 3742,
      "avg_commits_per_week": 71.96153846153847,
      "days_active_last_year": 250
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "agpl-3.0"
    },
    "collected_at": "2025-01-26T07:36:10.425407"
  }
}