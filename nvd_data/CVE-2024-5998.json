{
  "cve_id": "CVE-2024-5998",
  "github_data": {
    "repository": "langchain-ai/langchain",
    "fix_commit": "604dfe2d99246b0c09f047c604f0c63eafba31e7",
    "related_commits": [
      "604dfe2d99246b0c09f047c604f0c63eafba31e7"
    ],
    "patch_url": "https://github.com/langchain-ai/langchain/commit/604dfe2d99246b0c09f047c604f0c63eafba31e7.patch",
    "fix_commit_details": {
      "sha": "604dfe2d99246b0c09f047c604f0c63eafba31e7",
      "commit_date": "2024-07-19T18:51:35Z",
      "author": {
        "login": "eyurtsev",
        "type": "User",
        "stats": {
          "total_commits": 822,
          "average_weekly_commits": 7.0256410256410255,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 81
        }
      },
      "commit_message": {
        "title": "community[patch]: Force opt-in for WebResearchRetriever (CVE-2024-3095) (#24451)",
        "length": 939,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 31,
        "additions": 30,
        "deletions": 1
      },
      "files": [
        {
          "filename": "libs/community/langchain_community/retrievers/web_research.py",
          "status": "modified",
          "additions": 30,
          "deletions": 1,
          "patch": "@@ -1,6 +1,6 @@\n import logging\n import re\n-from typing import List, Optional\n+from typing import Any, List, Optional\n \n from langchain.chains import LLMChain\n from langchain.chains.prompt_selector import ConditionalPromptSelector\n@@ -81,6 +81,35 @@ class WebResearchRetriever(BaseRetriever):\n         \"check .netrc for proxy configuration\",\n     )\n \n+    allow_dangerous_requests: bool = False\n+    \"\"\"A flag to force users to acknowledge the risks of SSRF attacks when using \n+    this retriever.\n+    \n+    Users should set this flag to `True` if they have taken the necessary precautions\n+    to prevent SSRF attacks when using this retriever.\n+    \n+    For example, users can run the requests through a properly configured\n+    proxy and prevent the crawler from accidentally crawling internal resources.\n+    \"\"\"\n+\n+    def __init__(self, **kwargs: Any) -> None:\n+        \"\"\"Initialize the retriever.\"\"\"\n+        allow_dangerous_requests = kwargs.get(\"allow_dangerous_requests\", False)\n+        if not allow_dangerous_requests:\n+            raise ValueError(\n+                \"WebResearchRetriever crawls URLs surfaced through \"\n+                \"the provided search engine. It is possible that some of those URLs \"\n+                \"will end up pointing to machines residing on an internal network, \"\n+                \"leading\"\n+                \"to an SSRF (Server-Side Request Forgery) attack. \"\n+                \"To protect yourself against that risk, you can run the requests \"\n+                \"through a proxy and prevent the crawler from accidentally crawling \"\n+                \"internal resources.\"\n+                \"If've taken the necessary precautions, you can set \"\n+                \"`allow_dangerous_requests` to `True`.\"\n+            )\n+        super().__init__(**kwargs)\n+\n     @classmethod\n     def from_llm(\n         cls,"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "c55af44711ba9180ce8a51a55a385f31023341b5",
            "date": "2025-01-13T23:32:40Z",
            "author_login": "efriis"
          },
          {
            "sha": "cdf3a17e55bd594341c390051dc20c5e5a74b966",
            "date": "2025-01-13T21:25:00Z",
            "author_login": "efriis"
          },
          {
            "sha": "1bf6576709b8c4a4014d5f62cf955c19df1fdf02",
            "date": "2025-01-13T18:28:18Z",
            "author_login": "ccurme"
          },
          {
            "sha": "e156b372fb6da26deceffaff2f42aab1036da3b6",
            "date": "2025-01-13T16:00:02Z",
            "author_login": "varjas"
          },
          {
            "sha": "335ca3a606009fa7f10b7c43e4b55154668cb288",
            "date": "2025-01-13T15:45:39Z",
            "author_login": "NikhilShahi"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-502",
    "description": "A vulnerability in the FAISS.deserialize_from_bytes function of langchain-ai/langchain allows for pickle deserialization of untrusted data. This can lead to the execution of arbitrary commands via the os.system function. The issue affects the latest version of the product.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2024-09-17T12:15:02.977",
    "last_modified": "2024-09-20T12:31:20.110",
    "fix_date": "2024-07-19T18:51:35Z"
  },
  "references": [
    {
      "url": "https://github.com/langchain-ai/langchain/commit/604dfe2d99246b0c09f047c604f0c63eafba31e7",
      "source": "security@huntr.dev",
      "tags": []
    },
    {
      "url": "https://huntr.com/bounties/fa3a2753-57c3-4e08-a176-d7a3ffda28fe",
      "source": "security@huntr.dev",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:09:00.125004",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "langchain",
    "owner": "langchain-ai",
    "created_at": "2022-10-17T02:58:36Z",
    "updated_at": "2025-01-14T13:08:38Z",
    "pushed_at": "2025-01-13T23:32:41Z",
    "size": 376391,
    "stars": 98220,
    "forks": 15956,
    "open_issues": 435,
    "watchers": 98220,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [],
    "languages": {
      "Jupyter Notebook": 31945259,
      "Python": 19475935,
      "MDX": 56545,
      "Makefile": 55385,
      "Shell": 19562,
      "XSLT": 19446,
      "HTML": 9026,
      "TeX": 2242,
      "Dockerfile": 1311,
      "JavaScript": 471
    },
    "commit_activity": {
      "total_commits_last_year": 7057,
      "avg_commits_per_week": 135.71153846153845,
      "days_active_last_year": 327
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T13:11:47.805811"
  }
}