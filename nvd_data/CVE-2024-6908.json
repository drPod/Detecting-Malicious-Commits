{
  "cve_id": "CVE-2024-6908",
  "github_data": {
    "repository": "yugabyte/yugabyte-db",
    "fix_commit": "03b193de40b79329439bb9968a7d27a1cc57d662",
    "related_commits": [
      "03b193de40b79329439bb9968a7d27a1cc57d662",
      "68f01680c565be2a370cfb7734a1b3721d6778bb",
      "03b193de40b79329439bb9968a7d27a1cc57d662",
      "68f01680c565be2a370cfb7734a1b3721d6778bb"
    ],
    "patch_url": "https://github.com/yugabyte/yugabyte-db/commit/03b193de40b79329439bb9968a7d27a1cc57d662.patch",
    "fix_commit_details": {
      "sha": "03b193de40b79329439bb9968a7d27a1cc57d662",
      "commit_date": "2024-03-05T05:51:03Z",
      "author": {
        "login": "vpatibandla-yb",
        "type": "User",
        "stats": {
          "total_commits": 134,
          "average_weekly_commits": 0.15783274440518258,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 84
        }
      },
      "commit_message": {
        "title": "[Backport 2.18][PLAT-10470] Improper Authorization: Admin can escalate privileges to SuperAdmin using manual PUT Request. Admin can create a SuperAdmin",
        "length": 606,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 57,
        "additions": 56,
        "deletions": 1
      },
      "files": [
        {
          "filename": "managed/src/main/java/com/yugabyte/yw/controllers/UsersController.java",
          "status": "modified",
          "additions": 20,
          "deletions": 1,
          "patch": "@@ -135,6 +135,11 @@ public Result create(UUID customerUUID, Http.Request request) {\n       formData.setPassword(generatedPassword); // Password is not used.\n     }\n \n+    if (formData.getRole() == Users.Role.SuperAdmin) {\n+      throw new PlatformServiceException(BAD_REQUEST, \"Cannot create an user as SuperAdmin\");\n+    }\n+\n+    // Validate password.\n     passwordPolicyService.checkPasswordPolicy(customerUUID, formData.getPassword());\n     Users user =\n         Users.create(\n@@ -232,7 +237,21 @@ public Result changeRole(UUID customerUUID, UUID userUUID, String role, Http.Req\n     if (Role.SuperAdmin == user.getRole()) {\n       throw new PlatformServiceException(BAD_REQUEST, \"Cannot change super admin role.\");\n     }\n-    user.setRole(Role.valueOf(role));\n+\n+    Users.Role userRole = null;\n+    try {\n+      userRole = Users.Role.valueOf(role);\n+    } catch (IllegalArgumentException ex) {\n+      throw new PlatformServiceException(BAD_REQUEST, \"Role name provided is not supported\");\n+    }\n+\n+    if (userRole == null) {\n+      throw new PlatformServiceException(BAD_REQUEST, \"Role name provided is not supported\");\n+    } else if (userRole == Users.Role.SuperAdmin) {\n+      throw new PlatformServiceException(BAD_REQUEST, \"Cannot edit the user role to SuperAdmin\");\n+    }\n+\n+    user.setRole(userRole);\n     user.save();\n     auditService()\n         .createAuditEntryWithReqBody("
        },
        {
          "filename": "managed/src/test/java/com/yugabyte/yw/controllers/UsersControllerTest.java",
          "status": "modified",
          "additions": 36,
          "deletions": 0,
          "patch": "@@ -114,6 +114,24 @@ public void testCreateUserWithValidToken() throws IOException {\n     assertAuditEntry(1, customer1.getUuid());\n   }\n \n+  @Test\n+  public void testCreateSuperAdminUserWithValidToken() throws IOException {\n+    Http.Cookie validCookie = Http.Cookie.builder(\"authToken\", authToken1).build();\n+    ObjectNode params = Json.newObject();\n+    params.put(\"email\", \"foo@bar.com\");\n+    params.put(\"password\", \"new-Password1\");\n+    params.put(\"confirmPassword\", \"new-Password1\");\n+    params.put(\"role\", \"SuperAdmin\");\n+    Result result =\n+        assertPlatformException(\n+            () ->\n+                route(\n+                    fakeRequest(\"POST\", String.format(baseRoute, customer1.getUuid()))\n+                        .cookie(validCookie)\n+                        .bodyJson(params)));\n+    assertEquals(BAD_REQUEST, result.status());\n+  }\n+\n   @Test\n   public void testDeleteUserWithValidToken() throws IOException {\n     Http.Cookie validCookie = Http.Cookie.builder(\"authToken\", authToken1).build();\n@@ -165,6 +183,24 @@ public void testRoleChangeSuperAdmin() throws IOException {\n     assertEquals(result.status(), BAD_REQUEST);\n   }\n \n+  @Test\n+  public void testRoleChangeToSuperAdmin() throws IOException {\n+    Users testUser1 = ModelFactory.testUser(customer1, \"tc3@test.com\", Role.Admin);\n+    assertEquals(testUser1.getRole(), Role.Admin);\n+    Http.Cookie validCookie = Http.Cookie.builder(\"authToken\", authToken1).build();\n+    Result result =\n+        assertPlatformException(\n+            () ->\n+                route(\n+                    fakeRequest(\n+                            \"PUT\",\n+                            String.format(\n+                                \"%s/%s?role=SuperAdmin\",\n+                                String.format(baseRoute, customer1.getUuid()), testUser1.getUuid()))\n+                        .cookie(validCookie)));\n+    assertEquals(result.status(), BAD_REQUEST);\n+  }\n+\n   @Test\n   public void testPasswordChangeInvalid() throws IOException {\n     Users testUser1 = ModelFactory.testUser(customer1, \"tc3@test.com\", Role.Admin);"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 1,
        "unique_directories": 2,
        "max_directory_depth": 8
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "ded9b1c3380089c9b330862ac274939d4f187e65",
            "date": "2025-01-14T18:26:02Z",
            "author_login": "timothy-e"
          },
          {
            "sha": "a5efcb9b27fb577e32b7ed0ad7c13dc3d1045417",
            "date": "2025-01-14T18:24:54Z",
            "author_login": "timothy-e"
          },
          {
            "sha": "2febce65186a83b35c532a90303c4994d5108ae3",
            "date": "2025-01-13T19:26:45Z",
            "author_login": "Sahith02"
          },
          {
            "sha": "e5ced7fec738731d6de61b0fb77f4e287b44cf18",
            "date": "2025-01-13T23:51:15Z",
            "author_login": "hari90"
          },
          {
            "sha": "800228d69f1eaee71114ad334ecdc68ac422d508",
            "date": "2025-01-08T20:10:51Z",
            "author_login": "shubin-yb"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-269",
    "description": "Improper privilege management in Yugabyte Platform allows authenticated admin users to escalate privileges to SuperAdmin via a crafted PUT HTTP request, potentially leading to unauthorized access to sensitive system functions and data.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2024-07-19T15:15:10.747",
    "last_modified": "2024-11-21T09:50:31.250",
    "fix_date": "2024-03-05T05:51:03Z"
  },
  "references": [
    {
      "url": "https://github.com/yugabyte/yugabyte-db/commit/03b193de40b79329439bb9968a7d27a1cc57d662",
      "source": "security@yugabyte.com",
      "tags": []
    },
    {
      "url": "https://github.com/yugabyte/yugabyte-db/commit/68f01680c565be2a370cfb7734a1b3721d6778bb",
      "source": "security@yugabyte.com",
      "tags": []
    },
    {
      "url": "https://github.com/yugabyte/yugabyte-db/commit/03b193de40b79329439bb9968a7d27a1cc57d662",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    },
    {
      "url": "https://github.com/yugabyte/yugabyte-db/commit/68f01680c565be2a370cfb7734a1b3721d6778bb",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:31.498588",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "yugabyte-db",
    "owner": "yugabyte",
    "created_at": "2017-10-05T21:56:00Z",
    "updated_at": "2025-01-14T11:02:52Z",
    "pushed_at": "2025-01-14T13:08:33Z",
    "size": 785267,
    "stars": 9154,
    "forks": 1096,
    "open_issues": 6564,
    "watchers": 9154,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "2.14-PLAT-9385",
      "2.14",
      "2.14.0",
      "2.14.0.0-b94-and-session-id-to-transaction-id-linkage",
      "2.14.0.0-b94-session-id-to-transaction-id-linkage",
      "2.14.0.0-b94-with-session-id-to-transaction-id-linkage",
      "2.14.2",
      "2.14.3",
      "2.14.5",
      "2.14.6",
      "2.14.9",
      "2.14.10",
      "2.14.10.2",
      "2.14.11",
      "2.14.13",
      "2.16",
      "2.16.0",
      "2.16.0.5001",
      "2.16.0.5002",
      "2.16.1",
      "2.16.2",
      "2.16.3",
      "2.16.5",
      "2.16.5.7018",
      "2.16.6",
      "2.16.7",
      "2.16.8",
      "2.18",
      "2.18.0",
      "2.18.0.1000"
    ],
    "languages": {
      "C": 49017240,
      "C++": 40553135,
      "Java": 24628925,
      "PLpgSQL": 18030832,
      "TypeScript": 6033835,
      "Python": 3151385,
      "Go": 2421482,
      "Perl": 2002906,
      "JavaScript": 1945698,
      "Shell": 1036617,
      "Yacc": 956295,
      "Makefile": 419246,
      "CMake": 362029,
      "SCSS": 327855,
      "Mermaid": 276977,
      "Lex": 254480,
      "Jupyter Notebook": 192984,
      "M4": 192961,
      "Ruby": 175500,
      "Scala": 84823,
      "XSLT": 71494,
      "PLSQL": 71391,
      "Jinja": 64070,
      "HTML": 42134,
      "Mustache": 20922,
      "Dockerfile": 18213,
      "Batchfile": 15477,
      "CSS": 11501,
      "XS": 7034,
      "PHP": 5378,
      "Emacs Lisp": 4164,
      "DTrace": 3451,
      "Assembly": 3266,
      "Roff": 1895,
      "sed": 1253,
      "Meson": 1240,
      "Smarty": 138,
      "TeX": 26
    },
    "commit_activity": {
      "total_commits_last_year": 7506,
      "avg_commits_per_week": 144.34615384615384,
      "days_active_last_year": 341
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T13:35:15.967707"
  }
}