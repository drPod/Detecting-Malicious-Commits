{
  "cve_id": "CVE-2024-6985",
  "github_data": {
    "repository": "parisneo/lollms",
    "fix_commit": "28ee567a9a120967215ff19b96ab7515ce469620",
    "related_commits": [
      "28ee567a9a120967215ff19b96ab7515ce469620"
    ],
    "patch_url": "https://github.com/parisneo/lollms/commit/28ee567a9a120967215ff19b96ab7515ce469620.patch",
    "fix_commit_details": {
      "sha": "28ee567a9a120967215ff19b96ab7515ce469620",
      "commit_date": "2024-07-21T22:57:22Z",
      "author": {
        "login": "ParisNeo",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Removed windows absolute paths",
        "length": 30,
        "has_description": false,
        "references_issue": false
      },
      "stats": {
        "total": 50,
        "additions": 43,
        "deletions": 7
      },
      "files": [
        {
          "filename": "lollms/security.py",
          "status": "modified",
          "additions": 43,
          "deletions": 7,
          "patch": "@@ -183,10 +183,11 @@ def sanitize_path(path: str, allow_absolute_path: bool = False, error_text=\"Abso\n \n     # Normalize path to use forward slashes\n     path = path.replace('\\\\', '/')\n-\n-    if not allow_absolute_path and path.strip().startswith(\"/\"):\n+    path = path.strip()\n+    if not allow_absolute_path and (path.startswith(\"/\") or (len(path) == 2 and path[1] == ':')):\n         raise HTTPException(status_code=400, detail=exception_text)\n \n+\n     # Regular expression to detect patterns like \"....\", multiple forward slashes, and command injection attempts like $(whoami)\n     suspicious_patterns = re.compile(r'(\\.\\.+)|(/+/)|(\\$\\(.*\\))')\n \n@@ -288,8 +289,43 @@ def is_allowed_url(url):\n \n \n if __name__==\"__main__\":\n-    sanitize_path_from_endpoint(\"main\")\n-    sanitize_path_from_endpoint(\"cat/main\")\n-    print(\"Main passed\")\n-    sanitize_path_from_endpoint(\".../user\")\n-    print(\"hi\")\n+    test_cases = [\n+        # Unix-style paths\n+        (\"valid/path/to/file.txt\", False),\n+        (\"../../etc/passwd\", False),\n+        (\"/absolute/path/file.txt\", False),\n+        (\"relative/path/file.txt\", False),\n+        (\"valid/path/with/..\", False),\n+        (\"valid/path/with/./file.txt\", False),\n+        (\"another/valid/path/file.txt\", True),\n+        (\"/absolute/path/allowed.txt\", True),\n+        (\"$(whoami)\", False),\n+        (\"path/with/unauthorized&chars\", False),\n+        (None, False),\n+\n+        # Windows-style paths\n+        (r\"valid\\path\\to\\file.txt\", False),\n+        (r\"..\\..\\etc\\passwd\", False),\n+        (r\"C:\\absolute\\path\\file.txt\", False),\n+        (r\"relative\\path\\file.txt\", False),\n+        (r\"valid\\path\\with\\..\", False),\n+        (r\"valid\\path\\with\\.\\file.txt\", False),\n+        (r\"another\\valid\\path\\file.txt\", True),\n+        (r\"C:\\absolute\\path\\allowed.txt\", True),\n+        (r\"$(whoami)\", False),\n+        (r\"path\\with\\unauthorized&chars\", False),\n+\n+        # New test cases with C: drive\n+        (r\"C:\\valid\\path\\to\\file.txt\", False),\n+        (r\"C:\\another\\valid\\path\\file.txt\", True),\n+        (r\"C:\\..\\etc\\passwd\", False),\n+        (r\"C:\\valid\\path\\with\\..\", False),\n+        (r\"C:\", False),\n+    ]\n+\n+    for path, allow_absolute in test_cases:\n+        try:\n+            sanitized = sanitize_path(path, allow_absolute)\n+            print(f\"Original: {path}, Sanitized: {sanitized}\")\n+        except HTTPException as e:\n+            print(f\"Original: {path}, Exception: {e.detail}\")"
        }
      ],
      "file_patterns": {
        "security_files": 1,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 1
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "6d1c0b6b697f96b69e447ee5eccde642d4b278a2",
            "date": "2025-01-14T10:04:38Z",
            "author_login": "ParisNeo"
          },
          {
            "sha": "3f9987e439cdd13608436a6ac404618090a921b8",
            "date": "2025-01-13T00:58:56Z",
            "author_login": "ParisNeo"
          },
          {
            "sha": "f995c304a0bc604cc7016dc88df416d56e3c105b",
            "date": "2025-01-10T16:32:16Z",
            "author_login": "ParisNeo"
          },
          {
            "sha": "12ca2678c789a75ad763c31fd1df88445b19a135",
            "date": "2025-01-09T07:56:12Z",
            "author_login": "ParisNeo"
          },
          {
            "sha": "e6dc54617cb983cfe884bf48fe9bd64c727824e9",
            "date": "2025-01-08T23:52:02Z",
            "author_login": "ParisNeo"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 4.4,
    "cvss_vector": "CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N",
    "cwe_id": "CWE-23",
    "description": "A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms-webui. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.",
    "attack_vector": "LOCAL",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-10-11T16:15:14.657",
    "last_modified": "2024-11-15T17:10:59.157",
    "fix_date": "2024-07-21T22:57:22Z"
  },
  "references": [
    {
      "url": "https://github.com/parisneo/lollms/commit/28ee567a9a120967215ff19b96ab7515ce469620",
      "source": "security@huntr.dev",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://huntr.com/bounties/79c11579-47d8-4e68-8466-b47c3bf5ef6a",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:09:02.134334",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "lollms",
    "owner": "parisneo",
    "created_at": "2023-06-02T10:46:33Z",
    "updated_at": "2025-01-14T10:04:43Z",
    "pushed_at": "2025-01-14T10:04:39Z",
    "size": 7673,
    "stars": 280,
    "forks": 51,
    "open_issues": 16,
    "watchers": 280,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "Python": 1513527,
      "Shell": 30804,
      "Batchfile": 16275,
      "HTML": 6350,
      "Jupyter Notebook": 4229,
      "C++": 3433,
      "Dockerfile": 957,
      "Makefile": 294
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "apache-2.0"
    },
    "collected_at": "2025-01-14T14:22:31.487113"
  }
}