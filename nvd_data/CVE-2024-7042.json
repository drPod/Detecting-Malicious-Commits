{
  "cve_id": "CVE-2024-7042",
  "github_data": {
    "repository": "langchain-ai/langchainjs",
    "fix_commit": "615b9d9ab30a2d23a2f95fb8d7acfdf4b41ad7a6",
    "related_commits": [
      "615b9d9ab30a2d23a2f95fb8d7acfdf4b41ad7a6"
    ],
    "patch_url": "https://github.com/langchain-ai/langchainjs/commit/615b9d9ab30a2d23a2f95fb8d7acfdf4b41ad7a6.patch",
    "fix_commit_details": {
      "sha": "615b9d9ab30a2d23a2f95fb8d7acfdf4b41ad7a6",
      "commit_date": "2024-09-17T02:37:21Z",
      "author": {
        "login": "AyushExel",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "feat(community): Remove required param from LanceDB integration (#6706)",
        "length": 122,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 236,
        "additions": 159,
        "deletions": 77
      },
      "files": [
        {
          "filename": "examples/package.json",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -102,7 +102,7 @@\n     \"typeorm\": \"^0.3.20\",\n     \"typesense\": \"^1.5.3\",\n     \"uuid\": \"^10.0.0\",\n-    \"vectordb\": \"^0.1.4\",\n+    \"vectordb\": \"^0.9.0\",\n     \"voy-search\": \"0.6.2\",\n     \"weaviate-ts-client\": \"^2.0.0\",\n     \"zod\": \"^3.22.4\","
        },
        {
          "filename": "examples/src/indexes/vector_stores/lancedb/fromDocs.ts",
          "status": "modified",
          "additions": 16,
          "deletions": 11,
          "patch": "@@ -4,24 +4,29 @@ import { TextLoader } from \"langchain/document_loaders/fs/text\";\n import fs from \"node:fs/promises\";\n import path from \"node:path\";\n import os from \"node:os\";\n-import { connect } from \"vectordb\";\n \n // Create docs with a loader\n const loader = new TextLoader(\"src/document_loaders/example_data/example.txt\");\n const docs = await loader.load();\n \n export const run = async () => {\n+  const vectorStore = await LanceDB.fromDocuments(docs, new OpenAIEmbeddings());\n+\n+  const resultOne = await vectorStore.similaritySearch(\"hello world\", 1);\n+  console.log(resultOne);\n+\n+  // [\n+  //   Document {\n+  //     pageContent: 'Foo\\nBar\\nBaz\\n\\n',\n+  //     metadata: { source: 'src/document_loaders/example_data/example.txt' }\n+  //   }\n+  // ]\n+};\n+\n+export const run_with_existing_table = async () => {\n   const dir = await fs.mkdtemp(path.join(os.tmpdir(), \"lancedb-\"));\n-  const db = await connect(dir);\n-  const table = await db.createTable(\"vectors\", [\n-    { vector: Array(1536), text: \"sample\", source: \"a\" },\n-  ]);\n-\n-  const vectorStore = await LanceDB.fromDocuments(\n-    docs,\n-    new OpenAIEmbeddings(),\n-    { table }\n-  );\n+\n+  const vectorStore = await LanceDB.fromDocuments(docs, new OpenAIEmbeddings());\n \n   const resultOne = await vectorStore.similaritySearch(\"hello world\", 1);\n   console.log(resultOne);"
        },
        {
          "filename": "examples/src/indexes/vector_stores/lancedb/fromTexts.ts",
          "status": "modified",
          "additions": 13,
          "deletions": 8,
          "patch": "@@ -1,22 +1,27 @@\n import { LanceDB } from \"@langchain/community/vectorstores/lancedb\";\n import { OpenAIEmbeddings } from \"@langchain/openai\";\n-import { connect } from \"vectordb\";\n import * as fs from \"node:fs/promises\";\n import * as path from \"node:path\";\n import os from \"node:os\";\n \n export const run = async () => {\n-  const dir = await fs.mkdtemp(path.join(os.tmpdir(), \"lancedb-\"));\n-  const db = await connect(dir);\n-  const table = await db.createTable(\"vectors\", [\n-    { vector: Array(1536), text: \"sample\", id: 1 },\n-  ]);\n+  const vectorStore = await LanceDB.fromTexts(\n+    [\"Hello world\", \"Bye bye\", \"hello nice world\"],\n+    [{ id: 2 }, { id: 1 }, { id: 3 }],\n+    new OpenAIEmbeddings()\n+  );\n \n+  const resultOne = await vectorStore.similaritySearch(\"hello world\", 1);\n+  console.log(resultOne);\n+  // [ Document { pageContent: 'hello nice world', metadata: { id: 3 } } ]\n+};\n+\n+export const run_with_existing_table = async () => {\n+  const dir = await fs.mkdtemp(path.join(os.tmpdir(), \"lancedb-\"));\n   const vectorStore = await LanceDB.fromTexts(\n     [\"Hello world\", \"Bye bye\", \"hello nice world\"],\n     [{ id: 2 }, { id: 1 }, { id: 3 }],\n-    new OpenAIEmbeddings(),\n-    { table }\n+    new OpenAIEmbeddings()\n   );\n \n   const resultOne = await vectorStore.similaritySearch(\"hello world\", 1);"
        },
        {
          "filename": "libs/langchain-community/package.json",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -207,7 +207,7 @@\n     \"typescript\": \"~5.1.6\",\n     \"typesense\": \"^1.5.3\",\n     \"usearch\": \"^1.1.1\",\n-    \"vectordb\": \"^0.1.4\",\n+    \"vectordb\": \"^0.9.0\",\n     \"voy-search\": \"0.6.2\",\n     \"weaviate-ts-client\": \"^1.4.0\",\n     \"web-auth-library\": \"^1.0.3\","
        },
        {
          "filename": "libs/langchain-community/src/vectorstores/lancedb.ts",
          "status": "modified",
          "additions": 34,
          "deletions": 9,
          "patch": "@@ -1,4 +1,4 @@\n-import { Table } from \"vectordb\";\n+import { connect, Table, Connection, WriteMode } from \"vectordb\";\n import type { EmbeddingsInterface } from \"@langchain/core/embeddings\";\n import { VectorStore } from \"@langchain/core/vectorstores\";\n import { Document } from \"@langchain/core/documents\";\n@@ -8,8 +8,11 @@ import { Document } from \"@langchain/core/documents\";\n  * table and an optional textKey.\n  */\n export type LanceDBArgs = {\n-  table: Table;\n+  table?: Table;\n   textKey?: string;\n+  uri?: string;\n+  tableName?: string;\n+  mode?: WriteMode;\n };\n \n /**\n@@ -18,15 +21,24 @@ export type LanceDBArgs = {\n  * embeddings.\n  */\n export class LanceDB extends VectorStore {\n-  private table: Table;\n+  private table?: Table;\n \n   private textKey: string;\n \n-  constructor(embeddings: EmbeddingsInterface, args: LanceDBArgs) {\n-    super(embeddings, args);\n-    this.table = args.table;\n+  private uri: string;\n+\n+  private tableName: string;\n+\n+  private mode?: WriteMode;\n+\n+  constructor(embeddings: EmbeddingsInterface, args?: LanceDBArgs) {\n+    super(embeddings, args || {});\n+    this.table = args?.table;\n     this.embeddings = embeddings;\n-    this.textKey = args.textKey || \"text\";\n+    this.textKey = args?.textKey || \"text\";\n+    this.uri = args?.uri || \"~/lancedb\";\n+    this.tableName = args?.tableName || \"langchain\";\n+    this.mode = args?.mode || WriteMode.Overwrite;\n   }\n \n   /**\n@@ -71,6 +83,14 @@ export class LanceDB extends VectorStore {\n       });\n       data.push(record);\n     }\n+    if (!this.table) {\n+      const db: Connection = await connect(this.uri);\n+      this.table = await db.createTable(this.tableName, data, {\n+        writeMode: this.mode,\n+      });\n+\n+      return;\n+    }\n     await this.table.add(data);\n   }\n \n@@ -85,6 +105,11 @@ export class LanceDB extends VectorStore {\n     query: number[],\n     k: number\n   ): Promise<[Document, number][]> {\n+    if (!this.table) {\n+      throw new Error(\n+        \"Table not found. Please add vectors to the table first.\"\n+      );\n+    }\n     const results = await this.table.search(query).limit(k).execute();\n \n     const docsAndScore: [Document, number][] = [];\n@@ -119,7 +144,7 @@ export class LanceDB extends VectorStore {\n     texts: string[],\n     metadatas: object[] | object,\n     embeddings: EmbeddingsInterface,\n-    dbConfig: LanceDBArgs\n+    dbConfig?: LanceDBArgs\n   ): Promise<LanceDB> {\n     const docs: Document[] = [];\n     for (let i = 0; i < texts.length; i += 1) {\n@@ -143,7 +168,7 @@ export class LanceDB extends VectorStore {\n   static async fromDocuments(\n     docs: Document[],\n     embeddings: EmbeddingsInterface,\n-    dbConfig: LanceDBArgs\n+    dbConfig?: LanceDBArgs\n   ): Promise<LanceDB> {\n     const instance = new this(embeddings, dbConfig);\n     await instance.addDocuments(docs);"
        },
        {
          "filename": "libs/langchain-community/src/vectorstores/tests/lancedb.int.test.ts",
          "status": "modified",
          "additions": 24,
          "deletions": 0,
          "patch": "@@ -45,3 +45,27 @@ describe(\"LanceDB\", () => {\n     expect(resultsTwo.length).toBe(5);\n   });\n });\n+\n+describe(\"LanceDB empty schema\", () => {\n+  test(\"Test fromTexts + addDocuments\", async () => {\n+    const embeddings = new OpenAIEmbeddings();\n+    const vectorStore = await LanceDB.fromTexts(\n+      [\"hello bye\", \"hello world\", \"bye bye\"],\n+      [{ id: 1 }, { id: 2 }, { id: 3 }],\n+      embeddings\n+    );\n+\n+    const results = await vectorStore.similaritySearch(\"hello bye\", 10);\n+    expect(results.length).toBe(3);\n+\n+    await vectorStore.addDocuments([\n+      new Document({\n+        pageContent: \"a new world\",\n+        metadata: { id: 4 },\n+      }),\n+    ]);\n+\n+    const resultsTwo = await vectorStore.similaritySearch(\"hello bye\", 10);\n+    expect(resultsTwo.length).toBe(4);\n+  });\n+});"
        },
        {
          "filename": "yarn.lock",
          "status": "modified",
          "additions": 70,
          "deletions": 47,
          "patch": "@@ -251,24 +251,6 @@ __metadata:\n   languageName: node\n   linkType: hard\n \n-\"@apache-arrow/ts@npm:^12.0.0\":\n-  version: 12.0.0\n-  resolution: \"@apache-arrow/ts@npm:12.0.0\"\n-  dependencies:\n-    \"@types/command-line-args\": 5.2.0\n-    \"@types/command-line-usage\": 5.0.2\n-    \"@types/node\": 18.14.5\n-    \"@types/pad-left\": 2.1.1\n-    command-line-args: 5.2.1\n-    command-line-usage: 6.1.3\n-    flatbuffers: 23.3.3\n-    json-bignum: ^0.0.3\n-    pad-left: ^2.1.0\n-    tslib: ^2.5.0\n-  checksum: 67b2791e14d5377b1d160a0d8390decc386e013c517713f8b9c100737a0e478a394086d91a8c846848d4e30289070a119d8e65191998f4c2555b18a29564df50\n-  languageName: node\n-  linkType: hard\n-\n \"@apify/consts@npm:^2.13.0, @apify/consts@npm:^2.9.0\":\n   version: 2.13.0\n   resolution: \"@apify/consts@npm:2.13.0\"\n@@ -11112,6 +11094,41 @@ __metadata:\n   languageName: node\n   linkType: hard\n \n+\"@lancedb/vectordb-darwin-arm64@npm:0.4.20\":\n+  version: 0.4.20\n+  resolution: \"@lancedb/vectordb-darwin-arm64@npm:0.4.20\"\n+  conditions: os=darwin & cpu=arm64\n+  languageName: node\n+  linkType: hard\n+\n+\"@lancedb/vectordb-darwin-x64@npm:0.4.20\":\n+  version: 0.4.20\n+  resolution: \"@lancedb/vectordb-darwin-x64@npm:0.4.20\"\n+  conditions: os=darwin & cpu=x64\n+  languageName: node\n+  linkType: hard\n+\n+\"@lancedb/vectordb-linux-arm64-gnu@npm:0.4.20\":\n+  version: 0.4.20\n+  resolution: \"@lancedb/vectordb-linux-arm64-gnu@npm:0.4.20\"\n+  conditions: os=linux & cpu=arm64\n+  languageName: node\n+  linkType: hard\n+\n+\"@lancedb/vectordb-linux-x64-gnu@npm:0.4.20\":\n+  version: 0.4.20\n+  resolution: \"@lancedb/vectordb-linux-x64-gnu@npm:0.4.20\"\n+  conditions: os=linux & cpu=x64\n+  languageName: node\n+  linkType: hard\n+\n+\"@lancedb/vectordb-win32-x64-msvc@npm:0.4.20\":\n+  version: 0.4.20\n+  resolution: \"@lancedb/vectordb-win32-x64-msvc@npm:0.4.20\"\n+  conditions: os=win32 & cpu=x64\n+  languageName: node\n+  linkType: hard\n+\n \"@langchain/anthropic@*, @langchain/anthropic@workspace:*, @langchain/anthropic@workspace:libs/langchain-anthropic\":\n   version: 0.0.0-use.local\n   resolution: \"@langchain/anthropic@workspace:libs/langchain-anthropic\"\n@@ -11577,7 +11594,7 @@ __metadata:\n     typesense: ^1.5.3\n     usearch: ^1.1.1\n     uuid: ^10.0.0\n-    vectordb: ^0.1.4\n+    vectordb: ^0.9.0\n     voy-search: 0.6.2\n     weaviate-ts-client: ^1.4.0\n     web-auth-library: ^1.0.3\n@@ -13039,6 +13056,13 @@ __metadata:\n   languageName: node\n   linkType: hard\n \n+\"@neon-rs/load@npm:^0.0.74\":\n+  version: 0.0.74\n+  resolution: \"@neon-rs/load@npm:0.0.74\"\n+  checksum: d26ec9b08cdf1a7c5aeefe98f77112d205d11b4005a7934b21fe8fd27528847e08e4749e7e6c3fc05ae9f701175a58c11a095ae6af449634df3991a2c82e1dfa\n+  languageName: node\n+  linkType: hard\n+\n \"@neondatabase/serverless@npm:0.6.0\":\n   version: 0.6.0\n   resolution: \"@neondatabase/serverless@npm:0.6.0\"\n@@ -20774,26 +20798,6 @@ __metadata:\n   languageName: node\n   linkType: hard\n \n-\"apache-arrow@npm:^12.0.0\":\n-  version: 12.0.0\n-  resolution: \"apache-arrow@npm:12.0.0\"\n-  dependencies:\n-    \"@types/command-line-args\": 5.2.0\n-    \"@types/command-line-usage\": 5.0.2\n-    \"@types/node\": 18.14.5\n-    \"@types/pad-left\": 2.1.1\n-    command-line-args: 5.2.1\n-    command-line-usage: 6.1.3\n-    flatbuffers: 23.3.3\n-    json-bignum: ^0.0.3\n-    pad-left: ^2.1.0\n-    tslib: ^2.5.0\n-  bin:\n-    arrow2csv: bin/arrow2csv.js\n-  checksum: 3285189517c2b298cda42852321ce127754918513116eade6e4914c57983f68b6ba96605cfaa2202796d3d6e14755d3b3758f76c1374492affa3d95714eaca40\n-  languageName: node\n-  linkType: hard\n-\n \"apache-arrow@npm:^12.0.1\":\n   version: 12.0.1\n   resolution: \"apache-arrow@npm:12.0.1\"\n@@ -27133,7 +27137,7 @@ __metadata:\n     typescript: ~5.1.6\n     typesense: ^1.5.3\n     uuid: ^10.0.0\n-    vectordb: ^0.1.4\n+    vectordb: ^0.9.0\n     voy-search: 0.6.2\n     weaviate-ts-client: ^2.0.0\n     zod: ^3.22.4\n@@ -42444,13 +42448,32 @@ __metadata:\n   languageName: node\n   linkType: hard\n \n-\"vectordb@npm:^0.1.4\":\n-  version: 0.1.4\n-  resolution: \"vectordb@npm:0.1.4\"\n-  dependencies:\n-    \"@apache-arrow/ts\": ^12.0.0\n-    apache-arrow: ^12.0.0\n-  checksum: 8a40abf4466479b0b9e61687416b5ab232458401917bf9a1d5f3d8ea8c8320ecc5691174f4d4c0cfef0bb6c16328a9088419fd90ac85fd7267dbccdd1f9e55d7\n+\"vectordb@npm:^0.9.0\":\n+  version: 0.9.0\n+  resolution: \"vectordb@npm:0.9.0\"\n+  dependencies:\n+    \"@lancedb/vectordb-darwin-arm64\": 0.4.20\n+    \"@lancedb/vectordb-darwin-x64\": 0.4.20\n+    \"@lancedb/vectordb-linux-arm64-gnu\": 0.4.20\n+    \"@lancedb/vectordb-linux-x64-gnu\": 0.4.20\n+    \"@lancedb/vectordb-win32-x64-msvc\": 0.4.20\n+    \"@neon-rs/load\": ^0.0.74\n+    axios: ^1.4.0\n+  peerDependencies:\n+    \"@apache-arrow/ts\": ^14.0.2\n+    apache-arrow: ^14.0.2\n+  dependenciesMeta:\n+    \"@lancedb/vectordb-darwin-arm64\":\n+      optional: true\n+    \"@lancedb/vectordb-darwin-x64\":\n+      optional: true\n+    \"@lancedb/vectordb-linux-arm64-gnu\":\n+      optional: true\n+    \"@lancedb/vectordb-linux-x64-gnu\":\n+      optional: true\n+    \"@lancedb/vectordb-win32-x64-msvc\":\n+      optional: true\n+  conditions: (os=darwin | os=linux | os=win32) & (cpu=x64 | cpu=arm64)\n   languageName: node\n   linkType: hard\n "
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 2,
        "dependency_files": 2,
        "test_files": 1,
        "unique_directories": 6,
        "max_directory_depth": 5
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "ff0dc580a71268b098e5ac2ee68b7d98317727ed",
            "date": "2025-01-13T22:37:27Z",
            "author_login": "jacoblee93"
          },
          {
            "sha": "4daa67340523a335977d71c89a40275dc13ac354",
            "date": "2025-01-13T22:31:19Z",
            "author_login": "siviter-t"
          },
          {
            "sha": "457c8f2ebbf33447b704fa6808843b3a40847994",
            "date": "2025-01-13T22:23:05Z",
            "author_login": "afirstenberg"
          },
          {
            "sha": "de6362602c9ff9fd7710976ef65e372843d455b9",
            "date": "2025-01-13T22:14:07Z",
            "author_login": "jacoblee93"
          },
          {
            "sha": "dbda6d0d8a6f2bdc8d962ba6c23f65b7c034f93e",
            "date": "2025-01-13T17:54:57Z",
            "author_login": "jacoblee93"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 9.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-89",
    "description": "A vulnerability in the GraphCypherQAChain class of langchain-ai/langchainjs versions 0.2.5 and all versions with this class allows for prompt injection, leading to SQL injection. This vulnerability permits unauthorized data manipulation, data exfiltration, denial of service (DoS) by deleting all data, breaches in multi-tenant security environments, and data integrity issues. Attackers can create, update, or delete nodes and relationships without proper authorization, extract sensitive data, disrupt services, access data across different tenants, and compromise the integrity of the database.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-10-29T13:15:08.883",
    "last_modified": "2024-10-31T18:36:30.140",
    "fix_date": "2024-09-17T02:37:21Z"
  },
  "references": [
    {
      "url": "https://github.com/langchain-ai/langchainjs/commit/615b9d9ab30a2d23a2f95fb8d7acfdf4b41ad7a6",
      "source": "security@huntr.dev",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://huntr.com/bounties/b612defb-1104-4fff-9fef-001ab07c7b2d",
      "source": "security@huntr.dev",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:09:27.104653",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "langchainjs",
    "owner": "langchain-ai",
    "created_at": "2023-02-06T22:50:27Z",
    "updated_at": "2025-01-14T13:19:50Z",
    "pushed_at": "2025-01-13T22:37:28Z",
    "size": 653692,
    "stars": 13158,
    "forks": 2273,
    "open_issues": 145,
    "watchers": 13158,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "main",
      "v0.1",
      "v0.2"
    ],
    "languages": {
      "TypeScript": 8485231,
      "Jupyter Notebook": 602661,
      "HTML": 423960,
      "JavaScript": 268035,
      "Shell": 18694,
      "MDX": 13624,
      "CSS": 8554,
      "Python": 667
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-14T13:23:45.165715"
  }
}