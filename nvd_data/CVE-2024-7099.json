{
  "cve_id": "CVE-2024-7099",
  "github_data": {
    "repository": "netease-youdao/qanything",
    "fix_commit": "a87354f09d93e95350fb45eb343dc75454387554",
    "related_commits": [
      "a87354f09d93e95350fb45eb343dc75454387554"
    ],
    "patch_url": "https://github.com/netease-youdao/qanything/commit/a87354f09d93e95350fb45eb343dc75454387554.patch",
    "fix_commit_details": {
      "sha": "a87354f09d93e95350fb45eb343dc75454387554",
      "commit_date": "2024-07-20T06:59:04Z",
      "author": {
        "login": "mvlttt",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Update mysql_client.py",
        "length": 58,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 57,
        "additions": 33,
        "deletions": 24
      },
      "files": [
        {
          "filename": "qanything_kernel/connector/database/mysql/mysql_client.py",
          "status": "modified",
          "additions": 33,
          "deletions": 24,
          "patch": "@@ -123,7 +123,12 @@ def create_tables_(self):\n                 debug_logger.info(e)\n             else:\n                 raise e\n-        \n+    \n+    def placeholders(self,query,data):\n+        data = data if isinstance(data,list) else [data]\n+        placeholders=','.join(['%s'] * len(data))\n+        return query.format(placeholders)\n+    \n     def check_user_exist_(self, user_id):\n         query = \"SELECT user_id FROM User WHERE user_id = %s\"\n         result = self.execute_query_(query, (user_id,), fetch=True)\n@@ -132,9 +137,8 @@ def check_user_exist_(self, user_id):\n \n     def check_kb_exist(self, user_id, kb_ids):\n         # \u4f7f\u7528\u53c2\u6570\u5316\u67e5\u8be2\n-        placeholders = ','.join(['%s'] * len(kb_ids))\n-        query = \"SELECT kb_id FROM KnowledgeBase WHERE kb_id IN ({}) AND deleted = 0 AND user_id = %s\".format(\n-            placeholders)\n+        query = \"SELECT kb_id FROM KnowledgeBase WHERE kb_id IN ({}) AND deleted = 0 AND user_id = %s\"\n+        query = self.placeholders(query,kb_ids)\n         query_params = kb_ids + [user_id]\n         result = self.execute_query_(query, query_params, fetch=True)\n         debug_logger.info(\"check_kb_exist {}\".format(result))\n@@ -144,9 +148,10 @@ def check_kb_exist(self, user_id, kb_ids):\n \n     def get_file_by_status(self, kb_ids, status):\n         # query = \"SELECT file_name FROM File WHERE kb_id = %s AND deleted = 0 AND status = %s\"\n-        kb_ids_str = ','.join(\"'{}'\".format(str(x)) for x in kb_ids)\n-        query = \"SELECT file_id, file_name FROM File WHERE kb_id IN ({}) AND deleted = 0 AND status = %s\".format(kb_ids_str)\n-        result = self.execute_query_(query, (status,), fetch=True)\n+        query = \"SELECT file_id, file_name FROM File WHERE kb_id IN ({}) AND deleted = 0 AND status = %s\"\n+        query = self.placeholders(query,kb_ids)\n+        query_params = kb_ids + [status]\n+        result = self.execute_query_(query, query_params, fetch=True)\n         # result = self.execute_query_(query, (kb_id, \"gray\"), fetch=True)\n         return result\n \n@@ -156,13 +161,14 @@ def check_file_exist(self, user_id, kb_id, file_ids):\n             debug_logger.info(\"check_file_exist skipped because of empty file_ids\")\n             return []\n         \n-        file_ids_str = ','.join(\"'{}'\".format(str(x)) for x in file_ids)\n         query = \"\"\"SELECT file_id, status FROM File \n                  WHERE deleted = 0\n                  AND file_id IN ({})\n                  AND kb_id = %s \n-                 AND kb_id IN (SELECT kb_id FROM KnowledgeBase WHERE user_id = %s)\"\"\".format(file_ids_str)\n-        result = self.execute_query_(query, (kb_id, user_id), fetch=True)\n+                 AND kb_id IN (SELECT kb_id FROM KnowledgeBase WHERE user_id = %s)\"\"\"\n+        query = self.placeholders(query,file_ids)\n+        query_params = file_ids + [kb_id, user_id]\n+        result = self.execute_query_(query,query_params, fetch=True)\n         debug_logger.info(\"check_file_exist {}\".format(result))\n         return result\n \n@@ -173,15 +179,15 @@ def check_file_exist_by_name(self, user_id, kb_id, file_names):\n         # \u5206\u6279\u5904\u7406file_names\n         for i in range(0, len(file_names), batch_size):\n             batch_file_names = file_names[i:i + batch_size]\n-            placeholders = ','.join(['%s'] * len(batch_file_names))\n+\n             query = \"\"\"\n                 SELECT file_id, file_name, file_size, status FROM File \n                 WHERE deleted = 0\n                 AND file_name IN ({})\n                 AND kb_id = %s \n                 AND kb_id IN (SELECT kb_id FROM KnowledgeBase WHERE user_id = %s)\n-            \"\"\".format(placeholders)\n-\n+            \"\"\"\n+            query = self.placeholders(query,batch_file_names)\n             query_params = batch_file_names + [kb_id, user_id]\n             batch_result = self.execute_query_(query, query_params, fetch=True)\n             debug_logger.info(\"check_file_exist_by_name batch {}: {}\".format(i // batch_size, batch_result))\n@@ -214,21 +220,22 @@ def get_users(self):\n     # [\u77e5\u8bc6\u5e93] \u83b7\u53d6\u6307\u5b9akb_ids\u7684\u77e5\u8bc6\u5e93\n     def get_knowledge_base_name(self, kb_ids):\n         # \u4f7f\u7528\u53c2\u6570\u5316\u67e5\u8be2\n-        placeholders = ','.join(['%s'] * len(kb_ids))\n-        query = \"SELECT user_id, kb_id, kb_name FROM KnowledgeBase WHERE kb_id IN ({}) AND deleted = 0\".format(placeholders)\n+        query = \"SELECT user_id, kb_id, kb_name FROM KnowledgeBase WHERE kb_id IN ({}) AND deleted = 0\"\n+        query = self.placeholders(query,kb_ids)\n         query_params = kb_ids\n         return self.execute_query_(query, query_params, fetch=True)\n \n     # [\u77e5\u8bc6\u5e93] \u5220\u9664\u6307\u5b9a\u77e5\u8bc6\u5e93\n     def delete_knowledge_base(self, user_id, kb_ids):\n         # \u4f7f\u7528\u53c2\u6570\u5316\u67e5\u8be2\n-        placeholders = ','.join(['%s'] * len(kb_ids))\n-        query = \"UPDATE KnowledgeBase SET deleted = 1 WHERE user_id = %s AND kb_id IN ({})\".format(placeholders)\n+        query = \"UPDATE KnowledgeBase SET deleted = 1 WHERE user_id = %s AND kb_id IN ({})\"\n+        query = self.placeholders(query,kb_ids)\n         query_params = [user_id] + kb_ids\n         self.execute_query_(query, query_params, commit=True)\n \n         # \u66f4\u65b0\u6587\u4ef6\u7684\u5220\u9664\u72b6\u6001\u4e5f\u9700\u8981\u4f7f\u7528\u53c2\u6570\u5316\u67e5\u8be2\n-        query = \"UPDATE File SET deleted = 1 WHERE kb_id IN ({}) AND kb_id IN (SELECT kb_id FROM KnowledgeBase WHERE user_id = %s)\".format(placeholders)\n+        query = \"UPDATE File SET deleted = 1 WHERE kb_id IN ({}) AND kb_id IN (SELECT kb_id FROM KnowledgeBase WHERE user_id = %s)\"\n+        query = self.placeholders(query,kb_ids)\n         debug_logger.info(\"delete_knowledge_base: {}\".format(kb_ids))\n         self.execute_query_(query, query_params, commit=True)\n     \n@@ -272,9 +279,10 @@ def update_file_status(self, file_id, status):\n         self.execute_query_(query, (status, file_id), commit=True)\n \n     def from_status_to_status(self, file_ids, from_status, to_status):\n-        file_ids_str = ','.join(\"'{}'\".format(str(x)) for x in file_ids)\n-        query = \"UPDATE File SET status = %s WHERE file_id IN ({}) AND status = %s\".format(file_ids_str)\n-        self.execute_query_(query, (to_status, from_status), commit=True)\n+        query = \"UPDATE File SET status = %s WHERE file_id IN ({}) AND status = %s\"\n+        query = self.placeholders(query,file_ids)\n+        query_params = [to_status]+file_ids + [from_status]\n+        self.execute_query_(query,query_params, commit=True)\n         \n \n     # [\u6587\u4ef6] \u83b7\u53d6\u6307\u5b9a\u77e5\u8bc6\u5e93\u4e0b\u9762\u6240\u6709\u6587\u4ef6\u7684id\u548c\u540d\u79f0\n@@ -284,7 +292,8 @@ def get_files(self, user_id, kb_id):\n \n     # [\u6587\u4ef6] \u5220\u9664\u6307\u5b9a\u6587\u4ef6\n     def delete_files(self, kb_id, file_ids):\n-        file_ids_str = ','.join(\"'{}'\".format(str(x)) for x in file_ids)\n-        query = \"UPDATE File SET deleted = 1 WHERE kb_id = %s AND file_id IN ({})\".format(file_ids_str)\n+        query = \"UPDATE File SET deleted = 1 WHERE kb_id = %s AND file_id IN ({})\"\n+        query = self.placeholders(query,file_ids)\n+        query_params = [kb_id]+file_ids\n         debug_logger.info(\"delete_files: {}\".format(file_ids))\n-        self.execute_query_(query, (kb_id,), commit=True)\n+        self.execute_query_(query, query_params, commit=True)"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 4
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "42cc3f38acd3553f757383388e16416796844301",
            "date": "2024-10-26T12:14:11Z",
            "author_login": "xixihahaliu"
          },
          {
            "sha": "b83818d159d22b89b33d6e54b20c4de51b6d167b",
            "date": "2024-10-23T09:31:02Z",
            "author_login": "EchoWht"
          },
          {
            "sha": "974f9337f9b9c56c12005b86fe9409dc86c9b520",
            "date": "2024-09-27T04:03:28Z",
            "author_login": "xixihahaliu"
          },
          {
            "sha": "6f186acbdb39677ddefdeb2c7864900add0b1b56",
            "date": "2024-09-27T04:02:33Z",
            "author_login": "xixihahaliu"
          },
          {
            "sha": "bf2b8d0307e9c8aab8dcfb3fb9ee52f8613b42e0",
            "date": "2024-09-27T04:01:08Z",
            "author_login": "xixihahaliu"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-89",
    "description": "netease-youdao/qanything version 1.4.1 contains a vulnerability where unsafe data obtained from user input is concatenated in SQL queries, leading to SQL injection. The affected functions include `get_knowledge_base_name`, `from_status_to_status`, `delete_files`, and `get_file_by_status`. An attacker can exploit this vulnerability to execute arbitrary SQL queries, potentially stealing information from the database. The issue is fixed in version 1.4.2.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2024-10-13T21:15:10.957",
    "last_modified": "2024-10-15T12:57:46.880",
    "fix_date": "2024-07-20T06:59:04Z"
  },
  "references": [
    {
      "url": "https://github.com/netease-youdao/qanything/commit/a87354f09d93e95350fb45eb343dc75454387554",
      "source": "security@huntr.dev",
      "tags": []
    },
    {
      "url": "https://huntr.com/bounties/bc98983e-06cc-4a4b-be01-67e5010cb2c1",
      "source": "security@huntr.dev",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:09:02.140915",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "QAnything",
    "owner": "netease-youdao",
    "created_at": "2024-01-03T03:24:18Z",
    "updated_at": "2025-01-14T13:46:03Z",
    "pushed_at": "2024-11-19T03:46:01Z",
    "size": 117819,
    "stars": 12292,
    "forks": 1190,
    "open_issues": 347,
    "watchers": 12292,
    "has_security_policy": false,
    "default_branch": "qanything-v2",
    "protected_branches": [],
    "languages": {
      "Python": 1089509,
      "Shell": 12906,
      "HTML": 7693,
      "Dockerfile": 1029
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "agpl-3.0"
    },
    "collected_at": "2025-01-14T17:27:28.204949"
  }
}