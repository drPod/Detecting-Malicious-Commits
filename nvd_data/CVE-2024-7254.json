{
  "cve_id": "CVE-2024-7254",
  "github_data": {
    "repository": "protocolbuffers/protobuf",
    "fix_commit": "cc8b3483a5584b3301e3d43d17eb59704857ffaa",
    "related_commits": [
      "cc8b3483a5584b3301e3d43d17eb59704857ffaa"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "cc8b3483a5584b3301e3d43d17eb59704857ffaa",
      "commit_date": "2024-07-18T14:41:01Z",
      "author": {
        "login": "protobuf-github-bot",
        "type": "User",
        "stats": {
          "total_commits": 2279,
          "average_weekly_commits": 2.65,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 135
        }
      },
      "commit_message": {
        "title": "Internal change",
        "length": 45,
        "has_description": true,
        "references_issue": false
      },
      "stats": {
        "total": 19,
        "additions": 14,
        "deletions": 5
      },
      "files": [
        {
          "filename": "java/core/src/main/java/com/google/protobuf/ArrayDecoders.java",
          "status": "modified",
          "additions": 1,
          "deletions": 2,
          "patch": "@@ -24,8 +24,7 @@\n @CheckReturnValue\n final class ArrayDecoders {\n \n-  private ArrayDecoders() {\n-  }\n+  private ArrayDecoders() {}\n \n   /**\n    * A helper used to return multiple values in a Java function. Java doesn't natively support"
        },
        {
          "filename": "java/core/src/main/java/com/google/protobuf/InvalidProtocolBufferException.java",
          "status": "modified",
          "additions": 1,
          "deletions": 1,
          "patch": "@@ -132,7 +132,7 @@ public InvalidWireTypeException(String description) {\n   static InvalidProtocolBufferException recursionLimitExceeded() {\n     return new InvalidProtocolBufferException(\n         \"Protocol message had too many levels of nesting.  May be malicious.  \"\n-            + \"Use CodedInputStream.setRecursionLimit() to increase the depth limit.\");\n+            + \"Use setRecursionLimit() to increase the recursion depth limit.\");\n   }\n \n   static InvalidProtocolBufferException sizeLimitExceeded() {"
        },
        {
          "filename": "java/core/src/main/java/com/google/protobuf/MessageSchema.java",
          "status": "modified",
          "additions": 3,
          "deletions": 0,
          "patch": "@@ -3006,6 +3006,7 @@ private <UT, UB, ET extends FieldDescriptorLite<ET>> void mergeFromHelper(\n               unknownFields = unknownFieldSchema.getBuilderFromMessage(message);\n             }\n             // Unknown field.\n+\n             if (unknownFieldSchema.mergeOneFieldFrom(unknownFields, reader)) {\n               continue;\n             }\n@@ -3381,6 +3382,7 @@ private <UT, UB, ET extends FieldDescriptorLite<ET>> void mergeFromHelper(\n               if (unknownFields == null) {\n                 unknownFields = unknownFieldSchema.getBuilderFromMessage(message);\n               }\n+\n               if (!unknownFieldSchema.mergeOneFieldFrom(unknownFields, reader)) {\n                 return;\n               }\n@@ -3397,6 +3399,7 @@ private <UT, UB, ET extends FieldDescriptorLite<ET>> void mergeFromHelper(\n             if (unknownFields == null) {\n               unknownFields = unknownFieldSchema.getBuilderFromMessage(message);\n             }\n+\n             if (!unknownFieldSchema.mergeOneFieldFrom(unknownFields, reader)) {\n               return;\n             }"
        },
        {
          "filename": "java/core/src/main/java/com/google/protobuf/MessageSetSchema.java",
          "status": "modified",
          "additions": 1,
          "deletions": 0,
          "patch": "@@ -278,6 +278,7 @@ boolean parseMessageSetItemOrUnknownField(\n               reader, extension, extensionRegistry, extensions);\n           return true;\n         } else {\n+\n           return unknownFieldSchema.mergeOneFieldFrom(unknownFields, reader);\n         }\n       } else {"
        },
        {
          "filename": "java/core/src/main/java/com/google/protobuf/UnknownFieldSchema.java",
          "status": "modified",
          "additions": 1,
          "deletions": 2,
          "patch": "@@ -55,7 +55,6 @@ abstract class UnknownFieldSchema<T, B> {\n   /** Marks unknown fields as immutable. */\n   abstract void makeImmutable(Object message);\n \n-  /** Merges one field into the unknown fields. */\n   final boolean mergeOneFieldFrom(B unknownFields, Reader reader) throws IOException {\n     int tag = reader.getTag();\n     int fieldNumber = WireFormat.getTagFieldNumber(tag);\n@@ -88,7 +87,7 @@ final boolean mergeOneFieldFrom(B unknownFields, Reader reader) throws IOExcepti\n     }\n   }\n \n-  final void mergeFrom(B unknownFields, Reader reader) throws IOException {\n+  private final void mergeFrom(B unknownFields, Reader reader) throws IOException {\n     while (true) {\n       if (reader.getFieldNumber() == Reader.READ_DONE\n           || !mergeOneFieldFrom(unknownFields, reader)) {"
        },
        {
          "filename": "java/lite/src/test/java/com/google/protobuf/LiteTest.java",
          "status": "modified",
          "additions": 3,
          "deletions": 0,
          "patch": "@@ -10,12 +10,14 @@\n import static com.google.common.truth.Truth.assertThat;\n import static com.google.common.truth.Truth.assertWithMessage;\n import static java.util.Collections.singletonList;\n+import static org.junit.Assert.assertThrows;\n \n import com.google.protobuf.FieldPresenceTestProto.TestAllTypes;\n import com.google.protobuf.UnittestImportLite.ImportEnumLite;\n import com.google.protobuf.UnittestImportPublicLite.PublicImportMessageLite;\n import com.google.protobuf.UnittestLite.ForeignEnumLite;\n import com.google.protobuf.UnittestLite.ForeignMessageLite;\n+import com.google.protobuf.UnittestLite.RecursiveGroup;\n import com.google.protobuf.UnittestLite.RecursiveMessage;\n import com.google.protobuf.UnittestLite.TestAllExtensionsLite;\n import com.google.protobuf.UnittestLite.TestAllTypesLite;\n@@ -50,6 +52,7 @@\n import java.util.Arrays;\n import java.util.Iterator;\n import java.util.List;\n+import java.util.concurrent.atomic.AtomicBoolean;\n import org.junit.Before;\n import org.junit.Test;\n import org.junit.runner.RunWith;"
        },
        {
          "filename": "src/google/protobuf/unittest_lite.proto",
          "status": "modified",
          "additions": 4,
          "deletions": 0,
          "patch": "@@ -625,3 +625,7 @@ message RecursiveMessage {\n   RecursiveMessage recurse = 1;\n   bytes payload = 2;\n }\n+\n+message RecursiveGroup {\n+  RecursiveGroup recurse = 1 [features.message_encoding = DELIMITED];\n+}"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 2,
        "unique_directories": 3,
        "max_directory_depth": 8
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "ae3015c78a0ea3baa76f3ad556c0ecd575f2e618",
            "date": "2025-01-24T23:59:04Z",
            "author_login": "mkruskal-google"
          },
          {
            "sha": "623568724601c20f04386977976544c5d85e0378",
            "date": "2025-01-24T22:38:04Z",
            "author_login": "protobuf-github-bot"
          },
          {
            "sha": "39f13b03decab1e4d4bc9c38b6843cdcdea3621f",
            "date": "2025-01-24T21:57:11Z",
            "author_login": "ClaytonKnittel"
          },
          {
            "sha": "c856c4cf3708ed9bd6b176150b2c464ff62ef25f",
            "date": "2025-01-24T16:38:58Z",
            "author_login": "mkruskal-google"
          },
          {
            "sha": "88681710b5df5e4af9d3e06a505f501813c36207",
            "date": "2025-01-24T13:51:04Z",
            "author_login": "protobuf-github-bot"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": null,
    "cvss_vector": null,
    "cwe_id": "CWE-20",
    "description": "Any project that parses untrusted Protocol Buffers data\u00a0containing an arbitrary number of nested groups / series of SGROUP\u00a0tags can corrupted by exceeding the stack limit i.e. StackOverflow. Parsing nested groups as unknown fields with DiscardUnknownFieldsParser or Java Protobuf Lite parser, or against Protobuf map fields, creates unbounded recursions that can be abused by an attacker.",
    "attack_vector": null,
    "attack_complexity": null
  },
  "temporal_data": {
    "published_date": "2024-09-19T01:15:10.963",
    "last_modified": "2024-12-13T14:15:22.800",
    "fix_date": "2024-07-18T14:41:01Z"
  },
  "references": [
    {
      "url": "https://github.com/protocolbuffers/protobuf/commit/cc8b3483a5584b3301e3d43d17eb59704857ffaa",
      "source": "cve-coordination@google.com",
      "tags": []
    },
    {
      "url": "https://security.netapp.com/advisory/ntap-20241213-0010/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:09:00.135809",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "protobuf",
    "owner": "protocolbuffers",
    "created_at": "2014-08-26T15:52:15Z",
    "updated_at": "2025-01-26T07:56:21Z",
    "pushed_at": "2025-01-25T02:47:49Z",
    "size": 176862,
    "stars": 66416,
    "forks": 15598,
    "open_issues": 274,
    "watchers": 66416,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [
      "3.0.x",
      "3.1.x",
      "3.2.x",
      "3.3.x",
      "3.5.x",
      "3.6.x",
      "3.7.x",
      "3.8.x",
      "3.9.x",
      "3.10.x",
      "3.11.x",
      "3.12.x",
      "3.13.x",
      "3.14.x",
      "3.15.x",
      "3.16.x",
      "3.17.x",
      "3.18.x",
      "3.19.x",
      "3.20.x",
      "4.0.x",
      "21.x",
      "22.x",
      "23.x"
    ],
    "languages": {
      "C++": 13091157,
      "C#": 7505690,
      "C": 4866714,
      "Java": 4537965,
      "Objective-C": 2771483,
      "Python": 1373088,
      "Starlark": 869122,
      "PHP": 516603,
      "Rust": 401032,
      "Ruby": 352464,
      "CMake": 175395,
      "Kotlin": 140283,
      "Shell": 61336,
      "NASL": 28944,
      "Lua": 27008,
      "Swift": 25869,
      "Emacs Lisp": 7886,
      "Vim Script": 3805,
      "Dart": 3076,
      "Batchfile": 2682,
      "Pawn": 1834,
      "Objective-C++": 1505,
      "PowerShell": 794,
      "Awk": 684,
      "Makefile": 580,
      "M4": 438,
      "RenderScript": 1
    },
    "commit_activity": {
      "total_commits_last_year": 2962,
      "avg_commits_per_week": 56.96153846153846,
      "days_active_last_year": 278
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-26T08:11:18.888774"
  }
}