{
  "cve_id": "CVE-2024-8462",
  "github_data": {
    "repository": "windmill-labs/windmill",
    "fix_commit": "acfe7786152f036f2476f93ab5536571514fa9e3",
    "related_commits": [
      "acfe7786152f036f2476f93ab5536571514fa9e3"
    ],
    "patch_url": "https://github.com/windmill-labs/windmill/commit/acfe7786152f036f2476f93ab5536571514fa9e3.patch",
    "fix_commit_details": {
      "sha": "acfe7786152f036f2476f93ab5536571514fa9e3",
      "commit_date": "2024-09-03T10:34:41Z",
      "author": {
        "login": "rubenfiszel",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "fix: prevent brute force attacks on tokens by slowing unauthorized response",
        "length": 75,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 31,
        "additions": 31,
        "deletions": 0
      },
      "files": [
        {
          "filename": "backend/windmill-api/src/users.rs",
          "status": "modified",
          "additions": 31,
          "deletions": 0,
          "patch": "@@ -8,6 +8,7 @@\n \n #![allow(non_snake_case)]\n \n+use std::sync::atomic::{AtomicI64, AtomicU64, Ordering};\n use std::sync::Arc;\n \n use crate::db::ApiAuthed;\n@@ -145,6 +146,7 @@ pub struct ExpiringAuthCache {\n     pub authed: ApiAuthed,\n     pub expiry: chrono::DateTime<chrono::Utc>,\n }\n+\n pub struct AuthCache {\n     cache: Cache<(String, String), ExpiringAuthCache>,\n     db: DB,\n@@ -502,6 +504,32 @@ pub struct Tokened {\n     pub token: String,\n }\n \n+struct BruteForceCounter {\n+    counter: AtomicU64,\n+    last_reset: AtomicI64,\n+}\n+\n+lazy_static! {\n+    static ref BRUTE_FORCE_COUNTER: BruteForceCounter =\n+        BruteForceCounter { last_reset: AtomicI64::new(0), counter: AtomicU64::new(0) };\n+}\n+\n+impl BruteForceCounter {\n+    async fn increment(&self) {\n+        let now = time::OffsetDateTime::now_utc().unix_timestamp();\n+        if self.counter.fetch_add(1, Ordering::Relaxed) > 10000 {\n+            tracing::error!(\n+                \"Brute force attack to find valid token detected, sleeping unauthorized response for 2 seconds\"\n+            );\n+            tokio::time::sleep(std::time::Duration::from_secs(2)).await;\n+        }\n+        if now - self.last_reset.load(Ordering::Relaxed) > 60 {\n+            self.counter.store(0, Ordering::Relaxed);\n+            self.last_reset.store(now, Ordering::Relaxed);\n+        }\n+    }\n+}\n+\n #[async_trait]\n impl<S> FromRequestParts<S> for Tokened\n where\n@@ -526,6 +554,7 @@ where\n                 parts.extensions.insert(tokened.clone());\n                 Ok(tokened)\n             } else {\n+                BRUTE_FORCE_COUNTER.increment().await;\n                 Err((StatusCode::UNAUTHORIZED, \"Unauthorized\".to_owned()))\n             }\n         }\n@@ -625,6 +654,7 @@ where\n                             && (path_vec.len() < 3\n                                 || (path_vec[4] != \"jobs\" && path_vec[4] != \"jobs_u\"))\n                         {\n+                            BRUTE_FORCE_COUNTER.increment().await;\n                             return Err((\n                                 StatusCode::UNAUTHORIZED,\n                                 format!(\"Unauthorized scoped token: {:?}\", authed.scopes),\n@@ -640,6 +670,7 @@ where\n                     }\n                 }\n             }\n+            BRUTE_FORCE_COUNTER.increment().await;\n             Err((StatusCode::UNAUTHORIZED, \"Unauthorized\".to_owned()))\n         }\n     }"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "04fbda28e829db50cd9b1289e997c1ec84c4a566",
            "date": "2025-01-14T17:32:25Z",
            "author_login": "HugoCasa"
          },
          {
            "sha": "8c2f2ebb1e0ff8e0c307e30eb6a49534662cc20c",
            "date": "2025-01-14T16:48:12Z",
            "author_login": "HugoCasa"
          },
          {
            "sha": "2509affc653fe244e7feefc57680a6dc189e9a8f",
            "date": "2025-01-14T12:49:36Z",
            "author_login": "rubenfiszel"
          },
          {
            "sha": "c717a915d6d48fa1ec697c24a4c85c04f4b70d84",
            "date": "2025-01-14T12:46:23Z",
            "author_login": "rubenfiszel"
          },
          {
            "sha": "010928b37f776839dc088d3b570bcfbb30a3b347",
            "date": "2025-01-13T18:00:15Z",
            "author_login": "alpetric"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 3.7,
    "cvss_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N",
    "cwe_id": "CWE-307",
    "description": "A vulnerability was found in Windmill 1.380.0. It has been classified as problematic. Affected is an unknown function of the file backend/windmill-api/src/users.rs of the component HTTP Request Handler. The manipulation leads to improper restriction of excessive authentication attempts. It is possible to launch the attack remotely. The complexity of an attack is rather high. The exploitability is told to be difficult. Upgrading to version 1.390.1 is able to address this issue. The patch is identified as acfe7786152f036f2476f93ab5536571514fa9e3. It is recommended to upgrade the affected component.",
    "attack_vector": "NETWORK",
    "attack_complexity": "HIGH"
  },
  "temporal_data": {
    "published_date": "2024-09-05T13:15:12.050",
    "last_modified": "2024-09-05T17:45:07.877",
    "fix_date": "2024-09-03T10:34:41Z"
  },
  "references": [
    {
      "url": "https://github.com/windmill-labs/windmill/commit/acfe7786152f036f2476f93ab5536571514fa9e3",
      "source": "cna@vuldb.com",
      "tags": []
    },
    {
      "url": "https://github.com/windmill-labs/windmill/releases/tag/v1.390.1",
      "source": "cna@vuldb.com",
      "tags": []
    },
    {
      "url": "https://vuldb.com/?ctiid.276630",
      "source": "cna@vuldb.com",
      "tags": []
    },
    {
      "url": "https://vuldb.com/?id.276630",
      "source": "cna@vuldb.com",
      "tags": []
    },
    {
      "url": "https://vuldb.com/?submit.401826",
      "source": "cna@vuldb.com",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:08:37.466419",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "windmill",
    "owner": "windmill-labs",
    "created_at": "2022-05-05T02:21:17Z",
    "updated_at": "2025-01-14T17:32:30Z",
    "pushed_at": "2025-01-14T17:43:05Z",
    "size": 234386,
    "stars": 11632,
    "forks": 576,
    "open_issues": 334,
    "watchers": 11632,
    "has_security_policy": false,
    "default_branch": "main",
    "protected_branches": [],
    "languages": {
      "HTML": 9298971,
      "Svelte": 4352553,
      "Rust": 2719941,
      "JavaScript": 2018196,
      "TypeScript": 1643269,
      "Python": 104016,
      "CSS": 80982,
      "Shell": 27408,
      "PowerShell": 25211,
      "Dockerfile": 13544,
      "Nix": 9126,
      "Go": 5994,
      "PLpgSQL": 5753,
      "Nushell": 2643,
      "C": 1845,
      "RenderScript": 1
    },
    "commit_activity": {
      "total_commits_last_year": 0,
      "avg_commits_per_week": 0,
      "days_active_last_year": 0
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": false,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "other"
    },
    "collected_at": "2025-01-14T17:51:49.325602"
  }
}