{
  "cve_id": "CVE-2024-8521",
  "github_data": {
    "repository": "wavelog/wavelog",
    "fix_commit": "b31002cec6b71ab5f738881806bb546430ec692e",
    "related_commits": [
      "b31002cec6b71ab5f738881806bb546430ec692e"
    ],
    "patch_url": null,
    "fix_commit_details": {
      "sha": "b31002cec6b71ab5f738881806bb546430ec692e",
      "commit_date": "2024-08-14T07:29:07Z",
      "author": {
        "login": "HB9HIL",
        "type": "User",
        "stats": {
          "total_commits": 2876,
          "average_weekly_commits": 11.019157088122606,
          "total_additions": 0,
          "total_deletions": 0,
          "weeks_active": 66
        }
      },
      "commit_message": {
        "title": "Merge pull request #744 from HB9HIL/xss",
        "length": 39,
        "has_description": false,
        "references_issue": true
      },
      "stats": {
        "total": 279,
        "additions": 132,
        "deletions": 147
      },
      "files": [
        {
          "filename": "application/controllers/Lookup.php",
          "status": "modified",
          "additions": 1,
          "deletions": 3,
          "patch": "@@ -65,9 +65,7 @@ public function search() {\n \n \tpublic function scp() {\n \t\tsession_write_close();\n-\t\tif($_POST['callsign']) {\n-\t\t\t$uppercase_callsign = strtoupper($_POST['callsign']);\n-\t\t}\n+\t\t$uppercase_callsign = strtoupper($this->input->post('callsign', TRUE) ?? '');\n \n \t\t// SCP results from logbook\n \t\t$this->load->model('logbook_model');"
        },
        {
          "filename": "application/controllers/Qso.php",
          "status": "modified",
          "additions": 110,
          "deletions": 118,
          "patch": "@@ -21,7 +21,7 @@ public function index() {\n         // Getting the live/post mode from GET command\n         // 0 = live\n         // 1 = post (manual)\n-        $get_manual_mode = $this->security->xss_clean($this->input->get('manual'));\n+        $get_manual_mode = $this->input->get('manual', TRUE);\n         if ($get_manual_mode == '0' || $get_manual_mode == '1') {\n             $data['manual_mode'] = $get_manual_mode;\n         } else {\n@@ -116,29 +116,29 @@ public function index() {\n \t\t\t// $qso_data = [\n \t\t\t// 18-Jan-2016 - make php v5.3 friendly!\n \t\t\t$qso_data = array(\n-\t\t\t\t'start_date' => $this->input->post('start_date'),\n-\t\t\t\t'start_time' => $this->input->post('start_time'),\n+\t\t\t\t'start_date' => $this->input->post('start_date', TRUE),\n+\t\t\t\t'start_time' => $this->input->post('start_time', TRUE),\n \t\t\t\t'end_time' => $this->input->post('end_time'),\n \t\t\t\t'time_stamp' => time(),\n-\t\t\t\t'band' => $this->input->post('band'),\n-\t\t\t\t'band_rx' => $this->input->post('band_rx'),\n-\t\t\t\t'freq' => $this->input->post('freq_display'),\n-\t\t\t\t'freq_rx' => $this->input->post('freq_display_rx'),\n-\t\t\t\t'mode' => $this->input->post('mode'),\n-\t\t\t\t'sat_name' => $this->input->post('sat_name'),\n-\t\t\t\t'sat_mode' => $this->input->post('sat_mode'),\n-\t\t\t\t'prop_mode' => $this->input->post('prop_mode'),\n-\t\t\t\t'radio' => $this->input->post('radio'),\n-\t\t\t\t'station_profile_id' => $this->input->post('station_profile'),\n-\t\t\t\t'operator_callsign' => $this->input->post('operator_callsign'),\n-\t\t\t\t'transmit_power' => $this->input->post('transmit_power')\n+\t\t\t\t'band' => $this->input->post('band', TRUE),\n+\t\t\t\t'band_rx' => $this->input->post('band_rx', TRUE),\n+\t\t\t\t'freq' => $this->input->post('freq_display', TRUE),\n+\t\t\t\t'freq_rx' => $this->input->post('freq_display_rx', TRUE),\n+\t\t\t\t'mode' => $this->input->post('mode', TRUE),\n+\t\t\t\t'sat_name' => $this->input->post('sat_name', TRUE),\n+\t\t\t\t'sat_mode' => $this->input->post('sat_mode', TRUE),\n+\t\t\t\t'prop_mode' => $this->input->post('prop_mode', TRUE),\n+\t\t\t\t'radio' => $this->input->post('radio', TRUE),\n+\t\t\t\t'station_profile_id' => $this->input->post('station_profile', TRUE),\n+\t\t\t\t'operator_callsign' => $this->input->post('operator_callsign', TRUE),\n+\t\t\t\t'transmit_power' => $this->input->post('transmit_power', TRUE)\n \t\t\t);\n \t\t\t// ];\n \n \t\t\t$this->session->set_userdata($qso_data);\n \n \t\t\t// If SAT name is set make it session set to sat\n-\t\t\tif($this->input->post('sat_name')) {\n+\t\t\tif($this->input->post('sat_name', TRUE)) {\n \t\t\t\t$this->session->set_userdata('prop_mode', 'SAT');\n \t\t\t}\n \n@@ -216,20 +216,20 @@ function winkeysettings() {\n \n     function cwmacrosave(){\n         // Get the data from the form\n-        $function1_name = xss_clean($this->input->post('function1_name'));\n-        $function1_macro = xss_clean($this->input->post('function1_macro'));\n+        $function1_name = $this->input->post('function1_name', TRUE);\n+        $function1_macro = $this->input->post('function1_macro', TRUE);\n \n-        $function2_name = xss_clean($this->input->post('function2_name'));\n-        $function2_macro = xss_clean($this->input->post('function2_macro'));\n+        $function2_name = $this->input->post('function2_name', TRUE);\n+        $function2_macro = $this->input->post('function2_macro', TRUE);\n \n-        $function3_name = xss_clean($this->input->post('function3_name'));\n-        $function3_macro = xss_clean($this->input->post('function3_macro'));\n+        $function3_name = $this->input->post('function3_name', TRUE);\n+        $function3_macro = $this->input->post('function3_macro', TRUE);\n \n-        $function4_name = xss_clean($this->input->post('function4_name'));\n-        $function4_macro = xss_clean($this->input->post('function4_macro'));\n+        $function4_name = $this->input->post('function4_name', TRUE);\n+        $function4_macro = $this->input->post('function4_macro', TRUE);\n \n-        $function5_name = xss_clean($this->input->post('function5_name'));\n-        $function5_macro = xss_clean($this->input->post('function5_macro'));\n+        $function5_name = $this->input->post('function5_name', TRUE);\n+        $function5_macro = $this->input->post('function5_macro', TRUE);\n \n         $data = [\n             'user_id' => $this->session->userdata('user_id'),\n@@ -279,7 +279,7 @@ function edit_ajax() {\n             $this->session->set_flashdata('notice', 'You\\'re not allowed to do that!'); redirect('dashboard');\n         }\n \n-        $id = str_replace('\"', \"\", $this->input->post(\"id\"));\n+        $id = str_replace('\"', \"\", $this->input->post(\"id\", TRUE));\n         $query = $this->logbook_model->qso_info($id);\n \n         $data['qso'] = $query->row();\n@@ -317,8 +317,8 @@ function qsl_rcvd($id, $method) {\n \t}\n \n     function qsl_rcvd_ajax() {\n-        $id = str_replace('\"', \"\", $this->input->post(\"id\"));\n-        $method = str_replace('\"', \"\", $this->input->post(\"method\"));\n+        $id = str_replace('\"', \"\", $this->input->post(\"id\", TRUE));\n+        $method = str_replace('\"', \"\", $this->input->post(\"method\", TRUE));\n \n         $this->load->model('logbook_model');\n         $this->load->model('user_model');\n@@ -338,8 +338,8 @@ function qsl_rcvd_ajax() {\n     }\n \n     function qsl_sent_ajax() {\n-        $id = str_replace('\"', \"\", $this->input->post(\"id\"));\n-        $method = str_replace('\"', \"\", $this->input->post(\"method\"));\n+        $id = str_replace('\"', \"\", $this->input->post(\"id\", TRUE));\n+        $method = str_replace('\"', \"\", $this->input->post(\"method\", TRUE));\n         \n         $this->load->model('logbook_model');\n         $this->load->model('user_model');\n@@ -359,8 +359,8 @@ function qsl_sent_ajax() {\n     }\n \n     function qsl_requested_ajax() {\n-        $id = str_replace('\"', \"\", $this->input->post(\"id\"));\n-        $method = str_replace('\"', \"\", $this->input->post(\"method\"));\n+        $id = str_replace('\"', \"\", $this->input->post(\"id\", TRUE));\n+        $method = str_replace('\"', \"\", $this->input->post(\"method\", TRUE));\n \n         $this->load->model('logbook_model');\n         $this->load->model('user_model');\n@@ -380,8 +380,8 @@ function qsl_requested_ajax() {\n     }\n \n \tfunction qsl_ignore_ajax() {\n-        $id = str_replace('\"', \"\", $this->input->post(\"id\"));\n-        $method = str_replace('\"', \"\", $this->input->post(\"method\"));\n+        $id = str_replace('\"', \"\", $this->input->post(\"id\", TRUE));\n+        $method = str_replace('\"', \"\", $this->input->post(\"method\", TRUE));\n \n         $this->load->model('logbook_model');\n         $this->load->model('user_model');\n@@ -420,7 +420,7 @@ function delete($id) {\n \n     /* Delete QSO */\n     function delete_ajax() {\n-        $id = str_replace('\"', \"\", $this->input->post(\"id\"));\n+        $id = str_replace('\"', \"\", $this->input->post(\"id\", TRUE));\n \n         $this->load->model('logbook_model');\n \tif ($this->logbook_model->check_qso_is_accessible($id)) {\n@@ -450,10 +450,8 @@ public function get_sota() {\n \t\t$this->load->library('sota');\n \t\t$json = [];\n \n-\t\tif (!empty($this->security->xss_clean($this->input->get(\"query\")))) {\n-\t\t\t$query = $_GET['query'] ?? FALSE;\n-\t\t\t$json = $this->sota->get($query);\n-\t\t}\n+        $query = $this->input->get('query', TRUE) ?? FALSE;\n+        $json = $this->sota->get($query);\n \n \t\theader('Content-Type: application/json');\n \t\techo json_encode($json);\n@@ -462,32 +460,30 @@ public function get_sota() {\n \tpublic function get_wwff() {\n         $json = [];\n \n-        if (!empty($this->security->xss_clean($this->input->get(\"query\")))) {\n-            $query = isset($_GET['query']) ? $_GET['query'] : FALSE;\n-            $wwff = strtoupper($query);\n-\n-            $file = 'updates/wwff.txt';\n-\n-            if (is_readable($file)) {\n-                $lines = file($file, FILE_IGNORE_NEW_LINES);\n-                $input = preg_quote($wwff, '~');\n-                $reg = '~^'. $input .'(.*)$~';\n-                $result = preg_grep($reg, $lines);\n-                $json = [];\n-                $i = 0;\n-                foreach ($result as &$value) {\n-                    // Limit to 100 as to not slowdown browser too much\n-                    if (count($json) <= 100) {\n-                        $json[] = [\"name\"=>$value];\n-                    }\n+        $query = $this->input->get('query', TRUE) ?? FALSE;\n+        $wwff = strtoupper($query);\n+\n+        $file = 'updates/wwff.txt';\n+\n+        if (is_readable($file)) {\n+            $lines = file($file, FILE_IGNORE_NEW_LINES);\n+            $input = preg_quote($wwff, '~');\n+            $reg = '~^'. $input .'(.*)$~';\n+            $result = preg_grep($reg, $lines);\n+            $json = [];\n+            $i = 0;\n+            foreach ($result as &$value) {\n+                // Limit to 100 as to not slowdown browser too much\n+                if (count($json) <= 100) {\n+                    $json[] = [\"name\"=>$value];\n                 }\n+            }\n+        } else {\n+            $src = 'assets/resources/wwff.txt';\n+            if (copy($src, $file)) {\n+                $this->get_wwff();\n             } else {\n-                $src = 'assets/resources/wwff.txt';\n-                if (copy($src, $file)) {\n-                    $this->get_wwff();\n-                } else {\n-                    log_message('error', 'Failed to copy source file ('.$src.') to new location. Check if this path has the right permission: '.$file);\n-                }\n+                log_message('error', 'Failed to copy source file ('.$src.') to new location. Check if this path has the right permission: '.$file);\n             }\n         }\n \n@@ -498,32 +494,30 @@ public function get_wwff() {\n \tpublic function get_pota() {\n         $json = [];\n \n-        if (!empty($this->security->xss_clean($this->input->get(\"query\")))) {\n-            $query = isset($_GET['query']) ? $_GET['query'] : FALSE;\n-            $pota = strtoupper($query);\n-\n-            $file = 'updates/pota.txt';\n-\n-            if (is_readable($file)) {\n-                $lines = file($file, FILE_IGNORE_NEW_LINES);\n-                $input = preg_quote($pota, '~');\n-                $reg = '~^'. $input .'(.*)$~';\n-                $result = preg_grep($reg, $lines);\n-                $json = [];\n-                $i = 0;\n-                foreach ($result as &$value) {\n-                    // Limit to 100 as to not slowdown browser too much\n-                    if (count($json) <= 100) {\n-                        $json[] = [\"name\"=>$value];\n-                    }\n+        $query = $this->input->get('query', TRUE) ?? FALSE;\n+        $pota = strtoupper($query);\n+\n+        $file = 'updates/pota.txt';\n+\n+        if (is_readable($file)) {\n+            $lines = file($file, FILE_IGNORE_NEW_LINES);\n+            $input = preg_quote($pota, '~');\n+            $reg = '~^'. $input .'(.*)$~';\n+            $result = preg_grep($reg, $lines);\n+            $json = [];\n+            $i = 0;\n+            foreach ($result as &$value) {\n+                // Limit to 100 as to not slowdown browser too much\n+                if (count($json) <= 100) {\n+                    $json[] = [\"name\"=>$value];\n                 }\n+            }\n+        } else {\n+            $src = 'assets/resources/pota.txt';\n+            if (copy($src, $file)) {\n+                $this->get_pota();\n             } else {\n-                $src = 'assets/resources/pota.txt';\n-                if (copy($src, $file)) {\n-                    $this->get_pota();\n-                } else {\n-                    log_message('error', 'Failed to copy source file ('.$src.') to new location. Check if this path has the right permission: '.$file);\n-                }\n+                log_message('error', 'Failed to copy source file ('.$src.') to new location. Check if this path has the right permission: '.$file);\n             }\n         }\n \n@@ -537,32 +531,30 @@ public function get_pota() {\n     public function get_dok() {\n         $json = [];\n \n-        if (!empty($this->security->xss_clean($this->input->get(\"query\")))) {\n-            $query = isset($_GET['query']) ? $_GET['query'] : FALSE;\n-            $dok = strtoupper($query);\n-\n-            $file = 'updates/dok.txt';\n-\n-            if (is_readable($file)) {\n-                $lines = file($file, FILE_IGNORE_NEW_LINES);\n-                $input = preg_quote($dok, '~');\n-                $reg = '~^'. $input .'(.*)$~';\n-                $result = preg_grep($reg, $lines);\n-                $json = [];\n-                $i = 0;\n-                foreach ($result as &$value) {\n-                    // Limit to 100 as to not slowdown browser too much\n-                    if (count($json) <= 100) {\n-                        $json[] = [\"name\"=>$value];\n-                    }\n+        $query = $this->input->get('query', TRUE) ?? FALSE;\n+        $dok = strtoupper($query);\n+\n+        $file = 'updates/dok.txt';\n+\n+        if (is_readable($file)) {\n+            $lines = file($file, FILE_IGNORE_NEW_LINES);\n+            $input = preg_quote($dok, '~');\n+            $reg = '~^'. $input .'(.*)$~';\n+            $result = preg_grep($reg, $lines);\n+            $json = [];\n+            $i = 0;\n+            foreach ($result as &$value) {\n+                // Limit to 100 as to not slowdown browser too much\n+                if (count($json) <= 100) {\n+                    $json[] = [\"name\"=>$value];\n                 }\n+            }\n+        } else {\n+            $src = 'assets/resources/dok.txt';\n+            if (copy($src, $file)) {\n+                $this->get_dok();\n             } else {\n-                $src = 'assets/resources/dok.txt';\n-                if (copy($src, $file)) {\n-                    $this->get_dok();\n-                } else {\n-                    log_message('error', 'Failed to copy source file ('.$src.') to new location. Check if this path has the right permission: '.$file);\n-                }\n+                log_message('error', 'Failed to copy source file ('.$src.') to new location. Check if this path has the right permission: '.$file);\n             }\n         }\n \n@@ -573,7 +565,7 @@ public function get_dok() {\n    public function get_sota_info() {\n       $this->load->library('sota');\n \n-      $sota = xss_clean($this->input->post('sota'));\n+      $sota = $this->input->post('sota', TRUE);\n \n       header('Content-Type: application/json');\n       echo $this->sota->info($sota);\n@@ -582,7 +574,7 @@ public function get_sota_info() {\n    public function get_wwff_info() {\n       $this->load->library('wwff');\n \n-      $wwff = xss_clean($this->input->post('wwff'));\n+      $wwff = $this->input->post('wwff', TRUE);\n \n       header('Content-Type: application/json');\n       echo $this->wwff->info($wwff);\n@@ -591,15 +583,15 @@ public function get_wwff_info() {\n    public function get_pota_info() {\n       $this->load->library('pota');\n \n-      $pota = xss_clean($this->input->post('pota'));\n+      $pota = $this->input->post('pota', TRUE);\n \n       header('Content-Type: application/json');\n       echo $this->pota->info($pota);\n    }\n \n    public function get_station_power() {\n       $this->load->model('stations');\n-      $stationProfile = xss_clean($this->input->post('stationProfile'));\n+      $stationProfile = $this->input->post('stationProfile', TRUE);\n       $data = array('station_power' => $this->stations->get_station_power($stationProfile));\n \n       header('Content-Type: application/json');\n@@ -620,7 +612,7 @@ public function component_past_contacts() {\n \n    public function get_eqsl_default_qslmsg() {\t// Get ONLY Default eQSL-Message with this function. This is ONLY for QSO relevant!\n \t   $return_json = array();\n-\t   $option_key = $this->input->post('option_key');\n+\t   $option_key = $this->input->post('option_key', TRUE);\n \t   if ($option_key > 0) {\n \t\t   $options_object = $this->user_options_model->get_options('eqsl_default_qslmsg', array('option_name' => 'key_station_id', 'option_key' => $option_key))->result();\n \t\t   $return_json['eqsl_default_qslmsg'] = (isset($options_object[0]->option_value)) ? $options_object[0]->option_value : '';\n@@ -634,7 +626,7 @@ public function unsupported_lotw_prop_modes() {\n \t}\n \n    function check_locator($grid) {\n-      $grid = $this->input->post('locator');\n+      $grid = $this->input->post('locator', TRUE);\n       // Allow empty locator\n       if (preg_match('/^$/', $grid)) return true;\n       // Allow 6-digit locator"
        },
        {
          "filename": "application/controllers/Search.php",
          "status": "modified",
          "additions": 21,
          "deletions": 26,
          "patch": "@@ -75,10 +75,8 @@ public function lotw_unconfirmed() {\n \t}\n \n     function json_result() {\n-          if(isset($_POST['search'])) {\n-\t\t\t  $result = $this->fetchQueryResult($_POST['search'], false);\n-\t\t\t  echo json_encode($result->result_array());\n-\t\t  }\n+\t\t$result = $this->fetchQueryResult(($this->input->post('search', TRUE) ?? ''), FALSE);\n+\t\techo json_encode($result->result_array());\n     }\n \n \tfunction get_stored_queries() {\n@@ -88,17 +86,13 @@ function get_stored_queries() {\n \t}\n \n \tfunction search_result() {\n-\t\tif(isset($_POST['search'])) {\n-\t\t\t$data['results'] = $this->fetchQueryResult($_POST['search'], false);\n-\t\t\t$this->load->view('search/search_result_ajax', $data);\n-\t\t}\n+\t\t$data['results'] = $this->fetchQueryResult(($this->input->post('search', TRUE) ?? ''), FALSE);\n+\t\t$this->load->view('search/search_result_ajax', $data);\n \t}\n \n \tfunction export_to_adif() {\n-\t\tif(isset($_POST['search'])) {\n-\t\t\t$data['qsos'] = $this->fetchQueryResult($_POST['search'], false);\n-\t\t\t$this->load->view('adif/data/exportall', $data);\n-\t\t}\n+\t\t$data['qsos'] = $this->fetchQueryResult(($this->input->post('search', TRUE) ?? ''), FALSE);\n+\t\t$this->load->view('adif/data/exportall', $data);\n \t}\n \n \tfunction export_stored_query_to_adif() {\n@@ -122,20 +116,21 @@ function run_query() {\n \t}\n \n \tfunction save_query() {\n-\t\tif(isset($_POST['search'])) {\n-\t\t\t$query = $this->fetchQueryResult($_POST['search'], true);\n-\n-\t\t\t$data = array(\n-\t\t\t\t'userid' => xss_clean($this->session->userdata('user_id')),\n-\t\t\t\t'query' => $query,\n-\t\t\t\t'description' => xss_clean($_POST['description'])\n-\t\t\t);\n-\n-\t\t\t$this->db->insert('queries', $data);\n-\t\t\t$last_id = $this->db->insert_id();\n-\t\t\theader('Content-Type: application/json');\n-\t\t\techo json_encode(array('id' => $last_id, 'description' => xss_clean($_POST['description'])));\n-\t\t}\n+\t\t$search_param = $this->input->post('search', TRUE);\n+\t\t$description = $this->input->post('description', TRUE);\n+\n+\t\t$query = $this->fetchQueryResult($search_param, TRUE);\n+\n+\t\t$data = array(\n+\t\t\t'userid' => xss_clean($this->session->userdata('user_id')),\n+\t\t\t'query' => $query,\n+\t\t\t'description' => $description\n+\t\t);\n+\n+\t\t$this->db->insert('queries', $data);\n+\t\t$last_id = $this->db->insert_id();\n+\t\theader('Content-Type: application/json');\n+\t\techo json_encode(array('id' => $last_id, 'description' => $description));\n \t}\n \n \tfunction delete_query() {"
        }
      ],
      "file_patterns": {
        "security_files": 0,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 1,
        "max_directory_depth": 2
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "e88a5ac220266b46c04b8d0428859b9ff95c188b",
            "date": "2025-01-01T17:12:26Z",
            "author_login": "HB9HIL"
          },
          {
            "sha": "631875eea6731be35baec0200bdc30794c565178",
            "date": "2025-01-01T17:10:36Z",
            "author_login": "invalid-email-address"
          },
          {
            "sha": "b840778e96b57f5783f26be74ef3592c3e0d84bf",
            "date": "2025-01-01T17:10:15Z",
            "author_login": "HB9HIL"
          },
          {
            "sha": "983de9ffc9dd6d36ae629f18f4befd8b7cc66502",
            "date": "2025-01-01T17:04:24Z",
            "author_login": "kikosgc"
          },
          {
            "sha": "3a5988e3168c1709594747746ec85d570a7dcfbb",
            "date": "2025-01-01T17:09:02Z",
            "author_login": "HB9HIL"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 4.3,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N",
    "cwe_id": "CWE-79",
    "description": "A vulnerability, which was classified as problematic, was found in Wavelog up to 1.8.0. Affected is the function index of the file /qso of the component Live QSO. The manipulation of the argument manual leads to cross site scripting. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. Upgrading to version 1.8.1 is able to address this issue. The patch is identified as b31002cec6b71ab5f738881806bb546430ec692e. It is recommended to upgrade the affected component.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2024-09-07T08:15:11.523",
    "last_modified": "2024-09-09T13:03:38.303",
    "fix_date": "2024-08-14T07:29:07Z"
  },
  "references": [
    {
      "url": "https://github.com/GithubUser843205/CVEs/tree/main/CVE-2024-8521",
      "source": "cna@vuldb.com",
      "tags": []
    },
    {
      "url": "https://github.com/wavelog/wavelog/commit/b31002cec6b71ab5f738881806bb546430ec692e",
      "source": "cna@vuldb.com",
      "tags": []
    },
    {
      "url": "https://github.com/wavelog/wavelog/pull/744",
      "source": "cna@vuldb.com",
      "tags": []
    },
    {
      "url": "https://github.com/wavelog/wavelog/releases/tag/1.8.1",
      "source": "cna@vuldb.com",
      "tags": []
    },
    {
      "url": "https://vuldb.com/?ctiid.276726",
      "source": "cna@vuldb.com",
      "tags": []
    },
    {
      "url": "https://vuldb.com/?id.276726",
      "source": "cna@vuldb.com",
      "tags": []
    },
    {
      "url": "https://vuldb.com/?submit.399819",
      "source": "cna@vuldb.com",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:09:00.102541",
    "processing_status": "enhanced"
  },
  "repository_context": {
    "name": "wavelog",
    "owner": "wavelog",
    "created_at": "2024-01-15T15:37:48Z",
    "updated_at": "2025-01-22T17:09:44Z",
    "pushed_at": "2025-01-24T15:28:25Z",
    "size": 219654,
    "stars": 198,
    "forks": 45,
    "open_issues": 33,
    "watchers": 198,
    "has_security_policy": false,
    "default_branch": "master",
    "protected_branches": [
      "master"
    ],
    "languages": {
      "PHP": 7207944,
      "JavaScript": 4019626,
      "CSS": 157948,
      "HTML": 11984,
      "Shell": 9823,
      "Dockerfile": 1997,
      "Hack": 119
    },
    "commit_activity": {
      "total_commits_last_year": 5857,
      "avg_commits_per_week": 112.63461538461539,
      "days_active_last_year": 317
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": true,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "mit"
    },
    "collected_at": "2025-01-26T07:57:14.933999"
  }
}