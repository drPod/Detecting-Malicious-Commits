{
  "cve_id": "CVE-2025-21611",
  "github_data": {
    "repository": "tgstation/tgstation-server",
    "fix_commit": "e7b1189620baaf03c2d23f6e164d07c7c7d87d57",
    "related_commits": [
      "e7b1189620baaf03c2d23f6e164d07c7c7d87d57"
    ],
    "patch_url": "https://github.com/tgstation/tgstation-server/commit/e7b1189620baaf03c2d23f6e164d07c7c7d87d57.patch",
    "fix_commit_details": {
      "sha": "e7b1189620baaf03c2d23f6e164d07c7c7d87d57",
      "commit_date": "2025-01-03T23:43:02Z",
      "author": {
        "login": "Cyberboss",
        "type": "User",
        "stats": null
      },
      "commit_message": {
        "title": "Fix UserEnabled role being OR'd with action authorization roles FUUUUUCCCKK!!!!",
        "length": 92,
        "has_description": true,
        "references_issue": true
      },
      "stats": {
        "total": 28,
        "additions": 22,
        "deletions": 6
      },
      "files": [
        {
          "filename": "src/Tgstation.Server.Host/Core/Application.cs",
          "status": "modified",
          "additions": 4,
          "deletions": 1,
          "patch": "@@ -298,7 +298,10 @@ void ConfigureNewtonsoftJsonSerializerSettingsForApi(JsonSerializerSettings sett\n \t\t\tservices\n \t\t\t\t.AddScoped<GraphQL.Subscriptions.ITopicEventReceiver, ShutdownAwareTopicEventReceiver>()\n \t\t\t\t.AddGraphQLServer()\n-\t\t\t\t.AddAuthorization()\n+\t\t\t\t.AddAuthorization(\n+\t\t\t\t\toptions => options.AddPolicy(\n+\t\t\t\t\t\tTgsAuthorizeAttribute.PolicyName,\n+\t\t\t\t\t\tbuilder => builder.RequireRole(TgsAuthorizeAttribute.UserEnabledRole)))\n \t\t\t\t.ModifyOptions(options =>\n \t\t\t\t{\n \t\t\t\t\toptions.EnsureAllNodesCanBeResolved = true;"
        },
        {
          "filename": "src/Tgstation.Server.Host/Security/TgsAuthorizeAttribute.cs",
          "status": "modified",
          "additions": 12,
          "deletions": 3,
          "patch": "@@ -15,10 +15,15 @@ namespace Tgstation.Server.Host.Security\n \t[AttributeUsage(AttributeTargets.Class | AttributeTargets.Method, AllowMultiple = true, Inherited = true)]\n \tsealed class TgsAuthorizeAttribute : AuthorizeAttribute\n \t{\n+\t\t/// <summary>\n+\t\t/// Policy used to apply global requirement of <see cref=\"UserEnabledRole\"/>.\n+\t\t/// </summary>\n+\t\tpublic const string PolicyName = \"Policy.UserEnabled\";\n+\n \t\t/// <summary>\n \t\t/// Role used to indicate access to the server is allowed.\n \t\t/// </summary>\n-\t\tpublic const string UserEnabledRole = \"Core.UserEnabled\";\n+\t\tpublic const string UserEnabledRole = \"Role.UserEnabled\";\n \n \t\t/// <summary>\n \t\t/// Gets the <see cref=\"Api.Rights.RightsType\"/> associated with the <see cref=\"TgsAuthorizeAttribute\"/> if any.\n@@ -130,8 +135,12 @@ public TgsAuthorizeAttribute(InstancePermissionSetRights requiredRights)\n \t\tprivate TgsAuthorizeAttribute(IEnumerable<string> roles)\n \t\t{\n \t\t\tvar listRoles = roles.ToList();\n-\t\t\tlistRoles.Add(UserEnabledRole);\n-\t\t\tRoles = String.Join(\",\", listRoles);\n+\t\t\tif (listRoles.Count != 0)\n+\t\t\t{\n+\t\t\t\tRoles = String.Join(\",\", listRoles);\n+\t\t\t}\n+\n+\t\t\tPolicy = PolicyName;\n \t\t}\n \t}\n }"
        },
        {
          "filename": "src/Tgstation.Server.Host/Security/TgsGraphQLAuthorizeAttribute.cs",
          "status": "modified",
          "additions": 6,
          "deletions": 2,
          "patch": "@@ -125,8 +125,12 @@ public TgsGraphQLAuthorizeAttribute(InstancePermissionSetRights requiredRights)\n \t\tprivate TgsGraphQLAuthorizeAttribute(IEnumerable<string> roleNames)\n \t\t{\n \t\t\tvar listRoles = roleNames.ToList();\n-\t\t\tlistRoles.Add(TgsAuthorizeAttribute.UserEnabledRole);\n-\t\t\tRoles = [.. listRoles];\n+\t\t\tif (listRoles.Count != 0)\n+\t\t\t{\n+\t\t\t\tRoles = [.. listRoles];\n+\t\t\t}\n+\n+\t\t\tPolicy = TgsAuthorizeAttribute.PolicyName;\n \t\t\tApply = ApplyPolicy.Validation;\n \t\t}\n \t}"
        }
      ],
      "file_patterns": {
        "security_files": 2,
        "config_files": 0,
        "dependency_files": 0,
        "test_files": 0,
        "unique_directories": 2,
        "max_directory_depth": 3
      },
      "context": {
        "surrounding_commits": [
          {
            "sha": "69bbacc353ab8432b62670032771c44a84f73200",
            "date": "2025-01-04T18:43:46Z",
            "author_login": "tgstation-server-ci[bot]"
          },
          {
            "sha": "71c41ccb76ddcc3c86e7603057d832dd38da2d0c",
            "date": "2025-01-04T18:41:36Z",
            "author_login": "Cyberboss"
          },
          {
            "sha": "43be54c8a1c3be5b62be878b7e2e86108298f48a",
            "date": "2025-01-04T15:12:02Z",
            "author_login": "Cyberboss"
          },
          {
            "sha": "7e5ad85d079c27e522ee4c859fa926412917af75",
            "date": "2025-01-04T15:09:19Z",
            "author_login": "tgstation-server-ci[bot]"
          },
          {
            "sha": "5f3f78ed23562bd479967fd2acd34f9da07e0ed6",
            "date": "2025-01-04T15:07:03Z",
            "author_login": "Cyberboss"
          }
        ]
      }
    }
  },
  "vulnerability_details": {
    "cvss_score": 8.8,
    "cvss_vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
    "cwe_id": "CWE-285",
    "description": "tgstation-server is a production scale tool for BYOND server management. Prior to 6.12.3, roles used to authorize API methods were incorrectly OR'd instead of AND'ed with the role used to determine if a user was enabled. This allows enabled users access to most, but not all, authorized actions regardless of their permissions. Notably, the WriteUsers right is unaffected so users may not use this bug to permanently elevate their account permissions. The fix is release in tgstation-server-v6.12.3.",
    "attack_vector": "NETWORK",
    "attack_complexity": "LOW"
  },
  "temporal_data": {
    "published_date": "2025-01-06T16:15:31.413",
    "last_modified": "2025-01-06T16:15:31.413",
    "fix_date": "2025-01-03T23:43:02Z"
  },
  "references": [
    {
      "url": "https://github.com/tgstation/tgstation-server/commit/e7b1189620baaf03c2d23f6e164d07c7c7d87d57",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/tgstation/tgstation-server/issues/2064",
      "source": "security-advisories@github.com",
      "tags": []
    },
    {
      "url": "https://github.com/tgstation/tgstation-server/security/advisories/GHSA-rf5r-q276-vrc4",
      "source": "security-advisories@github.com",
      "tags": []
    }
  ],
  "collection_metadata": {
    "collected_at": "2025-01-11T23:09:52.963205",
    "processing_status": "raw"
  },
  "repository_context": {
    "name": "tgstation-server",
    "owner": "tgstation",
    "created_at": "2017-05-31T14:11:40Z",
    "updated_at": "2025-01-04T18:43:51Z",
    "pushed_at": "2025-01-14T09:41:57Z",
    "size": 1426067,
    "stars": 67,
    "forks": 82,
    "open_issues": 60,
    "watchers": 67,
    "has_security_policy": false,
    "default_branch": "dev",
    "protected_branches": [
      "dev",
      "gh-pages",
      "master"
    ],
    "languages": {
      "C#": 3774143,
      "DM": 113888,
      "Shell": 8703,
      "Nix": 7660,
      "PowerShell": 5821,
      "Dockerfile": 2025,
      "Makefile": 1694,
      "Roff": 1216,
      "Batchfile": 734,
      "HTML": 589
    },
    "commit_activity": {
      "total_commits_last_year": 799,
      "avg_commits_per_week": 15.365384615384615,
      "days_active_last_year": 152
    },
    "security_features": {
      "has_security_policy": false,
      "has_protected_branches": true,
      "has_wiki": false,
      "has_issues": true,
      "allow_forking": true,
      "is_template": false,
      "license": "agpl-3.0"
    },
    "collected_at": "2025-01-14T13:22:44.285570"
  }
}